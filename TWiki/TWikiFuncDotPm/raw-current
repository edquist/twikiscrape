<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> TWikiFuncDotPm &lt; TWiki &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/TWiki/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/TWiki/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/TWiki/TWikiFuncDotPm?_T=16 Feb 2017" type="application/x-wiki" title="edit TWikiFuncDotPm" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/TWiki/WebRss" />    
<base href="https://twiki.opensciencegrid.org/bin/view/TWiki/TWikiFuncDotPm"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiPref.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twiki_edit.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern_edit.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">
#patternTopBar,
#patternTopBarContentsOuter {
	height:95px; /* top bar height; make room for header columns */
}
#twikinetTopToolBar,
#twikinetTopToolBar table {
	top:95px; /* top bar height */
	height:48px;
}
#patternClearHeaderCenter,
#patternClearHeaderLeft,
#patternClearHeaderRight {
	height:144px; /* 95 + border + 48 */
}
#twikinetLogo {
	position:absolute;
	width:100%;
	height:95px;
}
#twikinetLogo a {
	position:absolute;
	display:block;
	width:179px;
	height:65px;
	background:none;
	top:10px;
	left:340px;
}
#twikinetLogo a:link, 
#twikinetLogo a:visited {
	border:none;
}
#twikinetLogo a:hover {
	border-style:none none solid none;
	border-width:1px;
	border-color:#c4cbd6;
}
#twikinetLogo a span {
	display:none;
}
#patternOuter {
	margin-left:220px;
}
#patternLeftBar {
	width:220px;
	margin-left:-220px;
}
</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#FFD8AA ;
	}
	.patternBookView {
		border-color:#FFD8AA ;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">



</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>
<body class="patternViewPage patternRawViewPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternWrapper"><div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain"><div id="patternClearHeaderCenter"></div>
<div id="patternMainContents"><div class="patternTop"><span class="patternHomePath"><span class="patternHomePathTitle">You are here: </span> <a href="/bin/view/Main/WebHome" class="twikiLink">TWiki    </a><span class='twikiSeparator'>&gt;</span><img src="/twiki/pub/TWiki/TWikiDocGraphics/web-bg-small.gif" border="0" alt="" width="13" height="13" style="background-color:#FFD8AA " />&nbsp;<a href="/bin/view/TWiki/WebHome">TWiki Web</a><span class='twikiSeparator'>&gt;</span><a href="https://twiki.opensciencegrid.org/bin/view/TWiki/TWikiFuncDotPm" title='Topic revision: 3 (25 Oct 2006 - 00:21:59)'>TWikiFuncDotPm</a> <span class='patternRevInfo'>(25 Oct 2006, <a href="/bin/view/Main/TWikiContributor" class="twikiLink">TWikiContributor</a>)</span> (raw view)</span><!-- /patternHomePath--></div><!--/patternTop--><div class="twikiContentHeader"></div><div class="patternContent"><div class="patternTopic"> <textarea name=""  rows="22    " cols="70    " readonly="readonly" style="width: 99%    " id="topic" class="twikiTextarea twikiTextareaRawView">---+ Package =TWiki::Func=

&lt;!-- STARTINCLUDE required for huge TWikiDocumentation topic --&gt;
%STARTINCLUDE%

_Official list of stable TWiki functions for Plugin developers_

This module defines official functions that [[%TWIKIWEB%.TWikiPlugins][Plugins]]
can use to interact with the TWiki engine and content.

Refer to TWiki.EmptyPlugin and lib/TWiki/Plugins/EmptyPlugin.pm for a template Plugin and documentation on how to write a Plugin.

Plugins should *only* use functions published in this module. If you use
functions in other TWiki libraries you might create a security hole and
you will probably need to change your Plugin when you upgrade TWiki.

Deprecated functions will still work in older code, though they should
_not_ be called in new Plugins and should be replaced in older Plugins
as soon as possible.

The version of the TWiki::Func module is defined by the VERSION number of the
TWiki::Plugins module, currently %PLUGINVERSION%. This can be shown
by the =%&lt;nop&gt;PLUGINVERSION%= variable. The &#39;Since&#39; field in the function
documentation refers to the VERSION number and the date that the function
was addded.

__Note:__ Beware! These methods should only ever be called
from the context of a TWiki Plugin. They require a Plugins SESSION context to be
established before they are called, and will not work if simply called from
another TWiki module. For example,
&lt;verbatim&gt;
use TWiki;
print TWiki::Func::getSkin(),&quot;\n&quot;;
&lt;/verbatim&gt;
will fail with =Can&#39;t call method &quot;getSkin&quot; on an undefined value at TWiki/Func.pm line 83=.

If you want to call the methods outside the context of a plugin, you can create a Plugins SESSION object. For example,
the script:
&lt;verbatim&gt;
use TWiki:
$TWiki::Plugins::SESSION = new TWiki();
print TWiki::Func::getSkin(),&quot;\n&quot;;
&lt;/verbatim&gt;
will work happily.


%TOC%

---++ Environment


---+++ getSkin( ) -&gt; $skin

Get the skin path, set by the =SKIN= and =COVER= preferences variables or the =skin= and =cover= CGI parameters

Return: =$skin= Comma-separated list of skins, e.g. =&#39;gnu,tartan&#39;=. Empty string if none.

*Since:* TWiki::Plugins::VERSION 1.000 (29 Jul 2001)


---+++ getUrlHost( ) -&gt; $host

Get protocol, domain and optional port of script URL

Return: =$host= URL host, e.g. =&quot;http://example.com:80&quot;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getScriptUrl( $web, $topic, $script, ... ) -&gt; $url

Compose fully qualified URL
   * =$web=    - Web name, e.g. =&#39;Main&#39;=
   * =$topic=  - Topic name, e.g. =&#39;WebNotify&#39;=
   * =$script= - Script name, e.g. =&#39;view&#39;=
Return: =$url=       URL, e.g. =&quot;http://example.com:80/cgi-bin/view.pl/Main/WebNotify&quot;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getViewUrl( $web, $topic ) -&gt; $url

Compose fully qualified view URL
   * =$web=   - Web name, e.g. =&#39;Main&#39;=. The current web is taken if empty
   * =$topic= - Topic name, e.g. =&#39;WebNotify&#39;=
Return: =$url=      URL, e.g. =&quot;http://example.com:80/cgi-bin/view.pl/Main/WebNotify&quot;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getOopsUrl( $web, $topic, $template, $param1, $param2, $param3, $param4 ) -&gt; $url

Compose fully qualified &#39;oops&#39; dialog URL
   * =$web=                  - Web name, e.g. =&#39;Main&#39;=. The current web is taken if empty
   * =$topic=                - Topic name, e.g. =&#39;WebNotify&#39;=
   * =$template=             - Oops template name, e.g. =&#39;oopsmistake&#39;=. The &#39;oops&#39; is optional; &#39;mistake&#39; will translate to &#39;oopsmistake&#39;.
   * =$param1= ... =$param4= - Parameter values for %&lt;nop&gt;PARAM1% ... %&lt;nop&gt;PARAMn% variables in template, optional
Return: =$url=                     URL, e.g. =&quot;http://example.com:80/cgi-bin/oops.pl/ Main/WebNotify?template=oopslocked&amp;amp;param1=joe&quot;=

This might be used like this:
&lt;verbatim&gt;
   my $url = TWiki::Func::getOopsUrl($web, $topic, &#39;oopsmistake&#39;, &#39;I made a boo-boo&#39;);
   TWiki::Func::redirectCgiQuery( undef, $url );
   return 0;
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)

Since TWiki::Plugins::VERSION 1.1, the recommended approach is to throw an [[TWikiOopsExceptionDotPm][oops exception]].
&lt;verbatim&gt;
   use Error qw( :try );

   throw TWiki::OopsException($web, $topic, undef, 0, [ &#39;I made a boo-boo&#39; ]);
&lt;/verbatim&gt;
and let TWiki handle the cleanup.


---+++ getPubUrlPath( ) -&gt; $path

Get pub URL path

Return: =$path= URL path of pub directory, e.g. =&quot;/pub&quot;=

*Since:* TWiki::Plugins::VERSION 1.000 (14 Jul 2001)


---+++ getCgiQuery( ) -&gt; $query

Get CGI query object. Important: Plugins cannot assume that scripts run under CGI, Plugins must always test if the CGI query object is set

Return: =$query= CGI query object; or 0 if script is called as a shell script

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getSessionValue( $key ) -&gt; $value

Get a session value from the client session module
   * =$key= - Session key
Return: =$value=  Value associated with key; empty string if not set

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 200)


---+++ setSessionValue( $key, $value ) -&gt; $boolean

Set a session value via the client session module
   * =$key=   - Session key
   * =$value= - Value associated with key
Return: true if function succeeded

*Since:* TWiki::Plugins::VERSION 1.000 (17 Aug 2001)


---+++ clearSessionValue( $key ) -&gt; $boolean

Clear a session value via the client session module
   * =$key=   - Session key
Return: true if function succeeded

*Since:* TWiki::Plugins::VERSION 1.1


---+++ getContext() -&gt; \%hash
Get a hash of context identifiers representing the currently active
context.

The context is a set of identifiers that are set
during specific phases of TWiki processing. For example, each of
the standard scripts in the &#39;bin&#39; directory each has a context
identifier - the view script has &#39;view&#39;, the edit script has &#39;edit&#39;
etc. So you can easily tell what &#39;type&#39; of script your Plugin is
being called within. The core context identifiers are listed
in the %TWIKIWEB%.TWikiTemplates topic. Please be careful not to
overwrite any of these identifiers!

Context identifiers can be used to communicate between Plugins, and between
Plugins and templates. For example, in FirstPlugin.pm, you might write:
&lt;verbatim&gt;
sub initPlugin {
   TWiki::Func::getContext()-&gt;{&#39;MyID&#39;} = 1;
   ...
&lt;/verbatim&gt;
This can be used in !SecondPlugin.pm like this:
&lt;verbatim&gt;
sub initPlugin {
   if( TWiki::Func::getContext()-&gt;{&#39;MyID&#39;} ) {
      ...
   }
   ...
&lt;/verbatim&gt;
or in a template, like this:
&lt;verbatim&gt;
%TMPL:DEF{&quot;ON&quot;}% Not off %TMPL:END%
%TMPL:DEF{&quot;OFF&quot;}% Not on %TMPL:END%
%TMPL:P{context=&quot;MyID&quot; then=&quot;ON&quot; else=&quot;OFF&quot;}%
&lt;/verbatim&gt;
or in a topic:
&lt;verbatim&gt;
%IF{&quot;context MyID&quot; then=&quot;MyID is ON&quot; else=&quot;MyID is OFF&quot;}%
&lt;/verbatim&gt;
__Note__: *all* plugins have an *automatically generated* context identifier
if they are installed and initialised. For example, if the FirstPlugin is
working, the context ID &#39;FirstPlugin&#39; will be set.

*Since:* TWiki::Plugins::VERSION 1.1


---++ Preferences


---+++ getPreferencesValue( $key, $web ) -&gt; $value

Get a preferences value from TWiki or from a Plugin
   * =$key= - Preferences key
   * =$web= - Name of web, optional. Current web if not specified; does not apply to settings of Plugin topics
Return: =$value=  Preferences value; empty string if not set

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)

   * Example for Plugin setting:
      * MyPlugin topic has: =* Set COLOR = red=
      * Use =&quot;MYPLUGIN_COLOR&quot;= for =$key=
      * =my $color = TWiki::Func::getPreferencesValue( &quot;MYPLUGIN_COLOR&quot; );=

   * Example for preferences setting:
      * WebPreferences topic has: =* Set WEBBGCOLOR = #FFFFC0=
      * =my $webColor = TWiki::Func::getPreferencesValue( &#39;WEBBGCOLOR&#39;, &#39;Sandbox&#39; );=


---+++ getPluginPreferencesValue( $key ) -&gt; $value

Get a preferences value from your Plugin
   * =$key= - Plugin Preferences key w/o PLUGINNAME_ prefix.
Return: =$value=  Preferences value; empty string if not set

__Note__: This function will will *only* work when called from the Plugin.pm file itself. it *will not work* if called from a sub-package (e.g. TWiki::Plugins::MyPlugin::MyModule)

*Since:* TWiki::Plugins::VERSION 1.021 (27 Mar 2004)


---+++ getPreferencesFlag( $key, $web ) -&gt; $value

Get a preferences flag from TWiki or from a Plugin
   * =$key= - Preferences key
   * =$web= - Name of web, optional. Current web if not specified; does not apply to settings of Plugin topics
Return: =$value=  Preferences flag =&#39;1&#39;= (if set), or =&quot;0&quot;= (for preferences values =&quot;off&quot;=, =&quot;no&quot;= and =&quot;0&quot;=)

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)

   * Example for Plugin setting:
      * MyPlugin topic has: =* Set SHOWHELP = off=
      * Use =&quot;MYPLUGIN_SHOWHELP&quot;= for =$key=
      * =my $showHelp = TWiki::Func::getPreferencesFlag( &quot;MYPLUGIN_SHOWHELP&quot; );=


---+++ getPluginPreferencesFlag( $key ) -&gt; $boolean

Get a preferences flag from your Plugin
   * =$key= - Plugin Preferences key w/o PLUGINNAME_ prefix.
Return: false for preferences values =&quot;off&quot;=, =&quot;no&quot;= and =&quot;0&quot;=, or values not set at all. True otherwise.

__Note__: This function will will *only* work when called from the Plugin.pm file itself. it *will not work* if called from a sub-package (e.g. TWiki::Plugins::MyPlugin::MyModule)

*Since:* TWiki::Plugins::VERSION 1.021 (27 Mar 2004)


---+++ getWikiToolName( ) -&gt; $name

Get toolname as defined in TWiki.cfg

Return: =$name= Name of tool, e.g. =&#39;TWiki&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 2001)


---+++ getMainWebname( ) -&gt; $name

Get name of Main web as defined in TWiki.cfg

Return: =$name= Name, e.g. =&#39;Main&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 2001)


---+++ getTwikiWebname( ) -&gt; $name

Get name of TWiki documentation web as defined in TWiki.cfg

Return: =$name= Name, e.g. =&#39;TWiki&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 2001)


---++ User Handling and Access Control

---+++ getDefaultUserName( ) -&gt; $loginName

Get default user name as defined in the configuration as =DefaultUserLogin=

Return: =$loginName= Default user name, e.g. =&#39;guest&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getWikiName( ) -&gt; $wikiName

Get Wiki name of logged in user

Return: =$wikiName= Wiki Name, e.g. =&#39;JohnDoe&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getWikiUserName( ) -&gt; $wikiName

Get Wiki name of logged in user with web prefix

Return: =$wikiName= Wiki Name, e.g. =&quot;Main.JohnDoe&quot;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ wikiToUserName( $wikiName ) -&gt; $loginName

Translate a Wiki name to a login name based on [[%MAINWEB%.TWikiUsers]] topic
   * =$wikiName= - Wiki name, e.g. =&#39;Main.JohnDoe&#39;= or =&#39;JohnDoe&#39;=
Return: =$loginName=   Login name of user, e.g. =&#39;jdoe&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ userToWikiName( $loginName, $dontAddWeb ) -&gt; $wikiName

Translate a login name to a Wiki name based on [[%MAINWEB%.TWikiUsers]] topic
   * =$loginName=  - Login name, e.g. =&#39;jdoe&#39;=
   * =$dontAddWeb= - Do not add web prefix if =&quot;1&quot;=
Return: =$wikiName=      Wiki name of user, e.g. =&#39;Main.JohnDoe&#39;= or =&#39;JohnDoe&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ isGuest( ) -&gt; $boolean

Test if logged in user is a guest (TWikiGuest)

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ permissionsSet( $web ) -&gt; $boolean

Test if any access restrictions are set for this web, ignoring settings on individual pages
   * =$web= - Web name, required, e.g. =&#39;Sandbox&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 2001)


---+++ checkAccessPermission( $type, $wikiName, $text, $topic, $web ) -&gt; $boolean

Check access permission for a topic based on the [[%TWIKIWEB%.TWikiAccessControl]] rules
   * =$type=     - Access type, e.g. =&#39;VIEW&#39;=, =&#39;CHANGE&#39;=, =&#39;CREATE&#39;=
   * =$wikiName= - WikiName of remote user, e.g. =&quot;PeterThoeny&quot;=. If =$wikiName= is &#39;&#39;, 0 or undef then access is always *permitted*.
   * =$text=     - Topic text, optional. If &#39;perl false&#39; (undef, 0 or &#39;&#39;), topic =$web.$topic= is consulted
   * =$topic=    - Topic name, required, e.g. =&#39;PrivateStuff&#39;=
   * =$web=      - Web name, required, e.g. =&#39;Sandbox&#39;=
A perl true result indicates that access is permitted.

*Since:* TWiki::Plugins::VERSION 1.000 (27 Feb 2001)


---++ Webs, Topics and Attachments


---+++ getListOfWebs( $filter ) -&gt; @webs
   * =$filter= - spec of web types to recover
Gets a list of webs, filtered according to the spec in the $filter,
which may include one of:
   1 &#39;user&#39; (for only user webs)
   2 &#39;template&#39; (for only template webs i.e. those starting with &quot;_&quot;)
=$filter= may also contain the word &#39;public&#39; which will further filter
out webs that have NOSEARCHALL set on them.
&#39;allowed&#39; filters out webs the current user can&#39;t read.

For example, the deprecated getPublicWebList function can be duplicated
as follows:
&lt;verbatim&gt;
   my @webs = TWiki::Func::getListOfWebs( &quot;user,public&quot; );
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---+++ webExists( $web ) -&gt; $boolean

Test if web exists
   * =$web= - Web name, required, e.g. =&#39;Sandbox&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (14 Jul 2001)


---+++ createWeb( $newWeb, $baseWeb, $opts )

   * =$newWeb= is the name of the new web.
   * =$baseWeb= is the name of an existing web (a template web). If the base web is a system web, all topics in it will be copied into the new web. If it is a normal web, only topics starting with &#39;Web&#39; will be copied. If no base web is specified, an empty web (with no topics) will be created. If it is specified but does not exist, an error will be thrown.
   * =$opts= is a ref to a hash that contains settings to be modified in
the web preferences topic in the new web.

&lt;verbatim&gt;
use Error qw( :try );
use TWiki::AccessControlException;

try {
    TWiki::Func::createWeb( &quot;Newweb&quot; );
} catch Error::Simple with {
    my $e = shift;
    # see documentation on Error::Simple
} catch TWiki::AccessControlException with {
    my $e = shift;
    # see documentation on TWiki::AccessControlException
} otherwise {
    ...
};
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---+++ moveWeb( $oldName, $newName )

Move (rename) a web.

&lt;verbatim&gt;
use Error qw( :try );
use TWiki::AccessControlException;

try {
    TWiki::Func::moveWeb( &quot;Oldweb&quot;, &quot;Newweb&quot; );
} catch Error::Simple with {
    my $e = shift;
    # see documentation on Error::Simple
} catch TWiki::AccessControlException with {
    my $e = shift;
    # see documentation on TWiki::AccessControlException
} otherwise {
    ...
};
&lt;/verbatim&gt;

To delete a web, move it to a subweb of =Trash=
&lt;verbatim&gt;
TWiki::Func::moveWeb( &quot;Deadweb&quot;, &quot;Trash.Deadweb&quot; );
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---+++ getTopicList( $web ) -&gt; @topics

Get list of all topics in a web
   * =$web= - Web name, required, e.g. =&#39;Sandbox&#39;=
Return: =@topics= Topic list, e.g. =( &#39;WebChanges&#39;,  &#39;WebHome&#39;, &#39;WebIndex&#39;, &#39;WebNotify&#39; )=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ topicExists( $web, $topic ) -&gt; $boolean

Test if topic exists
   * =$web=   - Web name, optional, e.g. =&#39;Main&#39;=.
   * =$topic= - Topic name, required, e.g. =&#39;TokyoOffice&#39;=, or =&quot;Main.TokyoOffice&quot;=
$web and $topic are parsed as described in the documentation for =normalizeWebTopicName=.

*Since:* TWiki::Plugins::VERSION 1.000 (14 Jul 2001)


---+++ checkTopicEditLock( $web, $topic ) -&gt; ( $oopsUrl, $loginName, $unlockTime )
Check if a lease has been taken by some other user.
   * =$web= Web name, e.g. =&quot;Main&quot;=, or empty
   * =$topic= Topic name, e.g. =&quot;MyTopic&quot;=, or =&quot;Main.MyTopic&quot;=
Return: =( $oopsUrl, $loginName, $unlockTime )= - The =$oopsUrl= for calling redirectCgiQuery(), user&#39;s =$loginName=, and estimated =$unlockTime= in minutes, or ( &#39;&#39;, &#39;&#39;, 0 ) if no lease exists.

*Since:* TWiki::Plugins::VERSION 1.010 (31 Dec 2002)


---+++ setTopicEditLock( $web, $topic, $lock )
   * =$web= Web name, e.g. =&quot;Main&quot;=, or empty
   * =$topic= Topic name, e.g. =&quot;MyTopic&quot;=, or =&quot;Main.MyTopic&quot;=
   * =$lock= 1 to lease the topic, 0 to clear the lease=

Takes out a &quot;lease&quot; on the topic. The lease doesn&#39;t prevent
anyone from editing and changing the topic, but it does redirect them
to a warning screen, so this provides some protection. The =edit= script
always takes out a lease.

It is *impossible* to fully lock a topic. Concurrent changes will be
merged.

*Since:* TWiki::Plugins::VERSION 1.010 (31 Dec 2002)


---+++ saveTopic( $web, $topic, $meta, $text, $options ) -&gt; $error
   * =$web= - web for the topic
   * =$topic= - topic name
   * =$meta= - reference to TWiki::Meta object
   * =$text= - text of the topic (without embedded meta-data!!!
   * =\%options= - ref to hash of save options
     =\%options= may include:
     | =dontlog= | don&#39;t log this change in twiki log |
     | =comment= | comment for save |
     | =minor= | True if this is a minor change, and is not to be notified |
Return: error message or undef.

*Since:* TWiki::Plugins::VERSION 1.000 (29 Jul 2001)

For example,
&lt;verbatim&gt;
my( $meta, $text ) = TWiki::Func::readTopic( $web, $topic )
$text =~ s/APPLE/ORANGE/g;
TWiki::Func::saveTopic( $web, $topic, $meta, $text, { comment =&gt; &#39;refruited&#39; } );
&lt;/verbatim&gt;

__Note:__ Plugins handlers ( e.g. =beforeSaveHandler= ) will be called as
appropriate.


---+++ saveTopicText( $web, $topic, $text, $ignorePermissions, $dontNotify ) -&gt; $oopsUrl

Save topic text, typically obtained by readTopicText(). Topic data usually includes meta data; the file attachment meta data is replaced by the meta data from the topic file if it exists.
   * =$web=                - Web name, e.g. =&#39;Main&#39;=, or empty
   * =$topic=              - Topic name, e.g. =&#39;MyTopic&#39;=, or =&quot;Main.MyTopic&quot;=
   * =$text=               - Topic text to save, assumed to include meta data
   * =$ignorePermissions=  - Set to =&quot;1&quot;= if checkAccessPermission() is already performed and OK
   * =$dontNotify=         - Set to =&quot;1&quot;= if not to notify users of the change
Return: =$oopsUrl=               Empty string if OK; the =$oopsUrl= for calling redirectCgiQuery() in case of error

This method is a lot less efficient and much more dangerous than =saveTopic=.

*Since:* TWiki::Plugins::VERSION 1.010 (31 Dec 2002)

&lt;verbatim&gt;
my $text = TWiki::Func::readTopicText( $web, $topic );

# check for oops URL in case of error:
if( $text =~ /^http.*?\/oops/ ) {
    TWiki::Func::redirectCgiQuery( $query, $text );
    return;
}
# do topic text manipulation like:
$text =~ s/old/new/g;
# do meta data manipulation like:
$text =~ s/(META\:FIELD.*?name\=\&quot;TopicClassification\&quot;.*?value\=\&quot;)[^\&quot;]*/$1BugResolved/;
$oopsUrl = TWiki::Func::saveTopicText( $web, $topic, $text ); # save topic text
&lt;/verbatim&gt;


---+++ moveTopic( $web, $topic, $newWeb, $newTopic )
   * =$web= source web - required
   * =$topic= source topic - required
   * =$newWeb= dest web
   * =$newTopic= dest topic
Renames the topic. Throws an exception if something went wrong.
If $newWeb is undef, it defaults to $web. If $newTopic is undef, it defaults
to $topic.

The destination topic must not already exist.

Rename a topic to the $TWiki::cfg{TrashWebName} to delete it.

*Since:* TWiki::Plugins::VERSION 1.1

&lt;verbatim&gt;
use Error qw( :try );

try {
    moveTopic( &quot;Work&quot;, &quot;TokyoOffice&quot;, &quot;Trash&quot;, &quot;ClosedOffice&quot; );
} catch Error::Simple with {
    my $e = shift;
    # see documentation on Error::Simple
} catch TWiki::AccessControlException with {
    my $e = shift;
    # see documentation on TWiki::AccessControlException
} otherwise {
    ...
};
&lt;/verbatim&gt;


---+++ getRevisionInfo($web, $topic, $rev, $attachment ) -&gt; ( $date, $user, $rev, $comment ) 
Get revision info of a topic or attachment
   * =$web= - Web name, optional, e.g. =&#39;Main&#39;=
   * =$topic=   - Topic name, required, e.g. =&#39;TokyoOffice&#39;=
   * =$rev=     - revsion number, or tag name (can be in the format 1.2, or just the minor number)
   * =$attachment=                 -attachment filename
Return: =( $date, $user, $rev, $comment )= List with: ( last update date, login name of last user, minor part of top revision number ), e.g. =( 1234561, &#39;phoeny&#39;, &quot;5&quot; )=
| $date | in epochSec |
| $user | Wiki name of the author (*not* login name) |
| $rev | actual rev number |
| $comment | WHAT COMMENT? |

NOTE: if you are trying to get revision info for a topic, use
=$meta-&gt;getRevisionInfo= instead if you can - it is significantly
more efficient, and returns a user object that contains other user
information.

NOTE: prior versions of TWiki may under some circumstances have returned
the login name of the user rather than the wiki name; the code documentation
was totally unclear, and we have been unable to establish the intent.
However the wikiname is obviously more useful, so that is what is returned.

*Since:* TWiki::Plugins::VERSION 1.000 (29 Jul 2001)


---+++ getRevisionAtTime( $web, $topic, $time ) -&gt; $rev

Get the revision number of a topic at a specific time.
   * =$web= - web for topic
   * =$topic= - topic
   * =$time= - time (in epoch secs) for the rev
Return: Single-digit revision number, or undef if it couldn&#39;t be determined
(either because the topic isn&#39;t that old, or there was a problem)

*Since:* TWiki::Plugins::VERSION 1.1


---+++ readTopic( $web, $topic, $rev ) -&gt; ( $meta, $text )

Read topic text and meta data, regardless of access permissions.
   * =$web= - Web name, required, e.g. =&#39;Main&#39;=
   * =$topic= - Topic name, required, e.g. =&#39;TokyoOffice&#39;=
   * =$rev= - revision to read (default latest)
Return: =( $meta, $text )= Meta data object and topic text

=$meta= is a perl &#39;object&#39; of class =TWiki::Meta=. This class is
fully documented in the source code documentation shipped with the
release, or can be inspected in the =lib/TWiki/Meta.pm= file.

This method *ignores* topic access permissions. You should be careful to use =checkAccessPermissions= to ensure the current user has read access to the topic.

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ readTopicText( $web, $topic, $rev, $ignorePermissions ) -&gt; $text

Read topic text, including meta data
   * =$web=                - Web name, e.g. =&#39;Main&#39;=, or empty
   * =$topic=              - Topic name, e.g. =&#39;MyTopic&#39;=, or =&quot;Main.MyTopic&quot;=
   * =$rev=                - Topic revision to read, optional. Specify the minor part of the revision, e.g. =&quot;5&quot;=, not =&quot;1.5&quot;=; the top revision is returned if omitted or empty.
   * =$ignorePermissions=  - Set to =&quot;1&quot;= if checkAccessPermission() is already performed and OK; an oops URL is returned if user has no permission
Return: =$text=                  Topic text with embedded meta data; an oops URL for calling redirectCgiQuery() is returned in case of an error

This method is more efficient than =readTopic=, but returns meta-data embedded in the text. Plugins authors must be very careful to avoid damaging meta-data. You are recommended to use readTopic instead, which is a lot safer..

*Since:* TWiki::Plugins::VERSION 1.010 (31 Dec 2002)


---+++ attachmentExists( $web, $topic, $attachment ) -&gt; $boolean

Test if attachment exists
   * =$web=   - Web name, optional, e.g. =Main=.
   * =$topic= - Topic name, required, e.g. =TokyoOffice=, or =Main.TokyoOffice=
   * =$attachment= - attachment name, e.g.=logo.gif=
$web and $topic are parsed as described in the documentation for =normalizeWebTopicName=.

*Since:* TWiki::Plugins::VERSION 1.1


---+++ readAttachment( $web, $topic, $name, $rev ) -&gt; $data
   * =$web= - web for topic
   * =$topic= - topic
   * =$name= - attachment name
   * =$rev= - revision to read (default latest)
Read an attachment from the store for a topic, and return it as a string. The
names of attachments on a topic can be recovered from the meta-data returned
by =readTopic=. If the attachment does not exist, or cannot be read, undef
will be returned. If the revision is not specified, the latest version will
be returned.

View permission on the topic is required for the
read to be successful.  Access control violations are flagged by a
TWiki::AccessControlException. Permissions are checked for the current user.

&lt;verbatim&gt;
my( $meta, $text ) = TWiki::Func::readTopic( $web, $topic );
my @attachments = $meta-&gt;find( &#39;FILEATTACHMENT&#39; );
foreach my $a ( @attachments ) {
   try {
       my $data = TWiki::Func::readAttachment( $web, $topic, $a-&gt;{name} );
       ...
   } catch TWiki::AccessControlException with {
   };
}
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---+++ saveAttachment( $web, $topic, $attachment, $opts )
   * =$web= - web for topic
   * =$topic= - topic to atach to
   * =$attachment= - name of the attachment
   * =$opts= - Ref to hash of options
=$opts= may include:
| =dontlog= | don&#39;t log this change in twiki log |
| =comment= | comment for save |
| =hide= | if the attachment is to be hidden in normal topic view |
| =stream= | Stream of file to upload |
| =file= | Name of a file to use for the attachment data. ignored if stream is set. Local file on the server. |
| =filepath= | Client path to file |
| =filesize= | Size of uploaded data |
| =filedate= | Date |

Save an attachment to the store for a topic. On success, returns undef. If there is an error, an exception will be thrown.

&lt;verbatim&gt;
    try {
        TWiki::Func::saveAttachment( $web, $topic, &#39;image.gif&#39;,
                                     { file =&gt; &#39;image.gif&#39;,
                                       comment =&gt; &#39;Picture of Health&#39;,
                                       hide =&gt; 1 } );
   } catch Error::Simple with {
      # see documentation on Error
   } otherwise {
      ...
   };
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---+++ moveAttachment( $web, $topic, $attachment, $newWeb, $newTopic, $newAttachment )
   * =$web= source web - required
   * =$topic= source topic - required
   * =$attachment= source attachment - required
   * =$newWeb= dest web
   * =$newTopic= dest topic
   * =$newAttachment= dest attachment
Renames the topic. Throws an exception on error or access violation.
If $newWeb is undef, it defaults to $web. If $newTopic is undef, it defaults
to $topic. If $newAttachment is undef, it defaults to $attachment. If all of $newWeb, $newTopic and $newAttachment are undef, it is an error.

The destination topic must already exist, but the destination attachment must
*not* exist.

Rename an attachment to $TWiki::cfg{TrashWebName}.TrashAttament to delete it.

&lt;verbatim&gt;
use Error qw( :try );

try {
   # move attachment between topics
   moveAttachment( &quot;Countries&quot;, &quot;Germany&quot;, &quot;AlsaceLorraine.dat&quot;,
                     &quot;Countries&quot;, &quot;France&quot; );
   # Note destination attachment name is defaulted to the same as source
} catch TWiki::AccessControlException with {
   my $e = shift;
   # see documentation on TWiki::AccessControlException
} catch Error::Simple with {
   my $e = shift;
   # see documentation on Error::Simple
};
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---++ Assembling Pages


---+++ readTemplate( $name, $skin ) -&gt; $text

Read a template or skin. Embedded [[%TWIKIWEB%.TWikiTemplates][template directives]] get expanded
   * =$name= - Template name, e.g. =&#39;view&#39;=
   * =$skin= - Comma-separated list of skin names, optional, e.g. =&#39;print&#39;=
Return: =$text=    Template text

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ loadTemplate ( $name, $skin, $web ) -&gt; $text

   * =$name= - template file name
   * =$skin= - comma-separated list of skins to use (default: current skin)
   * =$web= - the web to look in for topics that contain templates (default: current web)
Return: expanded template text (what&#39;s left after removal of all %TMPL:DEF% statements)

*Since:* TWiki::Plugins::VERSION 1.1

Reads a template and extracts template definitions, adding them to the
list of loaded templates, overwriting any previous definition.

How TWiki searches for templates is described in TWikiTemplates.

If template text is found, extracts include statements and fully expands them.


---+++ expandTemplate( $def  ) -&gt; $string
Do a %TMPL:P{$def}%, only expanding the template (not expanding any variables other than %TMPL)
   * =$def= - template name
Return: the text of the expanded template

*Since:* TWiki::Plugins::VERSION 1.1

A template is defined using a %TMPL:DEF% statement in a template
file. See the documentation on TWiki templates for more information.


---+++ writeHeader( $query, $contentLength )

Prints a basic content-type HTML header for text/html to standard out
   * =$query= - CGI query object. If not given, the default CGI query will be used. In most cases you should _not_ pass this parameter.
   * =$contentLength= - Length of content
Return:             none

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ redirectCgiQuery( $query, $url )

Redirect to URL
   * =$query= - CGI query object. Ignored, only there for compatibility. The session CGI query object is used instead.
   * =$url=   - URL to redirect to
Return:             none, never returns

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ addToHEAD( $id, $header )
Adds =$header= to the HTML header (the &lt;head&gt; tag).
This is useful for Plugins that want to include some javascript custom css.
   * =$id= - Unique ID to prevent the same HTML from being duplicated. Plugins should use a prefix to prevent name clashes (e.g EDITTABLEPLUGIN_JSCALENDAR)
   * =$header= - the HTML to be added to the &lt;head&gt; section. The HTML must be valid in a HEAD tag - no checks are performed.

All TWiki variables present in =$header= will be expanded before being inserted into the =&lt;head&gt;= section.

Note that this is _not_ the same as the HTTP header, which is modified through the Plugins =modifyHeaderHandler=.

*Since:* TWiki::Plugins::VERSION 1.1

example:
&lt;verbatim&gt;
TWiki::Func::addToHEAD(&#39;PATTERN_STYLE&#39;,&#39;&lt;link id=&quot;twikiLayoutCss&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;%PUBURL%/TWiki/PatternSkin/layout.css&quot; media=&quot;all&quot; /&gt;&#39;)
&lt;/verbatim&gt;


---+++ expandCommonVariables( $text, $topic, $web ) -&gt; $text

Expand all common =%&lt;nop&gt;VARIABLES%=
   * =$text=  - Text with variables to expand, e.g. =&#39;Current user is %&lt;nop&gt;WIKIUSER%&#39;=
   * =$topic= - Current topic name, e.g. =&#39;WebNotify&#39;=
   * =$web=   - Web name, optional, e.g. =&#39;Main&#39;=. The current web is taken if missing
Return: =$text=     Expanded text, e.g. =&#39;Current user is &lt;nop&gt;TWikiGuest&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)

See also: expandVariablesOnTopicCreation


---+++ renderText( $text, $web ) -&gt; $text

Render text from TWiki markup into XHTML as defined in [[%TWIKIWEB%.TextFormattingRules]]
   * =$text= - Text to render, e.g. =&#39;*bold* text and =fixed font=&#39;=
   * =$web=  - Web name, optional, e.g. =&#39;Main&#39;=. The current web is taken if missing
Return: =$text=    XHTML text, e.g. =&#39;&amp;lt;b&gt;bold&amp;lt;/b&gt; and &amp;lt;code&gt;fixed font&amp;lt;/code&gt;&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ internalLink( $pre, $web, $topic, $label, $anchor, $createLink ) -&gt; $text

Render topic name and link label into an XHTML link. Normally you do not need to call this funtion, it is called internally by =renderText()=
   * =$pre=        - Text occuring before the TWiki link syntax, optional
   * =$web=        - Web name, required, e.g. =&#39;Main&#39;=
   * =$topic=      - Topic name to link to, required, e.g. =&#39;WebNotify&#39;=
   * =$label=      - Link label, required. Usually the same as =$topic=, e.g. =&#39;notify&#39;=
   * =$anchor=     - Anchor, optional, e.g. =&#39;#Jump&#39;=
   * =$createLink= - Set to =&#39;1&#39;= to add question linked mark after topic name if topic does not exist;&lt;br /&gt; set to =&#39;0&#39;= to suppress link for non-existing topics
Return: =$text=          XHTML anchor, e.g. =&#39;&amp;lt;a href=&#39;/cgi-bin/view/Main/WebNotify#Jump&#39;&gt;notify&amp;lt;/a&gt;&#39;=

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---++ E-mail

---+++ sendEmail ( $text, $retries ) -&gt; $error
   * =$text= - text of the mail, including MIME headers
   * =$retries= - number of times to retry the send (default 1)
Send an e-mail specified as MIME format content. To specify MIME
format mails, you create a string that contains a set of header
lines that contain field definitions and a message body such as:
&lt;verbatim&gt;
To: liz@windsor.gov.uk
From: serf@hovel.net
CC: george@whitehouse.gov
Subject: Revolution

Dear Liz,

Please abolish the monarchy (with King George&#39;s permission, of course)

Thanks,

A. Peasant
&lt;/verbatim&gt;
Leave a blank line between the last header field and the message body.

*Since:* TWiki::Plugins::VERSION 1.1


---+++ wikiToEmail( $wikiName ) -&gt; $email
   * =$wikiName= - wiki name of the user
Get the e-mail address(es) of the named user. If the user has multiple
e-mail addresses (for example, the user is a group), then the list will
be comma-separated.

*Since:* TWiki::Plugins::VERSION 1.1


---++ Creating New Topics


---+++ expandVariablesOnTopicCreation ( $text ) -&gt; $text
Expand the limited set of variables that are always expanded during topic creation
   * =$text= - the text to process
Return: text with variables expanded

*Since:* TWiki::Plugins::VERSION 1.1

Expands only the variables expected in templates that must be statically
expanded in new content.

The expanded variables are:
   * =%&lt;nop&gt;DATE%= Signature-format date
   * =%&lt;nop&gt;SERVERTIME%= See TWikiVariables
   * =%&lt;nop&gt;GMTIME%= See TWikiVariables
   * =%&lt;nop&gt;USERNAME%= Base login name
   * =%&lt;nop&gt;WIKINAME%= Wiki name
   * =%&lt;nop&gt;WIKIUSERNAME%= Wiki name with prepended web
   * =%&lt;nop&gt;URLPARAM{...}%= - Parameters to the current CGI query
   * =%&lt;nop&gt;NOP%= No-op

See also: expandVariables


---++ Special handlers
Special handlers can be defined to make functions in plugins behave as if they were built-in to TWiki.


---+++ registerTagHandler( $var, \&amp;fn, $syntax )
Should only be called from initPlugin.

Register a function to handle a simple variable. Handles both %&lt;nop&gt;VAR% and %&lt;nop&gt;VAR{...}%. Registered variables are treated the same as TWiki internal variables, and are expanded at the same time. This is a _lot_ more efficient than using the =commonTagsHandler=.
   * =$var= - The name of the variable, i.e. the &#39;MYVAR&#39; part of %&lt;nop&gt;MYVAR%. The variable name *must* match /^[A-Z][A-Z0-9_]*$/ or it won&#39;t work.
   * =\&amp;fn= - Reference to the handler function.
   * =$syntax= can be &#39;classic&#39; (the default) or &#39;context-free&#39;. &#39;classic&#39; syntax is appropriate where you want the variable to support classic TWiki syntax i.e. to accept the standard =%&lt;nop&gt;MYVAR{ &quot;unnamed&quot; param1=&quot;value1&quot; param2=&quot;value2&quot; }%= syntax, as well as an unquoted default parameter, such as =%&lt;nop&gt;MYVAR{unquoted parameter}%=. If your variable will only use named parameters, you can use &#39;context-free&#39; syntax, which supports a more relaxed syntax. For example, %MYVAR{param1=value1, value 2, param3=&quot;value 3&quot;, param4=&#39;value 5&quot;}%

*Since:* TWiki::Plugins::VERSION 1.1

The variable handler function must be of the form:
&lt;verbatim&gt;
sub handler(\%session, \%params, $topic, $web)
&lt;/verbatim&gt;
where:
   * =\%session= - a reference to the TWiki session object (may be ignored)
   * =\%params= - a reference to a TWiki::Attrs object containing parameters. This can be used as a simple hash that maps parameter names to values, with _DEFAULT being the name for the default parameter.
   * =$topic= - name of the topic in the query
   * =$web= - name of the web in the query
for example, to execute an arbitrary command on the server, you might do this:
&lt;verbatim&gt;
sub initPlugin{
   TWiki::Func::registerTagHandler(&#39;EXEC&#39;, \&amp;boo);
}

sub boo {
    my( $session, $params, $topic, $web ) = @_;
    my $cmd = $params-&gt;{_DEFAULT};

    return &quot;NO COMMAND SPECIFIED&quot; unless $cmd;

    my $result = `$cmd 2&gt;&amp;1`;
    return $params-&gt;{silent} ? &#39;&#39; : $result;
}
}
&lt;/verbatim&gt;
would let you do this:
=%&lt;nop&gt;EXEC{&quot;ps -Af&quot; silent=&quot;on&quot;}%=


---+++ registerRESTHandler( $alias, \&amp;fn, )
Should only be called from initPlugin.

Adds a function to the dispatch table of the REST interface 
   * =$alias= - The name .
   * =\&amp;fn= - Reference to the function.

*Since:* TWiki::Plugins::VERSION 1.1

The handler function must be of the form:
&lt;verbatim&gt;
sub handler(\%session)
&lt;/verbatim&gt;
where:
   * =\%session= - a reference to the TWiki session object (may be ignored)

From the REST interface, the name of the plugin must be used
as the subject of the invokation.

Example
-------

The EmptyPlugin has the following call in the initPlugin handler:
&lt;verbatim&gt;
   TWiki::Func::registerRESTHandler(&#39;example&#39;, \&amp;restExample);
&lt;/verbatim&gt;

This adds the =restExample= function to the REST dispatch table 
for the EmptyPlugin under the &#39;example&#39; alias, and allows it 
to be invoked using the URL

=http://server:port/bin/rest/EmptyPlugin/example=

note that the URL

=http://server:port/bin/rest/EmptyPlugin/restExample=

(ie, with the name of the function instead of the alias) will not work.
 

---++ Searching


---+++ searchInWebContent($searchString, $web, \@topics, \%options ) -&gt; \%map
Search for a string in the content of a web. The search is over all content, including meta-data. Meta-data matches will be returned as formatted lines within the topic content (meta-data matches are returned as lines of the format %META:\w+{.*}%)
   * =$searchString= - the search string, in egrep format
   * =$web= - The web to search in
   * =\@topics= - reference to a list of topics to search
   * =\%option= - reference to an options hash
The =\%options= hash may contain the following options:
   * =type= - if =regex= will perform a egrep-syntax RE search (default &#39;&#39;)
   * =casesensitive= - false to ignore case (defaulkt true)
   * =files_without_match= - true to return files only (default false). If =files_without_match= is specified, it will return on the first match in each topic (i.e. it will return only one match per topic, and will not return matching lines).

The return value is a reference to a hash which maps each matching topic
name to a list of the lines in that topic that matched the search,
as would be returned by &#39;grep&#39;.

To iterate over the returned topics use:
&lt;verbatim&gt;
my $result = TWiki::Func::searchInWebContent( &quot;Slimy Toad&quot;, $web, \@topics,
   { casesensitive =&gt; 0, files_without_match =&gt; 0 } );
foreach my $topic (keys %$result ) {
   foreach my $matching_line ( @{$result-&gt;{$topic}} ) {
      ...etc
&lt;/verbatim&gt;

*Since:* TWiki::Plugins::VERSION 1.1


---++ Plugin-specific file handling


---+++ getWorkArea( $pluginName ) -&gt; $directorypath

Gets a private directory for Plugin use. The Plugin is entirely responsible
for managing this directory; TWiki will not read from it, or write to it.

The directory is guaranteed to exist, and to be writable by the webserver
user. By default it will *not* be web accessible.

The directory and it&#39;s contents are permanent, so Plugins must be careful
to keep their areas tidy.

*Since:* TWiki::Plugins::VERSION 1.1 (Dec 2005)


---+++ readFile( $filename ) -&gt; $text

Read file, low level. Used for Plugin workarea.
   * =$filename= - Full path name of file
Return: =$text= Content of file, empty if not found

__NOTE:__ Use this function only for the Plugin workarea, *not* for topics and attachments. Use the appropriate functions to manipulate topics and attachments.

*Since:* TWiki::Plugins::VERSION 1.000 (07 Dec 2002)


---+++ saveFile( $filename, $text )

Save file, low level. Used for Plugin workarea.
   * =$filename= - Full path name of file
   * =$text=     - Text to save
Return:                none

__NOTE:__ Use this function only for the Plugin workarea, *not* for topics and attachments. Use the appropriate functions to manipulate topics and attachments.

*Since:* TWiki::Plugins::VERSION 1.000 (07 Dec 2002)


---++ General Utilities


---+++ getRegularExpression( $name ) -&gt; $expr

Retrieves a TWiki predefined regular expression or character class.
   * =$name= - Name of the expression to retrieve.  See notes below
Return: String or precompiled regular expression matching as described below.

*Since:* TWiki::Plugins::VERSION 1.020 (9 Feb 2004)

__Note:__ TWiki internally precompiles several regular expressions to
represent various string entities in an I18N-compatible manner. Plugins
authors are encouraged to use these in matching where appropriate. The
following are guaranteed to be present. Others may exist, but their use
is unsupported and they may be removed in future TWiki versions.

In the table below, the expression marked type &#39;String&#39; are intended for
use within character classes (i.e. for use within square brackets inside
a regular expression), for example:
&lt;verbatim&gt;
   my $upper = TWiki::Func::getRegularExpression(&#39;upperAlpha&#39;);
   my $alpha = TWiki::Func::getRegularExpression(&#39;mixedAlpha&#39;);
   my $capitalized = qr/[$upper][$alpha]+/;
&lt;/verbatim&gt;
Those expressions marked type &#39;RE&#39; are precompiled regular expressions that can be used outside square brackets. For example:
&lt;verbatim&gt;
   my $webRE = TWiki::Func::getRegularExpression(&#39;webNameRegex&#39;);
   my $isWebName = ( $s =~ m/$webRE/ );
&lt;/verbatim&gt;

| *Name*         | *Matches*                        | *Type* |
| upperAlpha     | Upper case characters            | String |
| upperAlphaNum  | Upper case characters and digits | String |
| lowerAlpha     | Lower case characters            | String |
| lowerAlphaNum  | Lower case characters and digits | String |
| numeric        | Digits                           | String |
| mixedAlpha     | Alphabetic characters            | String |
| mixedAlphaNum  | Alphanumeric characters          | String |
| wikiWordRegex  | WikiWords                        | RE |
| webNameRegex   | User web names                   | RE |
| anchorRegex    | #AnchorNames                     | RE |
| abbrevRegex    | Abbreviations e.g. GOV, IRS      | RE |
| emailAddrRegex | email@address.com                | RE |
| tagNameRegex   | Standard variable names e.g. %&lt;nop&gt;THIS_BIT% (THIS_BIT only) | RE |


---+++ normalizeWebTopicName($web, $topic) -&gt; ($web, $topic)

Parse a web and topic name, supplying defaults as appropriate.
   * =$web= - Web name, identifying variable, or empty string
   * =$topic= - Topic name, may be a web.topic string, required.
Return: the parsed Web/Topic pai

*Since:* TWiki::Plugins::VERSION 1.1

| *Input* | *Return* |
| &lt;tt&gt;( &#39;Web&#39;,  &#39;Topic&#39; )     &lt;/tt&gt; | &lt;tt&gt;( &#39;Web&#39;,  &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;&#39;,     &#39;Topic&#39; )     &lt;/tt&gt; | &lt;tt&gt;( &#39;Main&#39;, &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;&#39;,     &#39;&#39; )          &lt;/tt&gt; | &lt;tt&gt;( &#39;Main&#39;, &#39;WebHome&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;&#39;,     &#39;Web/Topic&#39; ) &lt;/tt&gt; | &lt;tt&gt;( &#39;Web&#39;,  &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;&#39;,     &#39;Web.Topic&#39; ) &lt;/tt&gt; | &lt;tt&gt;( &#39;Web&#39;,  &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;Web1&#39;, &#39;Web2.Topic&#39; )&lt;/tt&gt; | &lt;tt&gt;( &#39;Web2&#39;, &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;%MAINWEB%&#39;, &#39;Topic&#39; )&lt;/tt&gt; | &lt;tt&gt;( &#39;Main&#39;, &#39;Topic&#39; ) &lt;/tt&gt; |
| &lt;tt&gt;( &#39;%TWIKIWEB%&#39;, &#39;Topic&#39; )&lt;/tt&gt; | &lt;tt&gt;( &#39;TWiki&#39;, &#39;Topic&#39; ) &lt;/tt&gt; |
where =Main= and =TWiki= are the web names set in $cfg{UsersWebName} and $cfg{SystemWebName} respectively.


---+++ writeWarning( $text )

Log Warning that may require admin intervention to data/warning.txt
   * =$text= - Text to write; timestamp gets added
Return:            none

*Since:* TWiki::Plugins::VERSION 1.020 (16 Feb 2004)


---+++ writeDebug( $text )

Log debug message to data/debug.txt
   * =$text= - Text to write; timestamp gets added
Return:            none

*Since:* TWiki::Plugins::VERSION 1.020 (16 Feb 2004)


---+++ formatTime( $time, $format, $timezone ) -&gt; $text

Format the time in seconds into the desired time string
   * =$time=     - Time in epoc seconds
   * =$format=   - Format type, optional. Default e.g. =&#39;31 Dec 2002 - 19:30&#39;=. Can be =&#39;$iso&#39;= (e.g. =&#39;2002-12-31T19:30Z&#39;=), =&#39;$rcs&#39;= (e.g. =&#39;2001/12/31 23:59:59&#39;=, =&#39;$http&#39;= for HTTP header format (e.g. =&#39;Thu, 23 Jul 1998 07:21:56 GMT&#39;=), or any string with tokens =&#39;$seconds, $minutes, $hours, $day, $wday, $month, $mo, $year, $ye, $tz&#39;= for seconds, minutes, hours, day of month, day of week, 3 letter month, 2 digit month, 4 digit year, 2 digit year, timezone string, respectively
   * =$timezone= - either not defined (uses the displaytime setting), &#39;gmtime&#39;, or &#39;servertime&#39;
Return: =$text=        Formatted time string
| Note:                  | if you used the removed formatGmTime, add a third parameter &#39;gmtime&#39; |

*Since:* TWiki::Plugins::VERSION 1.020 (26 Feb 2004)


---+++ isValidWikiWord ( $text ) -&gt; $boolean

Check for a valid WikiWord or WikiName
   * =$text= - Word to test

*Since:* TWiki::Plugins::VERSION 1.100 (Dec 2005)


---+++ extractParameters($attr ) -&gt; %params

Extract all parameters from a variable string and returns a hash of parameters
   * =$attr= - Attribute string
Return: =%params=  Hash containing all parameters. The nameless parameter is stored in key =_DEFAULT=

*Since:* TWiki::Plugins::VERSION 1.025 (26 Aug 2004)

   * Example:
      * Variable: =%&lt;nop&gt;TEST{ &#39;nameless&#39; name1=&quot;val1&quot; name2=&quot;val2&quot; }%=
      * First extract text between ={...}= to get: =&#39;nameless&#39; name1=&quot;val1&quot; name2=&quot;val2&quot;=
      * Then call this on the text: &lt;br /&gt;
   * params = TWiki::Func::extractParameters( $text );=
      * The =%params= hash contains now: &lt;br /&gt;
        =_DEFAULT =&gt; &#39;nameless&#39;= &lt;br /&gt;
        =name1 =&gt; &quot;val1&quot;= &lt;br /&gt;
        =name2 =&gt; &quot;val2&quot;=


---+++ extractNameValuePair( $attr, $name ) -&gt; $value

Extract a named or unnamed value from a variable parameter string
- Note:              | Function TWiki::Func::extractParameters is more efficient for extracting several parameters
   * =$attr= - Attribute string
   * =$name= - Name, optional
Return: =$value=   Extracted value

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)

   * Example:
      * Variable: =%&lt;nop&gt;TEST{ &#39;nameless&#39; name1=&quot;val1&quot; name2=&quot;val2&quot; }%=
      * First extract text between ={...}= to get: =&#39;nameless&#39; name1=&quot;val1&quot; name2=&quot;val2&quot;=
      * Then call this on the text: &lt;br /&gt;
        =my $noname = TWiki::Func::extractNameValuePair( $text );= &lt;br /&gt;
        =my $val1  = TWiki::Func::extractNameValuePair( $text, &quot;name1&quot; );= &lt;br /&gt;
        =my $val2  = TWiki::Func::extractNameValuePair( $text, &quot;name2&quot; );=


---++ Deprecated functions

From time-to-time, the TWiki developers will add new functions to the interface (either to TWikiFuncDotPm, or new handlers). Sometimes these improvements mean that old functions have to be deprecated to keep the code manageable. When this happens, the deprecated functions will be supported in the interface for at least one more TWiki release, and probably longer, though this cannot be guaranteed.

Updated plugins may still need to define deprecated handlers for compatibility with old TWiki versions. In this case, the plugin package that defines old handlers can suppress the warnings in %&lt;nop&gt;FAILEDPLUGINS%.

This is done by defining a map from the handler name to the =TWiki::Plugins= version _in which the handler was first deprecated_. For example, if we need to define the =endRenderingHandler= for compatibility with =TWiki::Plugins= versions before 1.1, we would add this to the plugin:
&lt;verbatim&gt;
package TWiki::Plugins::SinkPlugin;
use vars qw( %TWikiCompatibility );
$TWikiCompatibility{endRenderingHandler} = 1.1;
&lt;/verbatim&gt;
If the currently-running TWiki version is 1.1 _or later_, then the _handler will not be called_ and _the warning will not be issued_. TWiki with versions of =TWiki::Plugins= before 1.1 will still call the handler as required.

The following functions are retained for compatibility only. You should
stop using them as soon as possible.

---+++ getScriptUrlPath( ) -&gt; $path

Get script URL path

*DEPRECATED* since 1.1 - use =getScriptUrl= instead.

Return: =$path= URL path of TWiki scripts, e.g. =&quot;/cgi-bin&quot;=

*WARNING:* you are strongly recommended *not* to use this function, as the
{ScriptUrlPaths} URL rewriting rules will not apply to urls generated
using it.

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getPublicWebList( ) -&gt; @webs

*DEPRECATED* since 1.1 - use =getListOfWebs= instead.

Get list of all public webs, e.g. all webs that do not have the =NOSEARCHALL= flag set in the WebPreferences

Return: =@webs= List of all public webs, e.g. =( &#39;Main&#39;,  &#39;Know&#39;, &#39;TWiki&#39; )=

*Since:* TWiki::Plugins::VERSION 1.000 (07 Dec 2002)


---+++ formatGmTime( $time, $format ) -&gt; $text

*DEPRECATED* since 1.1 - use =formatTime= instead.

Format the time to GM time
   * =$time=   - Time in epoc seconds
   * =$format= - Format type, optional. Default e.g. =&#39;31 Dec 2002 - 19:30&#39;=, can be =&#39;iso&#39;= (e.g. =&#39;2002-12-31T19:30Z&#39;=), =&#39;rcs&#39;= (e.g. =&#39;2001/12/31 23:59:59&#39;=, =&#39;http&#39;= for HTTP header format (e.g. =&#39;Thu, 23 Jul 1998 07:21:56 GMT&#39;=)
Return: =$text=      Formatted time string

*Since:* TWiki::Plugins::VERSION 1.000 (7 Dec 2002)


---+++ getDataDir( ) -&gt; $dir

*DEPRECATED* since 1.1 - use the [[#Functions_Content_Handling][content handling functions]] to manipulate topics instead

Get data directory (topic file root)

Return: =$dir= Data directory, e.g. =&#39;/twiki/data&#39;=

This function violates store encapsulation and is therefore *deprecated*.

*Since:* TWiki::Plugins::VERSION 1.000 (07 Dec 2002)


---+++ getPubDir( ) -&gt; $dir

*DEPRECATED* since 1.1 - use the [[#Functions_Content_Handling][content handling functions]] to manipulateattachments instead

Get pub directory (file attachment root). Attachments are in =$dir/Web/TopicName=

Return: =$dir= Pub directory, e.g. =&#39;/htdocs/twiki/pub&#39;=

This function violates store encapsulation and is therefore *deprecated*.

Use =readAttachment= and =saveAttachment= instead.

*Since:* TWiki::Plugins::VERSION 1.000 (07 Dec 2002)


---+++ checkDependencies( $moduleName, $dependenciesRef ) -&gt; $error

*DEPRECATED* since 1.1 - use TWiki:Plugins.BuildContrib and define DEPENDENCIES that can be statically
evaluated at install time instead. It is a lot more efficient.

*Since:* TWiki::Plugins::VERSION 1.025 (01 Aug 2004)

</textarea> <div class="patternSigLine"><span class="twikiRight twikiMakeVisible" style="text-align:left;"><span class="twikiLeft patternTextareaButton patternButtonFontSelector" title="Switch to monotype or propotional font">&nbsp;</span><span class="twikiLeft patternTextareaButton patternButtonEnlarge" title="Enlarge edit box">&nbsp;</span><span class="twikiLeft patternTextareaButton patternButtonShrink" title="Shrink edit box">&nbsp;</span></span><br class="twikiClear" /></div><!-- /patternSigLine--></div><!-- /patternTopic-->
<div class="twikiContentFooter"></div></div><!-- /patternContent-->
<a name="topic-actions"></a><div class="twikinetRounded twikinetRoundedTopicActions"><div class="rCRounded"><div class="rCTR"><div class="rCTL"></div><!--/rCTL--><div class="patternTopicActions"><div class="patternTopicAction"><span class="patternActionButtons"><span class="patternButton"><a href='https://twiki.opensciencegrid.org/bin/edit/TWiki/TWikiFuncDotPm?t=1487269136;nowysiwyg=1' rel='nofollow' title='Edit this topic text' accesskey='e'><span class='twikiAccessKey'>E</span>dit</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span class='patternButton'><a href='/bin/attach/TWiki/TWikiFuncDotPm' rel='nofollow' title='Attach an image or document to this topic' accesskey='a'><span class='twikiAccessKey'>A</span>ttach</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span class='patternButton'><a href='/bin/view/TWiki/TWikiFuncDotPm?cover=print;raw=on' rel='nofollow' title='Printable version of this topic' accesskey='p'><span class='twikiAccessKey'>P</span>rint version</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span><span><a href='/bin/rdiff/TWiki/TWikiFuncDotPm?type=history' rel='nofollow' title='View total topic history' accesskey='h'><span class='twikiAccessKey'>H</span>istory</a></span>: r3&nbsp;<a rel="nofollow" href="/bin/rdiff/TWiki/TWikiFuncDotPm?rev1=3;rev2=2">&lt;</a>&nbsp;<a rel="nofollow" href="/bin/view/TWiki/TWikiFuncDotPm?rev=2">r2</a>&nbsp;<a rel="nofollow" href="/bin/rdiff/TWiki/TWikiFuncDotPm?rev1=2;rev2=1">&lt;</a>&nbsp;<a rel="nofollow" href="/bin/view/TWiki/TWikiFuncDotPm?rev=1">r1</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span><a href='/bin/oops/TWiki/TWikiFuncDotPm?template=backlinksweb' rel='nofollow' title='Search the TWiki Web for topics that link to here' accesskey='b'><span class='twikiAccessKey'>B</span>acklinks</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span><a href='https://twiki.opensciencegrid.org/bin/view/TWiki/TWikiFuncDotPm' rel='nofollow' title='View topic' accesskey='v'><span class='twikiAccessKey'>V</span>iew topic</a></span><span class='twikiSeparator'>&nbsp;|&nbsp;</span><span><a href='/bin/oops/TWiki/TWikiFuncDotPm?template=oopsmore&amp;param1=3&amp;param2=3' rel='nofollow' title='Delete or rename this topic; set parent topic; view and compare revisions' accesskey='m'><span class='twikiAccessKey'>M</span>ore topic actions</a></span></span></div><!--/patternTopicAction--></div><!--/patternTopicActions--></div><!--/rCTR--><div class="rCBR"><div class="rCBL"></div><!--/rCBL--></div><!--/rCBR--></div><!--/rCRounded--></div><!--/twikinetRounded--><div class="patternInfo twikiGrayText"><div class="patternRevInfo">Topic revision: r3 - 25 Oct 2006 - 00:21:59 - <a href="/bin/view/Main/TWikiContributor" class="twikiLink">TWikiContributor</a></div><!-- /patternRevInfo--></div><!-- /patternInfo-->
</div><!-- /patternMainContents-->
</div><!-- /patternMain--><div id="patternLeftBar"><div id="patternClearHeaderLeft"></div>
<div id="patternLeftBarContents">
<p /> <ul>
<li> <b><a href="/bin/view/TWiki/WebHome" class="twikiCurrentWebHomeLink twikiLink"> <img width="16" alt="home" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/home.gif" height="16" border="0" /> TWiki Web</a></b>
</li> <li> <a href="/bin/view/Main/TWikiUsers" class="twikiLink"> <img width="16" alt="person" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/person.gif" height="16" border="0" /> Users</a>
</li> <li> <a href="/bin/view/Main/TWikiGroups" class="twikiLink"> <img width="16" alt="group" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/group.gif" height="16" border="0" /> Groups</a>
</li> <li> <a href="/bin/view/TWiki/WebTopicList" class="twikiLink"> <img width="16" alt="index" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/index.gif" height="16" border="0" /> Index</a>
</li> <li> <a href="/bin/view/TWiki/WebSearch" class="twikiLink"> <img width="16" alt="searchtopic" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/searchtopic.gif" height="16" border="0" /> Search</a>
</li> <li> <a href="/bin/view/TWiki/WebChanges" class="twikiLink"> <img width="16" alt="changes" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/changes.gif" height="16" border="0" /> Changes</a>
</li> <li> <a href="/bin/view/TWiki/WebNotify" class="twikiLink"> <img width="16" alt="notify" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/notify.gif" height="16" border="0" /> Notifications</a>
</li> <li> <a href="/bin/view/TWiki/WebPreferences" class="twikiLink"> <img width="16" alt="wrench" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/wrench.gif" height="16" border="0" /> Preferences</a>
</li></ul> 
<hr /> <ul>
<li> <b>User Reference</b>
</li> <li> <a href="/bin/view/TWiki/ATasteOfTWiki" class="twikiLink">ATasteOfTWiki</a>
</li> <li> <a href="/bin/view/TWiki/TextFormattingRules" class="twikiLink">TextFormattingRules</a>
</li> <li> <a href="/bin/view/TWiki/TWikiVariables" class="twikiLink">TWikiVariables</a>
</li> <li> <a href="/bin/view/TWiki/FormattedSearch" class="twikiLink">FormattedSearch</a>
</li> <li> <a href="/bin/view/TWiki/TWikiDocGraphics" class="twikiLink">TWikiDocGraphics</a>
</li> <li> <a href="/bin/view/TWiki/TWikiSkinBrowser" class="twikiLink">TWikiSkinBrowser</a>
</li> <li> <a href="/bin/view/TWiki/InstalledPlugins" class="twikiLink">InstalledPlugins</a>
</li></ul> 
<hr /> <ul>
<li> <b>Admin Maintenance</b>
</li> <li> <a href="/bin/view/TWiki/TWikiReferenceManual" class="twikiLink">Reference Manual</a>
</li> <li> <a href="/bin/view/TWiki/AdminToolsCategory" class="twikiLink">AdminToolsCategory</a>
</li> <li> <a href="/bin/view/TWiki/InterWikis" class="twikiLink">InterWikis</a>
</li> <li> <a href="/bin/view/TWiki/ManagingWebs" class="twikiLink">ManagingWebs</a>
</li> <li> <a href="/bin/view/TWiki/TWikiSiteTools" class="twikiLink">TWikiSiteTools</a>
</li> <li> <a href="/bin/view/TWiki/TWikiPreferences" class="twikiLink">TWikiPreferences</a>
</li> <li> <a href="/bin/view/TWiki/WebPreferences" class="twikiLink">WebPreferences</a>
</li></ul> 
<hr /> <ul>
<li> <b>Categories</b>
</li> <li> <a href="/bin/view/TWiki/AdminDocumentationCategory" class="twikiLink">Admin Documentation</a>
</li> <li> <a href="/bin/view/TWiki/AdminToolsCategory" class="twikiLink">Admin Tools</a>
</li> <li> <a href="/bin/view/TWiki/DeveloperDocumentationCategory" class="twikiLink">Developer Doc</a>
</li> <li> <a href="/bin/view/TWiki/UserDocumentationCategory" class="twikiLink">User Documentation</a>
</li> <li> <a href="/bin/view/TWiki/UserToolsCategory" class="twikiLink">User Tools</a>
</li></ul> 
<hr /> <ul>
<li> <strong>Webs</strong>
</li> <li> <a href="/bin/view/Accounting/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Accounting</a>
</li> <li> <a href="/bin/view/Council/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Council</a>
</li> <li> <a href="/bin/view/Documentation/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFF99" />&nbsp;Documentation</a>
</li> <li> <a href="/bin/view/Documentation/DocumentationTeam/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#DDDDDD" />&nbsp;<span class="twikiWebIndent"></span>DocumentationTeam</a>
</li> <li> <a href="/bin/view/Documentation/Release3/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFFF" />&nbsp;<span class="twikiWebIndent"></span>Release3</a>
</li> <li> <a href="/bin/view/Education/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Education</a>
</li> <li> <a href="/bin/view/Education/ASP2016/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;<span class="twikiWebIndent"></span>ASP2016</a>
</li> <li> <a href="/bin/view/Education/RDASummerSchool/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFFF" />&nbsp;<span class="twikiWebIndent"></span>RDASummerSchool</a>
</li> <li> <a href="/bin/view/Education/SummerGridWorkshop/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;<span class="twikiWebIndent"></span>SummerGridWorkshop</a>
</li> <li> <a href="/bin/view/Engagement/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Engagement</a>
</li> <li> <a href="/bin/view/InformationServices/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;InformationServices</a>
</li> <li> <a href="/bin/view/Interoperability/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFCC" />&nbsp;Interoperability</a>
</li> <li> <a href="/bin/view/Main/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFEFA6" />&nbsp;Main</a>
</li> <li> <a href="/bin/view/Management/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Management</a>
</li> <li> <a href="/bin/view/Networking/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFFF" />&nbsp;Networking</a>
</li> <li> <a href="/bin/view/Operations/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;Operations</a>
</li> <li> <a href="/bin/view/Operations/SupportWorkArea/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFFF" />&nbsp;<span class="twikiWebIndent"></span>SupportWorkArea</a>
</li> <li> <a href="/bin/view/Production/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#DDDDDD" />&nbsp;Production</a>
</li> <li> <a href="/bin/view/ReleaseDocumentation/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#9999FF" />&nbsp;ReleaseDocumentation</a>
</li> <li> <a href="/bin/view/Sandbox/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#DDDDDD" />&nbsp;Sandbox</a>
</li> <li> <a href="/bin/view/Sandbox/SubWeb/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#D0D0D0" />&nbsp;<span class="twikiWebIndent"></span>SubWeb</a>
</li> <li> <a href="/bin/view/Security/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFFFFF" />&nbsp;Security</a>
</li> <li> <a href="/bin/view/SoftwareTeam/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#DDDDDD" />&nbsp;SoftwareTeam</a>
</li> <li> <a href="/bin/view/Storage/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#0000FF" />&nbsp;Storage</a>
</li> <li> <a href="/bin/view/TWiki/WebHome"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiDocGraphics/web-bg.gif" border="0" alt="" width="16" height="16" style="background-color:#FFD8AA " />&nbsp;TWiki</a>
</li></ul> 
</div><!-- /patternLeftBarContents--></div><!-- /patternLeftBar-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--></div><!-- /patternWrapper--><div id="patternTopBar"><div id="twikinetLogo"><a href="http://www.twiki.net/"><span>TWIKI.NET</span></a></div><div id="patternTopBarContents"><div class="twikiLeft"><span id="twikiLogo" class="twikiImage"><a href="http://www.opensciencegrid.org    "><img src="/twiki/pub/Main/WebHome/osg-logo.png    " border="0" alt="OpenScience Grid Website    " style="border:none;" /></a></span></div>
<div class="twikiRight">
<table cellpadding="0" cellspacing="0" border="0"><tr><td class="twikinetSearchJump twikinetSearchJumpLeft">
 <ul>
<li> <form name="jumpForm" action="/bin/view/TWiki/TWikiFuncDotPm"><input id="jumpFormField" type="text" class="twikiInputField" name="topic" value="" size="16" /><input type="submit" class="twikinetJumpButton" name="submit" value="" /></form>
</li> <li> <form name="quickSearchForm" action="/bin/view/TWiki/WebSearch"><input type="text" class="twikiInputField" id="quickSearchBox" name="search" value="" size="18" /><input type="hidden" name="scope" value="all" /><input type="hidden" name="web" value="TWiki" /><input type="submit" size="5" class="twikinetSearchButton" name="submit" value="" /></form>
</li> <li> </li></ul> 
</td>
<td class="twikinetSearchJumpRight"></td>
</tr></table><br class="twikiClear" /></div></div></div><!-- /patternTopBar--><div id="twikinetTopToolBar"><div id="twikinetTopToolBarContents"><div class="twikinetWebName twikiLeft">
<table cellpadding="0" cellspacing="0" border="0"><tr><td style="vertical-align:middle;">
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="TWiki"></a>  <a href="/bin/view/TWiki/WebHome" class="twikiCurrentWebHomeLink twikiLink">TWiki</a> </span></h2>
</td></tr></table>
</div><!--/twikinetWebName-->
<div class="twikinetToolBar twikiRight">
<table cellpadding="0" cellspacing="0" border="0"><tr><td><a href="https://twiki.opensciencegrid.org/bin/edit/TWiki/TWikiFuncDotPm?t=1487269136;nowysiwyg=1" rel="nofollow">
<span class="rCRounded"><span class="rCTR"><span class="rCTL"></span><!--/rCTL-->
<span class="twikiLinkLabel twikinetEditIcon"><span class='twikiAccessKey'>E</span>dit</span>
</span><!--/rCTR--><span class="rCBR"><span class="rCBL"></span></span><!--/rCBR--></span><!--/rCRounded-->
</a></td><td><a href="/bin/attach/TWiki/TWikiFuncDotPm" rel="nofollow">
<span class="rCRounded"><span class="rCTR"><span class="rCTL"></span><!--/rCTL-->
<span class="twikiLinkLabel"><span class='twikiAccessKey'>A</span>ttach</span>
</span><!--/rCTR--><span class="rCBR"><span class="rCBL"></span></span><!--/rCBR--></span><!--/rCRounded-->
</a></td><td><a href="/bin/genpdf/TWiki/TWikiFuncDotPm?pdftitle=TWikiFuncDotPm" rel="nofollow">
<span class="rCRounded"><span class="rCTR"><span class="rCTL"></span><!--/rCTL-->
<span class="twikiLinkLabel">PDF</span>
</span><!--/rCTR--><span class="rCBR"><span class="rCBL"></span></span><!--/rCBR--></span><!--/rCRounded-->
</a></td></tr></table>
<br class="twikiClear" /></div><!--/patternToolBar--></div><!--/twikinetTopToolBarContents--></div><!--/twikinetTopToolBar--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>