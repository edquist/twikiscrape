&lt;style type=&quot;text/css&quot;&gt;
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
&lt;/style&gt;

---+ Monday Exercise 6.1: Plan an Example Workflow

Your goal is to plan out Joe’s workflow based upon small-scale jobs (this first, 30-minute session) and, later, to write a full-scale DAG to actually run his workflow in production (the second, 90-minute session after the next lecture). Please make sure to first read the Background Information about Joe’s computing work. You will not need to modify any of Joe’s input files or programs, and will only need to modify the submit files as directly instructed. It is advisable that you split up the work within your group in order to be time-efficient.

1) *View Joe&#39;s files*: Log in to osg-ss-submit.chtc.wisc.edu and move to a desired location in your home directory. Enter the following commands to copy and decompress/untar Joe’s job ingredients.

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT_SHORT% &lt;strong&gt;cp /home/lmichael/WorkflowExercise.tar.gz ./&lt;/strong&gt;
%UCL_PROMPT_SHORT% &lt;strong&gt;tar xvzf WorkflowExercise.tar.gz&lt;/strong&gt;
&lt;/pre&gt;

You can now navigate into the =WorkflowExercise= directory to view the full ingredients for Joe’s Computing work. Review all of these files based upon the Background Information before and refer back to it as you proceed.

2) Based upon the [[https://www.opensciencegrid.org/bin/view/Education/UserSchool13Thu6Background][Background Information]], draw the _general workflow_ that you would make for Joe (on paper), keeping in mind that there are 3 trait columns in =input.csv=. The tar steps will need to be PRE or POST scripts (you decide which is best). Think about what the Background Information means for the shape of the DAG, job PARENT-CHILD dependencies, and which steps can be split up into multiple job processes to accelerate this work with high-throughput parallelization.

3) Test small-scale Permutation and QTL jobs by doing the following:

- For the Permutation step, you will need to determine the number of permutations that could be batched in a single job process if each process needed to run in ~10 minutes. To do this, modify each permutation submit file to “queue” 3 processes (so that you can average time between the 3 test processes), and change the last argument (the number of permutations) from &quot;10000&quot; to &quot;50&quot;, &quot;100&quot;, or &quot;500&quot;. You can submit all three test Permutation submit files at the same time, and .

- After every Permutation test job finishes, you’ll need to use =tarit.sh= (to prepare the Permutation output) before running the test jobs for the QTL step.

- Test each of the QTL jobs by submitting the three submit files as-is. Note: The resource needs (RAM and disk space) and execution time of each QTL job will scale with the total number of permutations from the previous Permutations step. You&#39;ll test optimized Permutation and QTL steps in the next exercise.

4) For the Permutation step: Calculate the number of queued processes and permutations per process that will be necessary to achieve approximately 10-minute runtimes per process and 10,000 total permutations per trait (you want job processes X permutations = 10,000 total permutations for each of the three phenotype traits).


-- Main.LaurenMichael - 06 Jul 2014
