---+ Tuesday Exercise 2.3: Network Differences in the OSG

The goal of this exercise is to compare network differences between our local cluster (CHTC here at UW–Madison) and an OSG glidein pool. Specifically, we will be querying www.opensciencegrid.org and comparing the number of successful and failed requests. 

---++ 

How does this affect your work? In addition to being portable, your jobs must be insular in the OSG because they&#39;re not guaranteed access to the Internet.


Part 1: Checking on the Availability of Memory, Locally

In this first part, you will create the submit files for both the local and OSG jobs, then submit the local set.

---+++ Create the Submit Files

To create our parameter sweep, we will create 8 submit files, each differing only in the value of our parameter, =request_memory=.

   1. If not already, log on to =osg-ss-submit=
   1. Create and change into a new subdirectory (e.g., =tuesday-2.1=) for this exercise &amp;ndash; doing things this way will make Part 2 much easier
   1. Create a submit file that is named =sleep-1gb.sub= and that executes the command =/bin/sleep 10=\
       &lt;p&gt;If you do not remember all of the submit statements to write this file, or just to go faster, find a similar submit file from yesterday, copy and rename it here, and make sure the argument to =sleep= is =10= (although the exact value does not matter for the test).&lt;/p&gt;
   1. Request exactly 1 gigabyte (GB) of memory:\
       &lt;pre class=&quot;file&quot;&gt;request_memory = 1GB&lt;/pre&gt;
   1. Set the submit file to run 5 instances of this job:\
       &lt;pre class=&quot;file&quot;&gt;queue 5&lt;/pre&gt;
   1. Save the submit file and exit your editor
   1. Make seven copies of =sleep-1gb.sub=: =sleep-2gb.sub=, =sleep-3gb.sub=, &amp;hellip;, =sleep-8gb.sub=
   1. Edit each copy so that the =request_memory= setting matches the filename: =2GB=, =3GB=, &amp;hellip;, =8GB=

&lt;strong&gt;Note:&lt;/strong&gt; It is also possible to set up this parameter sweep using DAGMan, VARS, and a single submit file. If you would like the extra challenge, do this version instead of or in addition to the one above!

---+++ Submitting locally

We want to watch how long it takes our different =request_memory= jobs to run, so we would like to submit all 8 submit files as close to each other as possible.

   1. Submit all 8 sets of jobs quickly:\
       &lt;pre class=&quot;screen&quot;&gt;%UCL_PROMPT_SHORT% &lt;strong&gt;for i in 1 2 3 4 5 6 7 8; do condor_submit sleep-${i}gb.sub; done&lt;/strong&gt;&lt;/pre&gt;

---+++ Monitoring the local jobs

Every few minutes, run =condor_q= and see how your sleep jobs are doing. Consider making a little table like the one below to track progress.

| *Memory* | *Cluster* | *Done #1* | *Done #2* | *Done #3* |
| 1 GB | 11701 | 0 | 4 | |
| 2 GB | 11702 | 0 | 3 | |
| 3 GB | 11703 | 1 | 4 | |
| 4 GB | 11704 | 0 | 5 | |
| 5 GB | 11705 | 1 | 4 | |
| 6 GB | 11706 | 0 | 4 | |
| 7 GB | 11707 | 0 | 4 | |
| 8 GB | 11708 | 0 | 3 | |

In the meantime, between checking on your local jobs, start Part 2 &amp;ndash; taking a break every few minutes to record progress on your local jobs.

---++ Submitting Jobs to the OSG

For this exercise, you will need to =ssh= into =osg-ss-glidein-submit.chtc.wisc.edu= with the same username and password that you have used with =osg-ss-submit.chtc.wisc.edu=. This new machine has been configured to skip over the local cluster and send jobs out to the OSG. If you have trouble getting =ssh= access, ask the instructors right away!

   1. Create a new directory on =osg-ss-glidein-submit.chtc.wisc.edu= to hold your DAG and submit files
   1. Log into =osg-ss-submit.chtc.wisc.edu= and copy over the files you created in the first section of this exercise onto the new submit machine. You can do this with the =scp= command, like so:\
&lt;pre class=screen&gt;
%UCL_PROMPT% scp &lt;span style=&quot;background-color: #D1CAF2;&quot;&gt;&amp;lt;list of files to copy&amp;gt;&lt;/span&gt; osg-ss-glidein-submit.chtc.wisc.edu:&lt;span style=&quot;background-color: #D1CAF2;&quot;&gt;&amp;lt;new directory&amp;gt;&lt;/span&gt;
&lt;/pre&gt;\
For example, if you wanted to copy files =foo=, =bar=, =baz= to the folder =wed-6.1= to your home directory on =osg-glidein-submit.chtc.wisc.edu=, it would look something like this:\
&lt;pre class=screen&gt;
%UCL_PROMPT% scp foo bar baz osg-ss-glidein-submit.chtc.wisc.edu:wed-6.1
&lt;/pre&gt;
   1. For each submit file, you will need to add the following line above your =queue= statment for your jobs to match in the OSG:\
&lt;pre class=&quot;file&quot;&gt;
+WantGlidein=True
&lt;/pre&gt;
   1. Submit your DAG!

---++ Let&#39;s Play the Waiting Game

Not really (that game stinks), move onto the next exercise and we will revisit the results later.
