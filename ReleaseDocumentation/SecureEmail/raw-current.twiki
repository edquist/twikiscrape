---+ *Secure Email in OSG*
%DOC_STATUS_TABLE%
%TOC%

---++ About This Document

This document covers using secure email when communicating with the OSG security team.  The OSG Security team encourages the use of secure email communication.  All official announcements from the OSG security team will be digitally signed. We encourage you to verify the digital signatures on OSG security announcements. Also when sending sensitive information to the OSG security team, we encourage you to encrypt your messages.

---++ News

   * 2010-01-28: The OSG security team has updated the PGP key for security@opensciencegrid.org.

---++ OSG Security PGP key

&lt;pre class=&quot;file&quot;&gt;
User ID: Open Science Grid Security &lt;security@opensciencegrid.org&gt;
Key ID: 7FD42669
Expires:  
Fingerprint: 6E5F 4DD8 7ABC 9F68 A49B  F3CA 15E3 B3AD 7FD4 2669
&lt;/pre&gt;

The team key is available from the [[Security/SecurityTeamMembers][Security Team Members]] page or the [[http://pgp.mit.edu:11371/pks/lookup?search=security%40opensciencegrid.org&amp;op=index][MIT PGP server]].
PGP software is available from: [[http://www.gnupg.org/][GnuPG]]

---++ Verifying a PGP signature

1. Install [[http://www.gnupg.org/][GnuPG]] if it is not already installed on your computer.

2. Save [[https://twiki.grid.iu.edu/twiki/pub/Security/SecurityTeamMembers/osg-security-pubkey.asc][osg-security-pubkey.asc]] to a file on your computer.

3. Import the security@opensciencegrid.org public key:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% gpg --import &amp;lt; osg-security-pubkey.asc 
gpg: key 7FD42669: public key &quot;Open Science Grid Security &amp;lt;security@opensciencegrid.org&amp;gt;&quot; imported
gpg: Total number processed: 1
gpg:               imported: 1
&lt;/pre&gt;

4. Save the message you want to verify to a file on your system (for example: [[%ATTACHURL%/signed-message.txt][signed-message.txt]]).

5. Verify the message:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% gpg --verify &amp;lt; signed-message.txt 
gpg: Signature made Tue Apr 14 13:18:26 2010 CDT using DSA key ID 7FD42669
gpg: Good signature from &quot;Open Science Grid Security &amp;lt;security@opensciencegrid.org&amp;gt;&quot;
&lt;/pre&gt;

To verify additional messages, only steps 4-5 are required.

When the security@opensciencegrid.org public key expires, you will need to perform steps 2-3 again for the new public key.

---++ Encrypting a PGP message

1. Install [[http://www.gnupg.org/][GnuPG]] if it is not already installed on your computer.

2. Save [[https://twiki.grid.iu.edu/twiki/pub/Security/SecurityTeamMembers/osg-security-pubkey.asc][osg-security-pubkey.asc][osg-security-pubkey.asc]] to a file on your computer.

3. Import the security@opensciencegrid.org public key:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% gpg --import &amp;lt; osg-security-pubkey.asc 
gpg: key 7FD42669: public key &quot;Open Science Grid Security &amp;lt;security@opensciencegrid.org&amp;gt;&quot; imported
gpg: Total number processed: 1
gpg:               imported: 1
&lt;/pre&gt;

4. Save the message you want to encrypt to a file on your system named message.txt.

5. Encrypt the message:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% gpg --recipient security@opensciencegrid.org -a --encrypt &amp;lt; message.txt &amp;gt; encrypted-message.txt
&lt;/pre&gt;

6. Send the encrypted-message.txt file in email to security@opensciencegrid.org.

To encrypt additional messages, only steps 4-6 are required.

When the security@opensciencegrid.org public key expires, you will need to perform steps 2-3 again for the new public key.

---++ Other PGP Clients
---+++ Enigmail !OpenPGP plugin for Thunderbird
The !OpenPGP plugin for [[http://www.mozillamessaging.com/en-US/thunderbird/][Thunderbird]] provides a well integrated user interface for key management and email signing and verification that uses !GnuPG underneath.

---++ Signing an S/MIME message with your certificate

The following is a command line instruction on how to sign an email with your certificate.  Instructions for web clients is below.

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% openssl smime -sign -signer ~/.globus/usercert.pem -inkey ~/.globus/userkey.pem -in message.txt | mail -s &quot;email subject&quot; person@example.com
&lt;/pre&gt;

   * message.txt - body of the email message 
   * ~/.globus/usercert.pem, userkey.pem - your personal grid certificate 
   * person@example.com - address where email is to be sent 

Alternatively, you can send &lt;tt&gt;message.txt&lt;/tt&gt; as an attachment with nearly any email client.  It generally works better to send the signed file as an attachment rather than copying it into the body of the message because various email clients and particularly web interfaces to email often modify the message body and therefore break the digital signature.

---+++ Email client instructions

With the diversity of different web and various mail clients it is difficult to keep instructions up-to-date on how to deal with certificates.  So below we link to a few different sites that deal in X509 certificates and have good instructions on signing emails, as well as other topics dealing with certificates.

[[https://search.thawte.com/support/ssl-digital-certificates/index?page=content&amp;id=SO1732][Thawte&#39;s how to sign an email instructions.]]&lt;BR&gt;
[[https://knowledge.verisign.com/support/digital-id-support/index?page=content&amp;id=AR654][Verisign certificate instructions.]]&lt;BR&gt;

---++ Verifying an S/MIME signed message

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% openssl smime -verify -in message.txt -CApath $X509_CERT_DIR -signer sendercert.pem
%UCL_PROMPT% openssl x509 -in sendercert.pem -noout -subject -email -serial -dates
&lt;/pre&gt;

   * message.txt - body of email message received 
      * note that the line beginning &quot;Content-Type&quot; and including &#39;boundary=&quot;---&#39; must be a single line and not get broken or wrapped. 
   * sendercert.pem - the certificate used by the sender to sign the message, is extracted with the openssl smime command 
   * openssl x509 command above will display the subject, email address, serial number and validity dates of the signer&#39;s certificate 

---++ Comments
%COMMENT{type=&quot;tableappend&quot;}%


&lt;!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = MineAltunay

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = JamesBarlow
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
 
--&gt;

