---+!! *GlideinWMS in a Campus Grid*
%DOC_STATUS_TABLE%
%TOC%

---++ About this Document
This document will describe how to configure a !GlideinWMS frontend to run in a Campus Grid.  This will show how jobs submitted to the Frontend can flock to campus resources as well as going out to the OSG using !GlideinWMS.  The !GlideinWMS Frontend install document can be found [[Trash.ReleaseDocumentationGlideinWMSFrontendInstall][here]]. For *help* and *references* please refer to the [[Trash.ReleaseDocumentationGlideinWMSFrontendInstall][GlideinWMS Frontend install document]].


---++ Required Software
   1. [[Trash.ReleaseDocumentationGlideinWMSFrontendInstall][GlideinWMS Frontend]]


---++ !GlideinWMS Frontend - Security Configuration
The configuration of the !GlideinWMS Frontend must allow other hosts to communicate with the frontend.  By default, the !GlideinWMS Frontend has very strong security, requiring GSI certs to communicate.  In this example, a campus factory or condor cluster is running at condor.unl.edu.  This section will describe the configuration of the !GlideinWMS Frontend.

---+++ Enabling alternative authentication methods
It is necessary to enable authentication methods that are acceptable to the campus.  CLAIMTOBE is recommended in the [[Documentation.CampusFactoryInstall][Campus Factory Install]] guide, and will be used to implement host (ip address) based security in this document.  

First enable the CLAIMTOBE method.  Copy and paste the below into your local condor configuration file.  It will append the existing authentication methods to include CLAIMTOBE.  
&lt;pre class=&quot;file&quot;&gt;
SEC_DEFAULT_AUTHENTICATION_METHODS = $(SEC_DEFAULT_AUTHENTICATION_METHODS), CLAIMTOBE
&lt;/pre&gt;

---+++ Modify the =condor_mapfile=
The =condor_mapfile= is used by Condor to map a authenticated user to a human readable identity to be used in authentication rules. 
%NOTE% The =condor_mapfile= uses regular expressions to map from authentication methods to users.  This is why there are many escapes (=\=) in the below example.

Add the following important line, that most hosts attempting to authenticate will use:&lt;pre class=&quot;file&quot;&gt;
CLAIMTOBE .* anonymous@claimtobe&lt;/pre&gt;  
This means that any machine using =CLAIMTOBE= authentication method will be mapped to user anonymous@claimtobe (The user does not have to exist on the machine).  Therefore all authorization rules will use =anonymous@claimtobe= to refer to this user and can be more restrictive than the rules for GSI authenticated users.

The file, including the part already there from the !GlideinWMS Frontend install, should look similar to the following example:&lt;pre class=&quot;file&quot;&gt;
GSI &quot;^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/hcc\-grid\.unl\.edu$&quot; dweitzel
GSI &quot;^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/cpass\.unl\.edu$&quot; dweitzel
GSI &quot;^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/(.*)\.unl\.edu$&quot; \1@daemon.unl.edu
GSI &quot;^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/(.*)\.rcac\.purdue\.edu$&quot; \1@daemon.purdue.edu
GSI (.*) anonymous
FS (.*) \1
CLAIMTOBE .* anonymous@claimtobe
&lt;/pre&gt;

---+++ Authorizing hosts
Below is an example security configuration file from the HCC !GlideinWMS Frontend.

&lt;pre class=&quot;file&quot;&gt;
DENY_WRITE = anonymous@* 
ALLOW_WRITE = *@unl.edu *@glidein.unl.edu execute-side@matchsession *@daemon.unl.edu *@daemon.purdue.edu &lt;strong&gt;*/condor.unl.edu&lt;/strong&gt;
DENY_ADVERTISE_SCHEDD = anonymous@*
DENY_ADMINISTRATOR = anonymous@*
DENY_DAEMON = anonymous@glidein.unl.edu 
ALLOW_DAEMON = *@unl.edu *@glidein.unl.edu  execute-side@matchsession *@daemon.unl.edu *@daemon.purdue.edu 
DENY_NEGOTIATOR = anonymous@glidein.unl.edu 
ALLOW_NEGOTIATOR = */*.unl.edu *@daemon.purdue.edu &lt;strong&gt;*/condor.unl.edu&lt;/strong&gt;&lt;/pre&gt;

Some quick definitions:
   $ =ALLOW_WRITE=: Hosts that are able to write to the local Condor instance.  This should include all hosts running the Campus Factory and condor clusters you wish to flock to.
   $ =ALLOW_NEGOTIATOR=: Hosts that run Negotiators that we should trust.  This should include all hosts running the Campus Factory and condor clusters you wish to flock to.

Breaking down the file some:
&lt;pre class=&quot;file&quot;&gt;
DENY_WRITE = anonymous@* 
ALLOW_WRITE = *@unl.edu *@glidein.unl.edu execute-side@matchsession *@daemon.unl.edu *@daemon.purdue.edu &lt;strong&gt;*/condor.unl.edu&lt;/strong&gt;&lt;/pre&gt;
The =DENY_WRITE= statement causes Condor to disallow write access to anyone not explicitly listed in the =condor_mapfile=.  The =ALLOW_WRITE= line allows explicitly listed people access to write, along with anyone and everyone from =condor.unl.edu=.
---

&lt;pre class=&quot;file&quot;&gt;
ALLOW_NEGOTIATOR = */*.unl.edu *@daemon.purdue.edu &lt;strong&gt;*/condor.unl.edu&lt;/strong&gt; &lt;/pre&gt;
Allow condor.unl.edu to negotiate jobs submitted at this host.


---+++ Flocking Configuration
Set the flocking to the hostname of each campus factory and the central manager of existing condor clusters.
&lt;pre class=&quot;file&quot;&gt;
FLOCK_TO = condor.unl.edu
&lt;/pre&gt;

---++ Configuration of the Campus Factory or existing Condor cluster
For all the Campus Factories and any existing Condor cluster that you&#39;d like to use, the submit host needs to be added to the =FLOCK_FROM= configuration value.   Either find the  FLOCK_FROM variable in the Condor configuration, or append it to the end of the local Condor config file:&lt;pre class=&quot;file&quot;&gt;
FLOCK_FROM = $(FLOCK_FROM) %RED%submit.host%ENDCOLOR%
&lt;/pre&gt;
Replacing %RED%submit.host%ENDCOLOR% with the full hostname or IP of the submit host.

---
Additionally, the existing Condor cluster must have the =CLAIMTOBE= authentication method enabled.  The Campus Factory has this method enabled by default.
&lt;pre class=&quot;file&quot;&gt;
SEC_DEFAULT_AUTHENTICATION_METHODS = $(SEC_DEFAULT_AUTHENTICATION_METHODS), CLAIMTOBE
&lt;/pre&gt;
---
---++ *Comments*
%COMMENT{type=&quot;tableappend&quot;}%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DerekWeitzel

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = User

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli 	
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli 	
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
--&gt;
