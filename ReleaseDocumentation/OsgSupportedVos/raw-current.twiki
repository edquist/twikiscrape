---+!! *&lt;nop&gt;%SPACEOUT{ &quot;Validating Supported VOs and Unix Accounts&quot; }%*
&lt;!-- 
---+!! *&lt;nop&gt;%SPACEOUT{ &quot;%TOPIC%&quot; }%* 
--&gt;
%DOC_STATUS_TABLE%

&lt;!--
   * Set GRATIA= [[https://twiki.grid.iu.edu/twiki/bin/view/Accounting/WebHome][OSG Accounting Services (Gratia)]]
   * Set GIP = [[Trash.ReleaseDocumentationGenericInformationProvider][Generic Information Provider (GIP)]]
--&gt;



%TOC%

---++ About This Document
An important question you should ask yourself is whether or not your site really supports the Virtual Organizations (VOs) you think it supports. How do you know? There are three files that give you insight into the underlying processes that set up the mappings from global identities (user certificate names) to local accounts, and therefore answer this question. Whether you used GUMS or edg-mkgridmap to handle these mappings, these files will help you verify if you are supporting the VOs you wish you support.

These three files are:
   * =VDT_LOCATION/osg/etc/osg-user-vo-map.txt=
   * =VDT_LOCATION/osg/etc/osg-undefined-accounts.txt=
   * =VDT_LOCATION/osg/etc/osg-supported-vos-list.txt=


---++ VO to User Account Map - =osg-user-vo-map.txt=

The =osg-user-vo-map.txt= tells you for each account what VO is associated with that account. (By &quot;each account&quot;, we just mean accounts used by GUMS or edg-mkgridmap, not other accounts on your system.) It is a critical component to the following services:
   * %GRATIA%  - in accurately collecting grid resource usage and metrics by VO for jobs submitted using grid proxies or where voms proxy information is not available.  
   %NOTE% This is the VO name collected by the Gratia probe is not necessarily the one displayed in Gratia reporting services.  Refer to the %GRATIA% for information on how it uses this value.
   * %GIP% -  in advertising resource availability on a VO basis.
   * [[Trash.ReleaseDocumentationMonALISA][Trash.ReleaseDocumentationMonALISA]] - in reporting accounting information by VO.  Note: this is an optional component of an OSG CE installation.
   * In the configuration validation (using =configure-osg= ) for your CE of any attributes that reference a VO name in the =config.ini= file.



These files should never be manually modified if either the _edg-mkgridmap_ or _gums-host-cron_ are enabled (both are cron initiated processes).

The =osg-user-vo-map.txt= file provides the ability to map from a UNIX account (assigned by the CE&#39;s authorization service) back to the grid user&#39;s VO.    There are actually 2 different forms of the VO name for reporting purposes:
   * a case sensitive VO name ( _#VOc_ line in the example below) used only by !Trash.ReleaseDocumentationMonALISA
   * a lower case VO name ( _#voi_ line in the example below) used by the other OSG services.

&lt;pre class=&quot;file&quot;&gt;
&lt;b&gt;Example content: (this example will be referred to by the other subsections on this topic)&lt;/b&gt;

#voi cdf fermilab  cms miniboone atlas
#VOc CDF FERMILAB CMS FERMILAB ATLAS
cdf cdf
fnalgrid fermilab
uscms124 cms
uscms132 cms
minboone miniboone
&lt;/pre&gt;
The file is interpreted as follows:
   * The uncommented lines are the mapping of UNIX account (token 1) to _#vo_ VO name (token 2).
   * The mapping from lower case VO name is performed using the tokens on the _#voi_ and _#VOc_ lines for which there is a one-to-one positional relation:%BR%
       - The _#voi_ lines represent the lower case VO name.%BR%
       - The _#VOc_ lines represent the case sensitive VO name used by !Trash.ReleaseDocumentationMonALISA

Thus, from the above example, the mappings would result in:
|  __UNIX%BR%Account__  |  __lower case%BR%VO Name__  |  __case sensitive%BR%VO Name__  |
|  cdf  |  cdf  |  CDF  |
|  fnalgrid  |  fermilab  |  FERMILAB  |
|  uscms124  |  cms  |  CMS  |
|  uscms132  |  cms  |  CMS  |
|  minboone  |  miniboone  |  FERMILAB  |

As mentioned earlier, those CE nodes using either the _edg-mkgridmap_ or _gums-host-cron_ cron processes will have the 3 files programmatically maintained based on these lines in their respective configuration files.

---++++ Using Gridmap authorization mode
For those sites using =grid-mapfile= authorization mode (using the =edg-mkgridmap= cron process), the =edg-mkgridmap.conf= file is used to define the mappings found in the =osg-user-vo-map.txt=.
&lt;pre class=&quot;file&quot;&gt;
# USER-VO-MAP cdf CDF 
group vomss://voms.cnaf.infn.it:8443/voms/cdf cdf
# USER-VO-MAP cms CMS 
group vomss://voms.cnaf.infn.it:8443/voms/cms uscms01
&lt;/pre&gt;%BR%
The _# USER-VO-MAP_ identifies this as a candidate for the =osg-user-vo-map.txt= file%BR%
   * the 3rd token (=cdf=  and =cms= ) is the _#voi_ VO name
   * the 4th token (=CDF= and =CMS=) is the _#VOc_ VO name.
Any uncommented line(s) following the  _# USER-VO-MAP_ line identify the source of the VO membership (the VOMS server) and account to be assigned
   * the 3rd token (=cdf= and =uscms01=) is the UNIX account.

The resulting =osg-user-vo-map.txt= file would look like this:
&lt;pre class=&quot;programlisting&quot;&gt;
#voi cdf cms
#VOc CDF CMS
cdf cdf
uscms01 cms
&lt;/pre&gt;

---++++ Using Full Privilege (GUMS) authorization mode
For those CE sites in Full Privilege (GUMS) authorization mode using the =gums-host-cron= cron process, the =gums.config= file is used to define these mappings.  

In the OSG =gums.template= , it would look like this
&lt;pre class=&quot;file&quot;&gt;
&amp;lt;groupMapping name=&#39;cdf-cnaf&#39; accountingVo=&#39;cdf&#39; accountingDesc=&#39;CDF&#39;&amp;gt;
&amp;lt;userGroup .... 
   &amp;lt;accountMapping className=&#39;gov.bnl.gums.GroupAccountMapper&#39;
    groupName=&#39;cdf&#39; /&amp;gt;
        :
&amp;lt;groupMapping name=&#39;cmsuser&#39; accountingVo=&#39;cms&#39; accountingDesc=&#39;CMS&#39;&amp;gt;
&amp;lt;userGroup .... 
   &amp;lt;accountMapping className=&#39;gov.bnl.gums.GroupAccountMapper&#39;
    groupName=&#39;uscms01&#39; /&amp;gt;
&lt;/pre&gt;

The =groupMapping= element identifies this as a candidate for the =osg-user-vo-map.txt= file%BR%
   * the =accountingVo= attribute (=cdf= and =cms=) is the _#voi_ VO name.
   * the =accountingDesc= attribute (=CDF= and =CMS=) is the _#VOc_ VO name.
   * the =groupName=  attribute (which is the UNIX account assigned) and the =accountingVO= attribute provide the detail line mapping UNIX account to _#voi_ VO name.  Note: This example is simplified by using group accounts.  If pool accounts are used, it will create a detail line for each pool account assigned.

The resulting =osg-user-vo-map.txt= file would look like this:
&lt;pre class=&quot;file&quot;&gt;
#voi cdf cms
#VOc CDF CMS
cdf cdf
uscms01 cms
&lt;/pre&gt;

A couple __real important__ points follow:
   1 If a group mapping is defined on the GUMS server but the group is currently empty, there will be __no detail line entry__ for that UNIX account to _#voi_ VO name in the osg-user-vo-map.txt.  The presence of a _UNIX account_ in the _osg-user-vo-map.txt_ as generated by GUMS means that there is at least one DN in the VO that can map to that group.  
   1 The above point is __especially important when pool accounts__ are used.  If a first time grid user (for the CE node) is assigned a new pool account __and__ the =gums-host-cron= process has not run, the services that attempt to find the VO name will not be successful.  This is a timing issue and should not affect those service significantly __if__ the =gums-host-cron= is run on a timely basis.
   1 Additionally, __a verification is made to determine if the UNIX account exists__ on that CE node.  If the UNIX account does not exist, that UNIX account is removed from the detail line of the  =osg-user-vo-map.txt= file.  If a grid user is assigned that account, the service requested will never be able to successfully run. These discarded UNIX accounts are listed in the [[OsgSupportedVos#osg_undefined_accounts_txt][osg-undefined-accounts.txt]] files describe in a subsequent section.

The points, listed above, have an affect on the set of supported VOs the various services report on.

When all UNIX accounts have been validated, the =osg-user-vo-map.txt= file is re-evaluated to determine the set of OSG VOs  that this CE node will support.  By that, it is meant that at least one VO&#39;s member can expect to the authorized and successfully assigned an account that will run for this CE node.  The [[OsgSupportedVos#osg_supported_vos_txt][osg-supported-vos-list.txt]] file contains this list of VOs.

This =osg-user-vo-map.txt= file&#39;s timestamp will only change when the contents of the file changed. To assist in verifying the currency of the file, another file called =osg-user-vo-map.txt.last_checked= is created (&#39;touched&#39;)  each time the processes are run. 



---++ Undefined Account - =osg-undefined-accounts.txt=

The =osg-undefined-accounts.txt= file provides a list of those UNIX accounts that can be assigned by your authorization service, but have not been defined on your CE node. You can read this as &quot;the list of accounts you should make, if you want to accept all the VOs you claim to accept&quot;.

This file contains a list of those UNIX accounts that have been eliminated from the =osg-user-vo-map.txt= file because the UNIX account assigned by the authorization service does not exist.   This is for gridmap authorization mode using =edg-mkgridmap= and for Full Privilege authorization mode using =gums-host-cron=

The test used to determine the UNIX account&#39;s existence is &#39;id -u &amp;lt;account&amp;gt;&#39;.  However, there is __no__ verfication performed  to determine if a HOME directory exists for the account. This is because the check is done on the CE, but it&#39;s hard to check if the home directory really exists on the worker node.

&lt;pre class=&quot;file&quot;&gt;
&lt;b&gt;Example content:&lt;/b&gt;
# A list of accounts eliminated from the user-vo map.
uscms455
uscms456
usatlas
&lt;/pre&gt;

This file&#39;s timestamp will only change when the contents of the file changed. To assist in verifying the currency of the file, another file called _osg-undefined-accounts.txt.last_checked_ is created (&#39;touched&#39;)  each time the processes are run. 


---++ Supported VOs - osg-supported-vos-list.txt

The =osg-supported-vos-list.txt= file provides an easy means of determining which VOs your sites will support based on your authorization service. If a VO isn&#39;t listed here, your site doesn&#39;t really support it, even if you think it should.

This file contains a list of all VOs that this CE node will support.  It does not mean that all members of the these VOs will be able to run jobs here, but that at least one member will be capable. (Why not all? Perhaps not all members are authorized.) This is for gridmap authorization mode using =edg-mkgridmap= and for Full Privilege authorization mode using =gums-host-cron=

&lt;pre class=&quot;file&quot;&gt;
&lt;b&gt;Example content:&lt;/b&gt;
# List of VOs this site claims to support
CDF
FERMILAB
CMS
&lt;/pre&gt;

%NOTE% The VO name currently populated in this file is the case sensitive _#VOc_ VO name.  Since this version of the VO name is only used by !Trash.ReleaseDocumentationMonALISA and does not use this file directly, this may change to using the _#voi_ name for OSG services.  This is possibly a future change.

This file&#39;s timestamp will only change when the contents of the file changed. To assist in verifying the currency of the file, another file called =osg-supported-vo-list.txt.last_checked= is created (&#39;touched&#39;)  each time the processes are run. 

---++ Troubleshooting tips
The accuracy, timeliness and integrity of the  =osg-user-vo-map.txt= file is a critical factor for several OSG services.

There are several things that can be looked at to verify it is being updated in addition to the [[OsgSupportedVos#osg_undefined_accounts_txt][osg-undefined-accounts.txt file]] and [[OsgSupportedVos#osg_supported_vos_txt][osg-supported-vos-list.txt]] files.
   1 The files are only updated when there has been a change detected.  So if you __know__ your authorization has been changes affecting any of these files, you can see if it as been effected on the CE node.
   1 Each of the files has a _.last_checked_ suffixed file that is touched whenever the cron scripts are run successfully.
   1 Both cron scripts have log files showing the results of their execution:
      * edg-mkgridmap - =$VDT_LOCATION/edg/log/edg-mkgridmap.log=
      * gums-host-cron - =$VDT_LOCATION/osg/etc/log/gums-host-cron.log=

You can also run the scripts manually (since they are cron scripts you should __not__ have to source the =VDT_LOCATION/setup.sh_ script=) and view the output on the screen:

&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% VDT_LOCATION/gums/scripts/gums-host-cron --gumsdebug

%UCL_PROMPT_ROOT% VDT_LOCATION/edg/sbin/edg-mkgridmap
&lt;/pre&gt;




&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TerrenceMartin

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = VO

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%


 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = DerekWeitzel
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


############################################################################################################
--&gt;
