---+ OSG Software Component: Globus GRAM

---++ Purpose

GRAM, composed of a gatekeeper and its associated jobmanagers, allows jobs to be submitted from remote clients to a local batch system without the client needing to know details of the local batch system.

The *gatekeeper* is a long-running process that does authentication and authorization. Assuming an incoming user is accepted, the request is given to the long-running *jobmanager* process (one per remote user), which submits it to the batch system, monitors it, and returns results to the user.

For authorization, GRAM either relies on built-in access to the grid-mapfile (which is usually created with edg-mkgridmap) or a plugin called LCMAPS which communicates with GUMS.

---++ Usage

[Placeholder: Give simple examples of =globusrun= and =globus-job-run=.]

---++ Source

The Globus gatekeeper and jobmanager (GRAM for short) are provided by the [[http://www.globus.org/ Globus Team]].

---++ Packaging

*Repository:* EPEL and OSG. We pass-through packages, as needed, for patches and so forth.

---++ History

These days in OSG, most users do not submit jobs to a gatekeeper directly, but instead submit jobs via glidein. The glidein factory (which is invisible to users) submits pilot jobs to GRAM as needed.

We have had scalability and reliability issues with GRAM, some of them due to the (new as of Globus 5) fact that the gatekeeper and jobmanager are now long-running processes instead of short-lived processes.

---++ Future

We believe that GRAM has funding for at least another year. The fact that there is not a clear picture for long-term funding and that we have had some problems with GRAM has inspired OSG to consider alternatives. The Technology Area is considering at least three alternatives: GRAM, CREAM, and Condor-C.
