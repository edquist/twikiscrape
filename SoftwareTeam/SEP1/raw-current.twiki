---+ Software Enhancement Proposal 1: SEP Purpose and Guidelines

| *SEP* | 1 |
| *Title* | SEP Purpose and Guidelines |
| *Comment Period Ends:* | 2010-04-05 |
| *Last Modified:* | 2010-04-27 | 
| *Created:* | 2010-03-04 |
| *Author:* | Alain Roy |
| *Status:* | Accepted |
| *Type:* | Process |

---++ What is a SEP?

SEP stands for Software Enhancement Proposal. (It&#39;s modeled on the [[http://www.python.org/dev/peps/pep-0001/][Python PEPs]], and is a slightly more formalized version of the [[https://twiki.grid.iu.edu/bin/view/Trash/Trash/Trash/Trash/Integration/RFCS][integration testbed RFCs.]]) It describes proposed changes to the OSG softwre stack.

---++ Motivation 

Because the Open Science Grid Software Stack is in use in production sites that are very cautious about software upgrades, we want to have a clear communication channel for proposed changes to the software stack. We should clearly announce what will happen in future versions and allow people time to comment on the proposed changes. The SEPs are the method we will use to communicate these changes. 

We intend SEPs to be the primary mechanisms for proposing changes to the OSG software stack and for collecting community input on software issues

---++ SEP Types

There are two kinds of SEPs:

   1. *Software:* These propose changes to the software stack.
   1. *Process:* These propose changes to the software release process or the SEP process. 

---++ SEP Workflow

---+++ Creating an SEP
Anyone in the OSG can create an SEP. The VDT team will create an SEP for every new version of the VDT that will document the proposed changes to the VDT. 

There is an SEP editor, Alain Roy. If you make a new SEP, you should notify him. 

---+++ SEP format and content
An SEP should have a preamble like the one above, containing the following information:

&lt;pre&gt;
SEP:                 &amp;lt;sep number&gt;                                                                               
Title:               &amp;lt;the name of the SEP&gt;                                                                      
Comment period ends: The date by when we expect all comments.
                     After this date, a decision can be made, unless the period is extended.
Last modified:       The date the SEP was last edited.
Created:             The date the SEP was created on.
Author:              The list of names of people who have edited the SEP.
Status:              Draft | Accepted | Rejected | Withdrawn
Type:                Software | Process
&lt;/pre&gt;

A SEP should clearly cover the following five aspects:

   * A clear description of the problem and/or motivation
   * The proposed solution or change 
   * The expected impact: what will it change, and who will it affect?
   * The communities with whom it needs to be discussed. 
   * The minimum time for public discussion

---+++ Deciding if an SEP is acceptable
When the SEP is written, it is considered a draft. Once it is announced to the community, it normally has a minimum of a two week period for comments from the community. The SEP should be advertised to the communities that need to know. For instance, if it affects VOs, it should be shared with the VOs. If it affects sites, it should be shared on the osg-sites mailing list, and so on. For complex or challenging decisions, the SEP should be open for a longer period of time. 

For SEPs that are not controversial, the decision to accept or reject an SEP will belong to the OSG Software Coordinator (currently Alain Roy). If there appears to be significant controversy or impact on the community, the Software Coordinator shall consult with the OSG Executive Team to make a decision. The boundary here may be fuzzy, and we may need to learn as we go along.

There is no voting on an SEP, but we must try hard to take into account the needs of our community.

---+++ Revising an SEP
An SEP will often need to be revised based on the feedback from the community. Any changes that are significant should be re-announced to the community. If necessary, the period for comments should be extended to allow time for the revisions to be considered. 

---++ Example of SEPs

Here are a few examples of things that should be a SEP

   * A description of an upcoming release of the OSG software stack should be a SEP. An exception would be urgent security or bug releases that need to be released as soon as possible. 
   * A change in any release that breaks backwards compatibility or makes changes to the end-user interface. (See details on [[MajorMinorUpdates][on what is a minor release]]).
   * A change in our process for releasing software.

---++ Change log

| *27-April-2010* | This SEP was changed to &quot;Accepted&quot; |
