---+ osg-test Sources for EOL OSG Release

---++ Background

In April 2015, OSG 3.1 reached end of life (EOL) and while support was dropped, upgrade tests from OSG 3.1 to OSG 3.2 and from OSG 3.1 to OSG 3.3 were maintained. Since =osg-test= is installed from the =osg-testing= repository for non-trunk runs, this means that we have to continue building =osg-test= for old releases. Since the underlying code is the same between all OSG release versions, an EOL release can use a supported release&#39;s =osg-test= (granted that they have the same distro version) so we are able to avoid building for EOL&#39;ed releases.

   * EOL releases should use the =osg-test= of the latest release depending on distro version availability (i.e. OSG 3.1 EL5 tests need to use OSG 3.2&#39;s =osg-test= since it&#39;s the latest EL5 supported release)
   * Continue testing builds of osg-test from osg-testing

---++ Proposal

I would like to add a file to the VMU test infrastructure that would specify each OSG release and its supported distro versions:

&lt;pre class=&quot;file&quot;&gt;
[Supported Releases]

3.2: [&quot;EL5&quot;, &quot;EL6&quot;]
3.3: [&quot;EL6&quot;, &quot;EL7&quot;]

[EOL Releases]

3.1: [&quot;EL5&quot;, &quot;EL6&quot;]
&lt;/pre&gt;

Using this file and updating it when adding OSG versions or dropping support for existing versions, we can direct EOL release tests to grab =osg-test= from the latest release available for its distro version. There are two options for providing =osg-test= to EOL releases:

   1. After building =osg-test= and promoting to =osg-testing=, developers will copy the binary RPMs produced to a location on the VDT website so that each test run can =wget= the appropriate version of =osg-test=.
   1. First install =osg-release= for the version that we intend to install =osg-test= from, install =osg-test=, then downgrade to the EOL&#39;ed =osg-release= to proceed with the tests.

To avoid adding extra manual steps and diverging from the normal build/promote process, I think the second option makes the most sense.
