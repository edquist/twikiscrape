---+ Design Doc for Fixing empty-* Packages

Main ticket: [[https://jira.opensciencegrid.org/browse/SOFTWARE-1237][SOFTWARE-1237]]

---++ Rationale

We have several packages in our repos called empty-*; examples are empty-condor and empty-ca-certs.
These packages are intended for users that want to install their own versions of components to satisfy certain dependencies.
(These versions may be from tarballs or other non-RPM-based distribution mechanisms;
RPM does not know about components installed this way, and so does not believe that the dependencies are satisfied.
The empty-* packages do nothing but claim to provide these dependencies).

If multiple packages satisfy (or claim to satisfy) a dependency, the YUM dependency solver (depsolver) goes through a set of heuristics to pick one.
These heuristics prefer the empty-* packages over &quot;real&quot; packages.
(The depsolver&#39;s heuristics try to minimize the number of additional dependencies a package brings in,
and the empty-* packages do not have dependencies of their own).

This is undesired behavior:
when a typical user installs =osg-ce-condor=, they expect to end up with Condor installed;
but the empty-condor package gets installed instead, violating their expectations.
Furthermore, replacing =empty-condor= with =condor= requires the user to either uninstall packages that depend on condor, or use yum magic.

Installing the real Condor should be the default behavior.
A user shouldn&#39;t get =empty-condor= unless they ask for it.

There is no good way to influence the depsolver to pick =condor= over =empty-condor= by default.
The only way to get this behavior is to hide the empty-* packages from yum,
and provide a user the ability to explicitly unhide them.

---++ New Proposal

We will create new repositories and move the empty-* packages into them.

---+++ Koji / Build Infrastructure Changes

We&#39;ll need to make the following koji tags:

| *Repository* | *Koji Tag* |
| osg-empty | osg-3.2-el5-empty |
|^| osg-3.2-el6-empty |

---+++ Package Changes

We will create a new repo definition file called =osg-empty.repo= that contains a repo called =osg-empty=.
It will point to the URLs for the new repos we create, and will be disabled by default.

---+++ Initial Deployment

Before release day, we can tag (or rebuild) the empty packages for the new osg-3.2-el*-empty repos.

Also before release day, the mash scripts need to be updated to recognize the -empty repos.  This is a minor change to =map-osg-tags.pl=.  The updated script can be first tested on repo-itb, then pushed to repo1/repo2.

On release day, we will remove the empty packages from the 3.2 release tags.

---+++ Update Deployment

We will update our documentation on how to cut releases to mention
For any release in which we update one of the empty-* packages, we will have to explicitly mention in the release notes that said update is only available if the user enables an osg-empty repo.

---+++ Documentation Changes

Our documentation states that to install a CE with Condor, the user must install the =condor= package first and then =osg-ce-condor=.
We will remove the requirement to install =condor= first.
Our documentation states that if a user has their own non-RPM condor install and they wish to install a CE with Condor, they must install =empty-condor= first and then =osg-ce-condor=.
We will change the line from saying &quot;yum install empty-condor&quot; to &quot;yum install --enablerepo=osg-empty empty-condor&quot;.
We will make similar changes for documentation relating to the other empty-* packages.
We will not need to say anything about *.rpmnew files.

---+++ Effect on Users

None of these changes will affect empty-* packages that are already installed.
Unless they enable the one of the empty repos, users will not be able to install or update any of the empty-* packages.


---++ Old Proposal

To hide a package but let users unhide it if they wish to, we can put the packages in a separate repository.
However, creating a separate repository for only the four empty-* packages we have is overkill --
it would involve creating new koji tags, updating mash scripts to mirror them on repo.grid.iu.edu and adjusting mirror scripts (which might have to be propagated to mirror sites as well).
Therefore, it is better to &quot;fake&quot; the creation of a new repo by using yum includes/excludes.

---+++ Package Changes

We would modify our existing repo definition files (in the osg-release and osg-release-itb packages) to add the following line to each repo definition:
&lt;pre&gt;exclude=empty-*&lt;/pre&gt;
This keeps the empty-* packages from showing up in those repos.
We will create a new repo definition file called =osg-empty.repo= that contains three repos called =osg-empty=, =osg-testing-empty=, and =osg-development-empty=.
They will point to the same URLs as the non-empty repos they correspond to (=osg=, =osg-testing=, and =osg-development=), but with two differences:
they will be disabled by default, and they will have the following line:
&lt;pre&gt;includepkg=empty-*&lt;/pre&gt;
That line causes yum to _only_ consider the empty-* packages from those repos.

---+++ Documentation Changes

Our documentation states that to install a CE with Condor, the user must install the =condor= package first and then =osg-ce-condor=.
We will remove the requirement to install =condor= first.
Our documentation states that if a user has their own non-RPM condor install and they wish to install a CE with Condor, they must install =empty-condor= first and then =osg-ce-condor=.
We will change the line from saying &quot;yum install empty-condor&quot; to &quot;yum install --enablerepo=osg-empty empty-condor&quot;.
We will make similar changes for documentation relating to the other empty-* packages.
We will add a line stating that post-install, the user should look for *.rpmnew files in =/etc/yum.repos.d= and merge them if they exist (for reasons described below).

---+++ Effect on Users

None of these changes will affect empty-* packages that are already installed.

If the user has customized one of their OSG .repo files (to enable or disable them, for example), they will not pick up the new change to that .repo file.
This means that the repo that file references will still contain the empty-* packages.
The osg-empty repos will still exist, but will not conflict with the main repos.
Therefore, the user will not notice any difference.

Any .repo file that the user has not modified will get the changes.
Likewise, users making fresh installs will get the changes.
These users will be unable to install or upgrade empty-* packages without explicitly enabling one of the osg-empty repos.

Updates to empty-* packages are rare but not unknown.
(The latest update to an empty-* package was to empty-condor in August 2013.
The other empty-* packages have not been updated since May 2012, when they were merely bumped to rebuild with new %dist tags).

---+++ Release Announcement Changes

For any release in which we update one of the empty-* packages, we will have to explicitly mention that said update is only available if the user enables an osg-empty repo.
For any release in which we update osg-release, we will tell users to be on the lookout for *.rpmnew files in =/etc/yum.repos.d= and merge them if they exist.
