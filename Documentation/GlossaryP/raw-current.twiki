---+!! Glossary P
%DOC_STATUS_TABLE%

This topic holds the terms beginning with &quot;P&quot; and is included in the GlossaryOfTerms topic.

%STARTINCLUDE%
%INCLUDE{ &quot;GlossaryJumpIndex&quot; }%
%EDITTHIS%

#DefsPacman
   $ Pacman: A custom repository management system used by the %LINK_OSG% to install software on grid resources. Developed at and distributed by [[http://physics.bu.edu/~youssef/pacman/][Boston University]].  _See also_ [[GlossaryOfTerms#DefsMetronome][Metronome]].
#DefsPacmanCache
   $ Pacman Cache: A Pacman Cache is a repository that provides software to be installed using the =pacman= program. A Pacman Cache is defined by a URL or a location on a local file system providing the Pacman File. Some Pacman Caches are _registered_ and use simple names like _VDT_. Others are just URLs or file system locations.

   $ Pacman file: A .pacman file (e.g., xyz.pacman) contains instructions on how the software in the xyz package is fetched, installed, setup, uninstalled, what other packages it depends on, and so on.

   $ Pacman package: A software environment created by installation of a .pacman file.

   $ &lt;nop&gt;PanDA: A job scheduling and management system that provides an integrated service architecture with late binding of jobs, maximal automation through layered services, tight binding with ATLAS Distributed Data Management system, advanced error discovery and recovery procedures, and other features.

   $ Partner: Specifically, an individual or organization affiliated with a grid external to the Consortium with which the Open Science Grid interacts with through federation of resources.  More broadly, the Open Science Grid maintains a partner relationship with many other organizations that are related grid infrastructures, other high performance computing infrastructures, international consortia, and certain project organizations that operate in the broad space of high throughput or high performance computing. _See also_ [[Management/PartnerOrganizations][Partner Organizations]].

#DefsPermanentStorage
   $ Permanent storage: A data storage system, or a data collection in a storage system, wherein a physical file can only be created and removed by the owner of the data collection.

   $ Persistent storage: See [[GlossaryOfTerms#DefsPermanentStorage][Permanent storage]].

#DefsPfn
   $ Physical File Name(PFN): The URL of a physical replica of a file, minus the protocol.

#DefsPin
   $ Pinning (a file): Pinning refers to the capability of an [[GlossaryOfTerms#DefsSrm][Storage Resource Manager (SRM)]] to keep a particular file in non-permanent storage space for a period of time set by the client, prior to making the file eligible for transfer or removal from the SRM. A pin is requested and released by a client. Pinning a file is a way of keeping the file in place, while not locking its content.

#DefsPolicy
   $ Policy: A statement of well-defined requirements, conditions or preferences put forth by a Provider and/or Consumer that is utilized to formulate decisions leading to actions and/or operations within the infrastructure.  Policies of the Open Science Grid can be found at http://www.opensciencegrid.org/docdb_dashboard/index.php.

   $ Pool (in dCache): A virtual data partition in the [[GlossaryOfTerms#DefsDcache][dCache]] storage space.  A pool is a cell responsible for storing retrieved files and for providing access to that data.

   $ Pool (in Condor): The set of resources controlled by a single [[GlossaryOfTerms#DefsCondor][Condor]] instance.

   $ POOL: POOL is a Large Hadron Collider Computing Grid (LCG) software system and project, developed with US participation. It has been created to implement a common persistency framework for the LCG application area and to replace the Objectivity database system in the US LHC software. POOL is tasked to store experiment data and metadata in the multi Petabyte area in a distributed and grid enabled way. Read more at http://twiki.cern.ch/twiki/bin/view/Persistency.

#DefsPrivilege
   $ Privilege: The [[GlossaryOfTerms#DefsVo][Virtual Organization]] (VO) Services project, formerly known as the VO Privilege Project, implements finer-grained authorization for access to grid-enabled resources and services in order to improve user account assignment and management at grid sites, and reduce the associated administrative overhead. Depending on its implementation, privilege relies on, interfaces to and further develops at least some of the following independent pieces of VO-implemented and site-implemented authorization software: [[GlossaryOfTerms#DefsVoms][VOMS]], [[GlossaryOfTerms#DefsVomrs][VOMRS]], Grid-map callout interface, [[GlossaryOfTerms#DefsPrima][PRIMA]], [[GlossaryOfTerms#DefsGridUserManagementSystem][GUMS]], and [[GlossaryOfTerms#DefsSiteAuthorizationService][SAZ]]. The project closed in June 2009.

#DefsPrima
   $ PRIMA: PRIvilege Management and Authorization, a component of the privilege project for user authorization at a site, is used with GUMS and [[GlossaryOfTerms#DefsVoms][VOMS]] to implement dynamic, fine-grained, role-based identity mapping. PRIMA extracts the VOMS attributes containing the VO and role information from the user&#39;s proxy certificate, and queries GUMS for an appropriate local user account assignment. 

#DefsProvider
   $ Provider: Makes a Resource or [[GlossaryOfTerms#DefsAgent][Agent]] or [[GlossaryOfTerms#DefsService][Service]] available for access and use.

%COMMENT{type=&quot;tableappend&quot;}%
%STOPINCLUDE%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesWeichel

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = General

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = Student

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = IgorSfiligoi
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
--&gt;

Main.JamesWeichel - 15 Feb 2011
