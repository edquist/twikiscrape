---+!! Glexec for the OSG Worker Node
%DOC_STATUS_TABLE%
%TOC%

---+ WARNING

%RED%This page has been deprecated in favor of [[Documentation.Release3.InstallGlexec][this other one]].%ENDCOLOR%

---+ Introduction
This page covers installing the optional glexec package on a worker node, and assumes.

---+ About This Document

%ICON{hand}% This document is intended for system administrators that are installing the glexec software on their compute nodes.  It covers installation and configuration of the glexec using the RPMs distributed by OSG.

---+ Requirements
In order to use the glexec RPM, you need to satisfy the following pre-requisites:
   1. Use a GUMS server version 1.3 or later.
   1. All worker nodes must have a host certificate in place.  They will not act as server, nor do they need to be recognized by the outside world.
      * If you do not want to generate unique host certificates for each node, you may reuse a self-signed certificate, as long as your GUMS server recognizes it.
      * Host certificate management is not covered here.

Please notice that it will create a *glexec* user, if you don&#39;t already have one in place.

---+ Install Instructions
If you have already installed the worker node, you do not need to re-install the repository information or CA certificates. 

%INCLUDE{&quot;YumRepositories&quot; section=&quot;OSGRepoBrief&quot; TOC_SHIFT=&quot;+&quot;}%

%INCLUDE{&quot;InstallCertAuth&quot; section=&quot;OSGBriefCaCerts&quot; TOC_SHIFT=&quot;+&quot;}%

---+ Installing the glexec RPM

Install the glexec along with the worker node: &lt;pre class=&quot;rootscreen&quot;&gt;%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing install osg-wn-client-glexec &lt;/pre&gt;

---+ Alternative installation: just glexec

If you want to install glexec without installing the entire worker node client, you can install just the =glexec= package: &lt;pre class=&quot;rootscreen&quot;&gt;%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing install glexec &lt;/pre&gt;

---+ Configuration

Edit =/etc/lcmaps.db= :
   1. Change the endpoint of =gumsclient= to reflect the hostname of your GUMS server.
   1. Enable glexec tracking by uncommenting the following lines: &lt;pre class=&quot;file&quot;&gt;glexectracking = &quot;lcmaps_glexec_tracking.mod&quot;
           &quot;-exec /usr/sbin/glexec_monitor&quot;&lt;/pre&gt;
   1. Choose one of the three policies found at the section of the file beginning with glexec: and uncomment the relevant lines.
   1. If you use SAZ for additional authorization, uncomment the relevant lines.
   1. Glexec assigns a unique, ephemeral GID to each process it launches, providing better protection from runaway jobs.  By default, it uses the GID range 65000 to 65049; if this conflicts with local, in-use GIDs, change the possible GID range.  You should have 3-4 GID&#39;s in the range for every job slot on the machine.
   1. Make sure that your GUMS server has host to group mappings for all of your worker nodes that will use glexec.  Without these mappings, glexec will get LCMAPS failures when GUMS rejects the request for a mapping from glexec.

Invoking glexec will execute the process under the mapped user name (UID). So you must create all the users that GUMS may ever return.

---+ Testing

   1. Switch to a non-root user.
   1. Create yourself a valid proxy with =voms-proxy-init=.
   1. Invoke glexec as follows replacing =USERID= with the uid of the account you are using ; you should get back the local ID your proxy was mapped to: &lt;pre class=&quot;screen&quot;&gt;%UCL_PROMPT% 
%UCL_PROMPT% GLEXEC_CLIENT_CERT=/tmp/x509up_u%RED%USERID%ENDCOLOR% /usr/sbin/glexec /usr/bin/id
uid=7166(osgedu) gid=9803(osgedu) groups=65000(glexec00)&lt;/pre&gt;

All parts of glexec use syslog (facility LOCAL1) by default; for failures, most systems will record the logging information into =/var/log/messages=.

---+ Comments
%COMMENT{type=&quot;tableappend&quot;}%

&lt;!-- REVIEW PROCESS

   * Local DOC_ROLE		  = SysAdmin
   
   * Local DOC_TYPE		  = Installation
   
   * Local DOC_AREA               = ComputeElement

   * Local OWNER                  = DaveDykstra
   * Local INCLUDE_REVIEW = %YES%
   * Local INCLUDE_TEST   = %YES%
   * Local REVIEW_READY   = %YES%
   * Local TEST_READY     = %NO%
   * Local RELEASE_READY  = %NO%

   * Local REVIEWER       = AlainRoy
   * Local REVIEW_PASSED  = %IN_PROGRESS%
 
   * Local TESTER         = AlainRoy
   * Local TEST_PASSED  = %NO%

--&gt;


