---++ Organization of the !RSV Subversion repository

Before proceeding, make sure that you have [[RsvRepoAccess][gotten access to the RSV Subversion repository]].

The repository is located at:

=https://vdt.cs.wisc.edu/software/rsv/=

The trunk is where the main development takes place.  Branches can be used for development that is not ready for release.

---++ Development Process

If you are committing to the trunk, or if you need to make changes to any of the shared files (such as !RSVMetric.pm) please contact the [[RSVContactInfo][current !RSV owner]] to avoid conflicts. 

If you have your own development branch feel free to make any number of changes in this area.  However, you should realize that OSG is conservative about pushing out new changes, so you should either keep your changes minimal, or you should discuss the scope of your changes with the Software Tools Group. It&#39;s better to have the discussion up front about what changes are happening instead of surprising people at the last minute with a large set of changes. 


---++ Release process for !RSV

When you have a set of changes in your branch that you are satisfied with, please contact the VDT team (vdt-support@opensciencegrid.org) and let us know. Please give us a set of release notes that contain the user-visible set of changes you made. We will merge your branch into the trunk and cut a new test release. (Note: we do not expect you to do the merge yourself.) This release may not happen immediately--it may be timed to include other !RSV updates. This test release will then undergo up to three rounds of testing:

   1. Testing in the VDT nightly test suite. This is rather light testing, but it does catch some basic errors. 
   1. Testing in the Validation Testbed. 
   1. Testing in the Trash/Trash/Integration Testbed. 

In some cases (such as the need for an urgent bug fix), we may shorten or skip the testing, but we usually go through all three steps. When the testing is complete, the VDT team will merge the test branch to the production branch, verify that everything looks as it should, and cut a new production release. 

---++ Creating a tarball for the !RSV release

Most people will not need to do this, because normally the VDT team will do this. 

   * Merge all necessary changes into the trunk
   * See the README file in the trunk for information on generating tarballs
   * Edit the RPM spec files and source files in the native/ module of the SVN checkout to refer to the new release.  
   * Rebuild the RPMs in Koji
   * Promote to testing/prod as necessary
