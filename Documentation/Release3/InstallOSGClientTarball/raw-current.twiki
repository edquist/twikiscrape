---+!! Installing OSG Client as Tarball (Anywhere by Anyone)
%DOC_STATUS_TABLE%
%TOC%

---# About This Document
%ICON{hand}% This document is for grid users and system administrators. It covers the installation of the OSG Client Tools Package as a Tarball. This packaging is provided to allow installations &quot;Anywhere by Anyone&quot; (!AbA) (e.g. by non-root users or on NFS shares). If you have root access, your OS is %SUPPORTED_OS%, and have no special requirements, we recommend to use the native packages as described in InstallOSGClient. 
For more background on !AbA packages, see the [[SoftwareTeam.NonRootClients][non-root clients project page]].

This package is required on every host used by grid users to submit jobs, transfer data, or interact otherwise with the OSG. Note there is also a [[InstallWNClientTarball][Worker Node Client (!AbA]] and [[InstallWNClient][native)]] that is not a valid substitute for this package.  Likewise the OSG Client cannot replace the Worker Node Client in the batch jobs environment on %LINK_GLOSSARY_WN% and %LINK_GLOSSARY_CE%.  

The OSG Client Tools Package includes:
   * the %LINK_GLOBUS_TOOLKIT% providing client tools for authorization, data transfer and job submission.
   * a list of [[Documentation/GlossaryC#DefsCA][CA]] [[Documentation/GlossaryC#DefsCertificate][Certificates]] trusted by the OSG (installed separately).
   * the [[Documentation/GlossaryC#DefsCRL][Certificate Revocation List]] and tools to keep it current.
   * %LINK_GLOSSARY_CONDOR% client tools for job submission and workflow management.
   * client tools to access a %LINK_GLOSSARY_SRM% provided by a %LINK_GLOSSARY_SE%.

%NOTE% This document does not cover the usage of the client tools. An introduction how to use the OSG can be found [[Documentation.UsingTheGrid][here]]. A more detailed description how to interact with a %LINK_GLOSSARY_CE% is located [[ReleaseDocumentation.UserCESimpleTest][here]].

%INCLUDE{&quot;Trash/DocumentationTeam/DocConventions&quot; section=&quot;Header&quot;}%
%INCLUDE{&quot;Trash/DocumentationTeam/DocConventions&quot; section=&quot;CommandLine&quot;}%

---# Engineering Considerations

The OSG Client Tools Package is required on hosts used to submit jobs to the Open Science Grid. We recommend to install the OSG Client Tools on a _dedicated_ job submission host for large scale job submissions to production resources on the OSG. We recommend to use a [[#PublicIpAddress][public IP address and a fully qualified domain name]] for shared job submission hosts. 


---# Requirements
---## Host and OS
   1 A host to install the OSG Client (pristine node). No grid host certificate is required.
   1 OS is %SUPPORTED_OS%.  Currently most of our testing has been done on Scientific Linux 5.

---## Certificates
   1 If you want to test and use the installation then a valid [[Documentation.CertificateUserGet][grid user certificate]] is required.

---## Networking
%STARTSECTION{&quot;Firewalls&quot;}%
%INCLUDE{&quot;FirewallInformation&quot; section=&quot;FirewallTable&quot; lines=&quot;portrange,portsource,condor&quot;}%

%LINK_GLOSSARY_GRAM% is not really a service on the client. It is the protocol used by the Globus clients. Anyway the clients still requires the port ranges to be open: job submission needs ports to reach the servers and to transfer back the output; file transfers need ports for control and data sessions.&lt;br&gt;
%LINK_GLOSSARY_CONDOR% is in reality Condor-G the version configured to submit grid jobs.

%ENDSECTION{&quot;Firewalls&quot;}%

You&#39;ll find more client specific details also in the [[#Firewall_Considerations][Firewall section]] of this document.

#ClientContents
---# Contents of the OSG Client package

The OSG client may be updated from time to time. As of OSG 3.1.8 in September 2012, the OSG client contains:

   * [[InstallWNClient#WnContents][Everything in the OSG worker node client]]
   * Bandwidth Test Controller (bwctl) client
   * GSI !OpenSSH client
   * Globus GRAM clients (including globus-job-run)
   * Globus certificate utilities (including grid-proxy-init)
   * Network Diagnostic Tool (NDT)
   * Nmap (security scanner)
   * One-Way Ping (owamp) client)
   * lcg-info
   * lcg-infosites
   * osg-cert-scripts
   * osg-discovery
   * osg-system-profiler
   * osg-version

The =osg-client-condor= package, installing also HTCondor, is available only as native package.


---# Download, Installation and Configuration Procedure


---## Download the Client
Please pick the osg-client tarball that is appropriate for your distribution and architecture.
You will find them in [[http://repo.grid.iu.edu/tarball-install/]] .

The latest available the tarballs for OSG 3.2 are:
   * [[http://repo.grid.iu.edu/tarball-install/3.2/osg-client-latest.el5.i386.tar.gz][Full client for 32-bit RHEL5]]
   * [[http://repo.grid.iu.edu/tarball-install/3.2/osg-client-latest.el5.x86_64.tar.gz][Full client for 64-bit RHEL5]]
   * [[http://repo.grid.iu.edu/tarball-install/3.2/osg-client-latest.el6.i386.tar.gz][Full client for 32-bit RHEL6]]
   * [[http://repo.grid.iu.edu/tarball-install/3.2/osg-client-latest.el6.x86_64.tar.gz][Full client for 64-bit RHEL6]]
%NOTE% The OSG 3.2 series is deprecated. It will no longer be supported after August 9th, 2016.

As of OSG 3.3, only the [[InstallWNClientTarball][worker node client tarball]] is available.

---## Install the Client

   1. Unpack the tarball.
   1. Move the directory that was created to where you want the tarball client to be.
   1. Run =osg-post-install= (==%RED%/path/to/client/%ENDCOLOR%osg/osg-post-install==) to fix the directories in the installation.&lt;br/&gt; \
      Note that after this, you will not be able to relocate the install again.
   1. Source the setup ==source %RED%/path/to/client/%ENDCOLOR%setup.sh== (or ==setup.csh== depending on the shell)
   1. Download and set up CA certificiates using ==osg-ca-manage== (See OsgCaManage for the available options)
   1. Download !CRLs using ==fetch-crl== (EL6) or ==fetch-crl3== (EL5)

Example install (in =$HOME/test-install=, the ==%RED%/path/to/client/%ENDCOLOR%== is =$HOME/test-install/osg-client= ):

&lt;pre class=&#39;screen&#39;&gt;
%UCL_PROMPT% mkdir $HOME/test-install
%UCL_PROMPT% cd $HOME/test-install
%UCL_PROMPT% wget http://repo.grid.iu.edu/tarball-install/3.2/osg-client-latest.el6.x86_64.tar.gz
%UCL_PROMPT% tar xzf osg-client-latest.el6.x86_64.tar.gz
%UCL_PROMPT% cd osg-client
%UCL_PROMPT% osg/osg-post-install
%UCL_PROMPT% . setup.sh
%UCL_PROMPT% osg-ca-manage setupCA --url osg
%UCL_PROMPT% fetch-crl
&lt;/pre&gt;

%NOTE% Unpacking the tarball creates an osg-client subdirectory

&lt;!--
---++!! Install Condor-G
Optionally, you may want to install Condor-G, too. Condor-G is needed to submit jobs directly to the OSG sites.&lt;br&gt;
*Note:* Most users don&#39;t need this.

   1. Install the osg-client-condor meta package, which will pull in all dependencies. &lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% yum install osg-client condor   &lt;/pre&gt;
--&gt;

---# Services
The client is a collection of client programs that do not require service startup or shutdown. 
The only services are osg-update-certs that keeps uptodate the CA certificates and fetch-crl that keeps uptodate the CRLs.
Following the instructions below you&#39;ll add the services to your crontab that will take care to run them periodically until you remove them.

&lt;!--
The only services are osg-update-certs that keeps uptodate the CA certificates, fetch-crl that keeps uptodate the CRLs and the optional HTCondor-G, only if you installed it.
%NOTE% Avoid to interfere with the system HTCondor. If you are root, the commands below may start/stop/... also a HTCondor installed outside of the client installation. Be aware of which one you are controlling.
--&gt;

---## Auto-updating certificates and CRLs

You must create cron jobs to run fetch-crl/fetch-crl3 and osg-update-certs to update your !CRLs and certificates automatically.

Here is what they should look like. (Note: fill in %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR% with the full path of your tarball install, including the =osg-client= directory that is created by the tarball. You can use ==echo $OSG_LOCATION== to see the correct path).

&lt;pre class=&#39;file&#39;&gt;
# Cron job to update certs.
# Runs every hour by default, though does not update certs until they&#39;re at
# least 24 hours old.  There is a random sleep time for up to 45 minutes (2700
# seconds) to avoid overloading cert servers.
10 * * * *   ( . %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/setup.sh &amp;&amp; osg-update-certs --random-sleep 2700 --called-from-cron )
&lt;/pre&gt;

&lt;pre class=&#39;file&#39;&gt;
# Cron job to update CRLs for EL5:
# Runs every 6 hours at, 45 minutes +/- 3 minutes.
42 */6 * * *   ( . %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/setup.sh &amp;&amp; fetch-crl3 -q -r 360 )
&lt;/pre&gt;

&lt;pre class=&#39;file&#39;&gt;
# Cron job to update CRLs for EL6:
# Runs every 6 hours at, 45 minutes +/- 3 minutes.
42 */6 * * *   ( . %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/setup.sh &amp;&amp; fetch-crl -q -r 360 )
&lt;/pre&gt;

You might want to configure proxy settings in $OSG_LOCATION/etc/fetch-crl.conf (EL6) or $OSG_LOCATION/etc/fetch-crl3.conf (EL5)

---## Starting and Enabling Services
To start the services you must edit your cron with ==crontab -e== and add the lines above.
==crontab -l== lists the current services.

---## Stopping and Disabling Services
To stop the services you must edit your cron with ==crontab -e== and remove or comment out the lines above.
==crontab -l== lists the current services.


---# Usage
A user must set up their environment before running any of the software provided in the client.

There are two way to do this: either source =setup.sh= or =setup.csh= before
running a command, or use the =osgrun= wrapper. All three files are located in
the top-level directory of the client. In the examples below replace %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR% with the path of your tarball install, including the osg-client directory resulting from the tarball (e.g. =$HOME/test-install/osg-client=).

%NOTE% If =setup.sh=, =setup.csh=, or =osgrun= are missing, then run
=osg/osg-post-install= to (re)create them.

Example usage with =setup.sh=: &lt;pre class=&#39;screen&#39;&gt;
%UCL_PROMPT% . %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/setup.sh
%UCL_PROMPT% grid-proxy-init
%UCL_PROMPT% globus-job-run &lt;em&gt;GATEKEEPER&lt;/em&gt; /usr/bin/id
&lt;/pre&gt;

(If using =csh= or =tcsh=, source =setup.csh= instead of =setup.sh=)

The user might find it convenient to create a shell alias to =setup.sh= to avoid having to type the full path every session.
For example by adding the following to their =~/.bashrc=:
&lt;pre class=&#39;file&#39;&gt;
alias osg_setup=&quot;. %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/setup.sh&quot;
&lt;/pre&gt;

Example usage with =osgrun=: &lt;pre class=&#39;screen&#39;&gt;
%UCL_PROMPT% %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/osgrun grid-proxy-init
%UCL_PROMPT% %RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/osgrun globus-job-run &lt;em&gt;GATEKEEPER&lt;/em&gt; /usr/bin/id
&lt;/pre&gt;

The advantage of =osgrun= is that the environment of the user is left
unchanged, whereas sourcing =setup.sh= or =setup.csh= will modify variables
like =PATH=, =LD_LIBRARY_PATH=, and others, until the user exits from their
shell.

The user might find it useful to set up a shell alias to =osgrun= to avoid having to type the full path every command.
For example by adding the following to their =~/.bashrc=:
&lt;pre class=&#39;file&#39;&gt;
alias osgrun=&quot;%RED%&amp;lt;OSG_LOCATION&amp;gt;%ENDCOLOR%/osgrun&quot;
&lt;/pre&gt;


%STARTSECTION{&quot;ClientFirewallNotes&quot;}%
---#  Firewall Considerations

The %LINK_GLOBUS_TOOLKIT% and %LINK_GLOSSARY_CONDOR% require the client host to _allow_ inbound and outbound network connections. This section describes what additional configuration steps have to be taken if the client host is located behind a firewall. For a more detailed description on firewalls consult [[FirewallInformation][this]] document.

The ranges that you choose below in the Globus and HTCondor configuration must be consistent with the firewall configuration. If the Globus and HTCondor ranges overlap there won&#39;t be port collisions but you will need a bigger range.

#PublicIpAddress
---## Public IP Address and DNS
If you use the the client host as HTCondor-G submit host for long running jobs, it needs to be reached by remote resources. The easier option is to use a _public_ IP address and not be be located within a private network. For other options check below. To make sure that the client host uses a public IP address and is assigned a fully qualified domain name, use:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% hostname -f
%RED%%UCL_HOST_FQDN%%ENDCOLOR%
%UCL_PROMPT% nslookup %UCL_HOST_FQDN%
Server:		131.215.125.1
Address:	131.215.125.1#53

Name:           %RED%%UCL_HOST_FQDN%%ENDCOLOR%
Address:        %RED%131.215.114.49%ENDCOLOR%
&lt;/pre&gt;

If the client host is not assigned a fully qualified domain name, you can assign the _public IP address_ to the =GLOBUS_HOSTNAME= environment variable, e.g.:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% cat &lt;&lt; CFG &gt;&gt; ~/.bashrc
export GLOBUS_HOSTNAME=%RED%131.215.114.49%ENDCOLOR%
CFG
&lt;/pre&gt; 

Make sure to re-login after you update =~/.bashrc= so that the changes take effect.

---## Configuring the firewall and NAT
If the client host is on a private network with NAT or anyway behind a firewall, even a host firewall, the firewall and eventual NAT must be configured correctly.

Assuming you use iptables and chose the port range 20k-25k, you must

Insert the following rules &lt;pre class=&quot;file&quot;&gt;
-A RH-Firewall-1-INPUT  -m state --state NEW -p tcp -m tcp --dport 20000:24999 -j ACCEPT
-A RH-Firewall-1-INPUT  -m state --state NEW -p udp -m udp --dport 20000:24999 -j ACCEPT
&lt;/pre&gt;    
into =/etc/sysconfig/iptables= and &lt;br&gt;
Restart iptables with &lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% service iptables restart
&lt;/pre&gt;

%NOTE% It is possible to use a client host that is located inside a private network using Network Address Translation. In this case the gatekeeper must be configured to forward incoming connections to the client host. The =$GLOBUS_HOSTNAME= environment variable must be set to the gatekeeper address. This procedure is currently not documented.

---## Globus Port Range

%LINK_GLOSSARY_GRAM% can be configured to only use a specified range of TCP ports on the client host for inbound (=$GLOBUS_TCP_PORT_RANGE=) and outbound (=$GLOBUS_TCP_SOURCE_RANGE=) connections. More information can be found in the [[http://dev.globus.org/wiki/FirewallHowTo][Globus firewall HowTo]]. For example:
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% cat &lt;&lt; CFG &gt;&gt; ~/.bashrc
export GLOBUS_TCP_PORT_RANGE=20000,24999
export GLOBUS_TCP_SOURCE_RANGE=20000,24999
CFG
&lt;/pre&gt;

Make sure to re-login after you update =~/.bashrc= so that the changes take effect.

%NOTE% See also InstallCondor for the installation and configuration of HTCondor (including its Firewall requirements).

%ENDSECTION{&quot;ClientFirewallNotes&quot;}%

%INCLUDE{&quot;InstallOSGClient&quot; section=&quot;ClientTest&quot; }%


---# Getting Help
To get assistance please use this [[HelpProcedure][Help Procedure]].


%INCLUDE{&quot;InstallOSGClient&quot; section=&quot;ClientReferences&quot; }%

About !AbA software:
   * SoftwareTeam.NonRootClientBeta
   * SoftwareTeam.NonRootClients

---# Comments
%COMMENT{type=&quot;tableappend&quot;}%


&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = MarcoMambelli

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Trash/Trash/Integration|Monitoring|Operations|Security|Storage|Trash/Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MatyasSelmeci
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = SuchandraThapa
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
--&gt;

