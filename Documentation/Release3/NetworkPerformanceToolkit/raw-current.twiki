%DOC_STATUS_TABLE%

---+!! Network Performance Toolkit
%TOC{}%

---+ About this Document
&lt;!-- useful variable definitions
   * Local NDT = Network Diagnostic Tool (NDT)
   * Local OWAMP = One Way Active Measurement Protocol (OWAMP)
   * Local BWCTL = Bandwidth Control tool (BWCTL)
   * Local NPAD = Network Path and Application Diagnosis (NPAD)
   * Local LINK_INTERNET2 = [[http://www.internet2.edu/][Internet2]]
   * Local LINK_NPT = [[http://www.perfsonar.net/use/navigating-toolkit-interface/][Network Performance Toolkit]]
   * Local UCL_CWD = /opt/npt
   * Local LINK_PERFSONAR = [[http://www.perfsonar.net/about][perfSONAR]]
   * Local LINK_PERFSONARHP = [[http://docs.perfsonar.net/][perfSONAR home page]]
--&gt;

%ICON{&quot;hand&quot;}% This document is for System Administrators and advanced Grid Users. It describes the usage of tools provided by the %LINK_VDT% to evaluate the network performance between resources.

---+ Introduction

The %LINK_NPT% is a collection of applications provided by the [[http://www.perfsonar.net/][perfSONAR project]] and distributed by the %LINK_OSG%. The _server_ components of the Network Performance Toolkit have been installed on dedicated resources of the %LINK_OSG%. Following _client_ tools are described in this document:

   * %NDT%
   * %OWAMP%
   * %BWCTL%
   * %NPAD%

---+ Installation

---++ Client Site Installation

The %LINK_NPT% is installed with the [[InstallOSGClient][OSG Client]]. Specifically, the tools included are: BWCTL, NDT and OWAMP (bwctl-client, bwctl-server, bwctl, ndt, owamp-client). NPAD is currently not in OSG client. 

If you just want to install the OSG command line clients you can do the following:: 
&lt;pre class=&quot;rootscreen&quot;&gt;
yum install bwctl-client
yum install owamp-client
yum install ndt-client
yum install npad-client
&lt;/pre&gt;

You may install these utilities separately as RPM using yum by following the %LINK_PERFSONAR% instructions. The packages are in the OSG repository, some of them with a separate client or server version, available for the OSG supported platforms: 
   * NDT: ndt
   * OWAMP: owamp, owamp-client, owamp-server
   * BWCTL: bwctl, bwctl-client, bwctl-server
   * NPAD: npad


---++ Server Site Installation

The %LINK_PERFSONAR%-based tools and services support the following tasks for OSG VO&#39;s:

   1 monitor site-to-site network paths and ensure that these paths remain operational
   1 troubleshoot performance problems quickly and efficiently

The &lt;i&gt;server site components&lt;/i&gt; can be brought-up _on demand_ using the netinstall provided by [[http://docs.perfsonar.net/install_getting.html#downloads][perfSONAR project downloads]]. Source packages are provided on the %LINK_PERFSONARHP%.

Once the Toolkit server has booted you may begin on-demand testing. The server tools will use a generic set of configuration files.  The intent is to make it easy to stand up a temporary server when and where it is needed.  However, it is expected that a permanently installed server will be customized/configured, allowing it to support both on-demand testing and regularly scheduled monitoring.  See the %LINK_PERFSONARHP% for step-by-step instructions on how to complete this customization process.

---+ Finding Target Servers

Finding servers against which to run on-demand tests can be a major impediment to effectively using these tools.  The %LINK_PERFSONAR% project tackles this problem by running a registration service for participating tools.  The Performance Node ISO automatically uses this Lookup Service to advertise the tools&#39; existence.  You can also create custom views by making web-service calls to retrieve the data of interest.  See the [[http://www.perfsonar.net/activeServices/][perfSONAR service page]] for more details.

We also have requested ALL OSG sites register their !perfSONAR Toolkit installations in OIM (See https://www.opensciencegrid.org/bin/view/Documentation/RegisterPSinOIM ).  You can use the !MyOSG -&gt; Resource Group -&gt; Resource Group Summary page to see a list of !perfSONAR Toolkit hosts that are installed at http://tinyurl.com/mxfmutg.    Using this list you can select a &quot;closest&quot; relevant instance to use for running on-demand tests.  Alternately if you have a perfSONAR toolkit install, the web interface has a &quot;Global Services&quot; link you can visit to see ALL perfSONAR instances that have updated the perfSONAR lookup service.


---+ Using the Client Tools

The &lt;i&gt;client site components&lt;/i&gt; are installed with the [[ReleaseDocumentation/ClientInstallationGuide][OSG Client]] (see above). These tools support delay measurements (OWAMP), throughput measurements (BWCTL), and advanced diagnostics (NDT and NPAD).  The command syntax for each tool is described in the following sub-sections. Each of the client tools listed above communicates with a companion server process to perform a measurement/test.

---++ %NDT%

The %NDT% runs a series of short tests to determine what the current performance is and what, if anything, is limiting that performance.  It can distinguish between host configuration and network infrastructure problems.  To diagnose the CE/SE configuration and network connection run the =web100clt= command:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% web100clt –n %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT%  web100clt -n uct2-net1.uchicago.edu
Testing network path for configuration and performance problems  --  Using IPv4 address
Checking for Middleboxes . . . . . . . . . . . . . . . . . .  Done
checking for firewalls . . . . . . . . . . . . . . . . . . .  Done
running 10s outbound test (client to server) . . . . .  939.43 Mb/s
running 10s inbound test (server to client) . . . . . . 940.29 Mb/s
The slowest link in the end-to-end path is a 10 Gbps 10 Gigabit Ethernet/OC-192 subnet
Information: Other network traffic is congesting the link
Information: The receive buffer should be 11780 kbytes to maximize throughput
Server &#39;uct2-net1.uchicago.edu&#39; is not behind a firewall. [Connection to the ephemeral port was successful]
Client is not behind a firewall. [Connection to the ephemeral port was successful]
Packet size is preserved End-to-End
Server IP addresses are preserved End-to-End
Client IP addresses are preserved End-to-End
&lt;/pre&gt;
%ENDTWISTY%

More details can be obtained by using the =-l= command line option to =web100ctl=:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% web100clt –n %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR% %RED%-l%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% web100clt -l -n uct2-net1.uchicago.edu
Testing network path for configuration and performance problems  --  Using IPv4 address
Checking for Middleboxes . . . . . . . . . . . . . . . . . .  Done
checking for firewalls . . . . . . . . . . . . . . . . . . .  Done
running 10s outbound test (client to server) . . . . .  940.90 Mb/s
running 10s inbound test (server to client) . . . . . . 940.33 Mb/s
The slowest link in the end-to-end path is a 10 Gbps 10 Gigabit Ethernet/OC-192 subnet
Information: Other network traffic is congesting the link
Information: The receive buffer should be 11743 kbytes to maximize throughput
Server &#39;uct2-net1.uchicago.edu&#39; is not behind a firewall. [Connection to the ephemeral port was successful]
Client is not behind a firewall. [Connection to the ephemeral port was successful]

	------  Web100 Detailed Analysis  ------

Web100 reports the Round trip time = 9.62 msec;the Packet size = 1448 Bytes; and 
No packet loss was observed.
This connection is network limited 99.27% of the time.

    Web100 reports TCP negotiated the optional Performance Settings to: 
RFC 2018 Selective Acknowledgment: ON
RFC 896 Nagle Algorithm: ON
RFC 3168 Explicit Congestion Notification: OFF
RFC 1323 Time Stamping: ON
RFC 1323 Window Scaling: ON; Scaling Factors - Server=13, Client=7
The theoretical network limit is 597.89 Mbps
The NDT server has a 32768 KByte buffer which limits the throughput to 26616.76 Mbps
Your PC/Workstation has a 3060 KByte buffer which limits the throughput to 2485.67 Mbps
The network based flow control limits the throughput to 1302.53 Mbps

Client Data reports link is &#39;  9&#39;, Client Acks report link is &#39;  9&#39;
Server Data reports link is &#39;  9&#39;, Server Acks report link is &#39;  8&#39;
Packet size is preserved End-to-End
Server IP addresses are preserved End-to-End
Client IP addresses are preserved End-to-End
&lt;/pre&gt;
%ENDTWISTY%
 
To increase the output further use:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% web100clt –n %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR% %RED%-ll%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% web100clt -ll -n uct2-net1.uchicago.edu
Testing network path for configuration and performance problems  --  Using IPv4 address
Checking for Middleboxes . . . . . . . . . . . . . . . . . .  Done
checking for firewalls . . . . . . . . . . . . . . . . . . .  Done
running 10s outbound test (client to server) . . . . .  935.88 Mb/s
running 10s inbound test (server to client) . . . . . . 910.21 Mb/s
The slowest link in the end-to-end path is a 10 Gbps 10 Gigabit Ethernet/OC-192 subnet
Information: Other network traffic is congesting the link
Server &#39;uct2-net1.uchicago.edu&#39; is not behind a firewall. [Connection to the ephemeral port was successful]
Client is not behind a firewall. [Connection to the ephemeral port was successful]

	------  Web100 Detailed Analysis  ------

Web100 reports the Round trip time = 3.72 msec;the Packet size = 1448 Bytes; and 
No packet loss was observed.
This connection is sender limited 72.74% of the time.
This connection is network limited 27.26% of the time.

    Web100 reports TCP negotiated the optional Performance Settings to: 
RFC 2018 Selective Acknowledgment: ON
RFC 896 Nagle Algorithm: ON
RFC 3168 Explicit Congestion Notification: OFF
RFC 1323 Time Stamping: ON
RFC 1323 Window Scaling: ON; Scaling Factors - Server=13, Client=7
The theoretical network limit is 2638.96 Mbps
The NDT server has a 32768 KByte buffer which limits the throughput to 68872.75 Mbps
Your PC/Workstation has a 2717 KByte buffer which limits the throughput to 5710.68 Mbps
The network based flow control limits the throughput to 3349.58 Mbps

Client Data reports link is &#39;  9&#39;, Client Acks report link is &#39;  9&#39;
Server Data reports link is &#39;  9&#39;, Server Acks report link is &#39;  8&#39;
Packet size is preserved End-to-End
Server IP addresses are preserved End-to-End
Client IP addresses are preserved End-to-End
CurMSS: 1448
X_Rcvbuf: 33554432
X_Sndbuf: 33554432
AckPktsIn: 79187
AckPktsOut: 0
BytesRetrans: 0
CongAvoid: 0
CongestionOverCount: 0
CongestionSignals: 1
CountRTT: 79188
CurCwnd: 1227904
CurRTO: 202
CurRwinRcvd: 2782208
CurRwinSent: 24576
CurSsthresh: 815224
DSACKDups: 0
DataBytesIn: 0
DataBytesOut: 1163175456
DataPktsIn: 0
DataPktsOut: 788529
DupAcksIn: 0
ECNEnabled: 0
FastRetran: 0
MaxCwnd: 1631896
MaxMSS: 1448
MaxRTO: 251
MaxRTT: 82
MaxRwinRcvd: 2782208
MaxRwinSent: 24576
MaxSsthresh: 815224
MinMSS: 1448
MinRTO: 201
MinRTT: 0
MinRwinRcvd: 14720
MinRwinSent: 17896
NagleEnabled: 1
OtherReductions: 0
PktsIn: 79187
PktsOut: 788529
PktsRetrans: 0
RcvWinScale: 13
SACKEnabled: 3
SACKsRcvd: 0
SendStall: 1
SlowStart: 0
SampleRTT: 2
SmoothedRTT: 2
SndWinScale: 7
SndLimTimeRwin: 0
SndLimTimeCwnd: 2746623
SndLimTimeSender: 7328191
SndLimTransRwin: 0
SndLimTransCwnd: 2
SndLimTransSender: 3
SndLimBytesRwin: 0
SndLimBytesCwnd: 330034080
SndLimBytesSender: 833141376
SubsequentTimeouts: 0
SumRTT: 294370
Timeouts: 0
TimestampsEnabled: 1
WinScaleRcvd: 7
WinScaleSent: 13
DupAcksOut: 0
StartTimeUsec: 806483
Duration: 10076637
c2sData: 9
c2sAck: 9
s2cData: 9
s2cAck: 8
half_duplex: 0
link: 100
congestion: 1
bad_cable: 0
mismatch: 0
spd: 923.63
bw: 2638.96
loss: 0.000001268
avgrtt: 3.72
waitsec: 0.00
timesec: 10.00
order: 0.0000
rwintime: 0.0000
sendtime: 0.7274
cwndtime: 0.2726
rwin: 21.2266
swin: 256.0000
cwin: 12.4504
rttsec: 0.003717
Sndbuf: 33554432
aspd: 0.00000
CWND-Limited: 70431.00
minCWNDpeak: -1
maxCWNDpeak: -1
CWNDpeaks: -1
&lt;/pre&gt;
%ENDTWISTY%

---++ %OWAMP%

The %OWAMP% is an advanced version of the common =ping= program.  The OWAMP client =owping= communicates with an OWAMP server and measures the delay in each direction using NTP based time stamps.  OWAMP can be used to identify delay, loss, and packet reordering problems inside the network. To measure the delay between the CE/SE and the remote server use the =owping= command:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% owping %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% owping uct2-net1.uchicago.edu
owping: FILE=time.c, LINE=112, NTP: Status UNSYNC (clock offset issues likely)
Approximately 13.1 seconds until results available

--- owping statistics from [128.135.158.175]:52420 to [uct2-net1.uchicago.edu]:58713 ---
SID:	80879ed8d1c711bc04f850dfe3c2c601
first:	2011-07-12T13:32:29.123
last:	2011-07-12T13:32:40.510
100 sent, 0 lost (0.000%), 0 duplicates
one-way delay min/median/max = 0.287/0.5/1.65 ms, (unsync)
one-way jitter = 0 ms (P95-P50)
TTL not reported
no reordering


--- owping statistics from [uct2-net1.uchicago.edu]:58908 to [128.135.158.175]:41285 ---
SID:	80879eafd1c711bc05be3c10ca8f8d68
first:	2011-07-12T13:32:29.103
last:	2011-07-12T13:32:39.637
100 sent, 0 lost (0.000%), 0 duplicates
one-way delay min/median/max = -0.0234/0.2/0.177 ms, (unsync)
one-way jitter = 0 ms (P95-P50)
TTL not reported
no reordering
&lt;/pre&gt;
%ENDTWISTY%
  
---++ %BWCTL%

The %BWCTL% is a wrapper for the =iperf= command, its policy and a daemon. BWCTL improves the usability of =iperf= by avoiding following problems:

   1 need for remote access to the target host used for measurement
   1 security concerns about leaving an =iperf= daemon running on the target host

BWCTL supports testing in either direction, or between 2 remote BWCTL servers from a third location. To measure the current throughput from your SE/CE to the remote server use the =bwctl= command:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% bwctl –s %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% bwctl -a 4 -s uct2-net2.uchicago.edu
bwctl: NTP: Status UNSYNC (clock offset problems likely)
bwctl: Unable to contact a local bwctld: Spawning local tool controller
bwctl: NuttcpAvailable(): We were unable to verify that nuttcp is working. Likely you do not have it installed. exit status: 1: output: exec(nuttcp): No such file or directory
bwctl: Couldn&#39;t initialize tool &quot;nuttcp&quot;. Disabling it.
bwctl: Using tool: iperf
bwctl: 54 seconds until test results available

RECEIVER START
bwctl: exec_line: iperf -B 128.135.158.227 -s -f b -m -p 5001 -t 10
bwctl: start_tool: 3519488679.844807
------------------------------------------------------------
Server listening on TCP port 5001
Binding to local address 128.135.158.227
TCP window size: 87380 Byte (default)
------------------------------------------------------------
[ 12] local 128.135.158.227 port 5001 connected with 128.135.158.219 port 5001
[ ID] Interval       Transfer     Bandwidth
[ 12]  0.0-10.0 sec  1181483008 Bytes  941311591 bits/sec
[ 12] MSS size 1448 bytes (MTU 1500 bytes, ethernet)
bwctl: stop_exec: 3519488702.089699

RECEIVER END
&lt;/pre&gt;
%ENDTWISTY%

Third party tests, between 2 remote BWCTL servers, will let you measure various sections of the end-2-end path, running 

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% bwctl –c %GREEN%&amp;lt;1st Server for Measurement&amp;gt;%ENDCOLOR% –s %GREEN%&amp;lt;2nd Server for Measurement&amp;gt;%ENDCOLOR%
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% bwctl -a 4 -s uct2-net2.uchicago.edu -c iut2-net2.iu.edu
bwctl: NTP: Status UNSYNC (clock offset problems likely)
bwctl: Using tool: iperf
bwctl: 16 seconds until test results available

RECEIVER START
bwctl: exec_line: iperf -B 149.165.225.224 -s -f b -m -p 5008 -t 10
bwctl: start_tool: 3519488749.147866
------------------------------------------------------------
Server listening on TCP port 5008
Binding to local address 149.165.225.224
TCP window size: 87380 Byte (default)
------------------------------------------------------------
[ 14] local 149.165.225.224 port 5008 connected with 128.135.158.219 port 5008
[ ID] Interval       Transfer     Bandwidth
[ 14]  0.0-10.2 sec  1199046656 Bytes  936780541 bits/sec
[ 14] MSS size 1448 bytes (MTU 1500 bytes, ethernet)
bwctl: stop_exec: 3519488763.656271

RECEIVER END
&lt;/pre&gt;
%ENDTWISTY%

Other useful options are =-f=, format, =-t=, length of test, and =-i=, test interval.

---++ %NPAD%

*NOTE: %NPAD% is deprecated and won&#39;t be in future versions of the OSG distribution*
      
The %NPAD% tool examines a host and its local network infrastructure to determine what problems, if any, would hinder wide area performance. Issues such as small TCP buffers in switches and routers are detected as well as common host configuration errors. To determine if the CE/SE will achieve maximum performance over a WAN path run the command =diag-client=:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% diag-client %GREEN%&amp;lt;Target Server for Measurement&amp;gt;%ENDCOLOR% 8001 10 50
&lt;/pre&gt;

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT% diag-client iut2-net2.iu.edu 8001 10 50
Using: rtt 10 ms and rate 50
Connected.
Control connection established.
Waiting for test to start.  Currently there are 1 tests ahead of yours.
port = 8003
Starting test.
Parameters based on 5 ms initial RTT
peakwin=64672 minpackets=3 maxpackets=1283 stepsize=128
Target run length is 3802 packets (or a loss rate of 0.02630195%)
Test 1a (11 seconds): Coarse Scan
Test 1b (11 seconds): ...
Test 1c (11 seconds): ...
Test 1d (11 seconds): ...
Test 1e (11 seconds): ...
Test 1f (11 seconds): ...
Test 1g (11 seconds): ...
Test 1h (11 seconds): ...
Test 1i (11 seconds): ...
Test 1j (11 seconds): ...
Test 1k (11 seconds): ...
Test 1l (11 seconds): ...
Test 1m (11 seconds): ...
Test 1n (11 seconds): ...
Test 1o (11 seconds): ...
Test 2a (9 seconds): Search for the knee
Test 2b (9 seconds): ...
Test 2c (17 seconds): ...
Test 3a (9 seconds): Measure static queue space
Test 3b (9 seconds): ...
Test 3c (17 seconds): ...
Accumulate loss statistics, no more than 20 seconds:
Test 4a (10 seconds): Accumulate loss statistics
Test 4b (10 seconds): ...
report url ServerData/Reports-2011-07/vtbv-ce.uchicago.edu:2011-07-12-18:50:07.html
&lt;/pre&gt;
%ENDTWISTY%

%NOTE% The last 2 numeric parameters, after host and port, are the rtt time (in ms) and speed/rate values (in Mbps) you need to achieve. &lt;br&gt; The reason it works this way is that its meant to &#39;test&#39; local infrastructure.  The idea is that if you were testing to an NPAD server that was 5ms away on a 1G network, you would get close to that speed even with network flaws.  &lt;br&gt; If you were to supply 80ms and 1G to the server and there truly was a flaw, the NPAD test would tell you it wasn&#39;t possible, thus enabling you to fix the problem
%NOTE% The =diag-client= commands return a partial URL, enabling easy sharing of results between users and site administrators. To view the results, prepend the Toolkit servers name/port to the returned string.  The example above would result in this URL: =http://server.this.osg.domain:8002/ServerData/Reports-2011-07/vtbv-ce.uchicago.edu:2011-07-12-18:50:07.html=.

---+ [[http://docs.perfsonar.net/manage_regular_tests.html][Advanced Topic: Scheduled Monitoring]]

(See [[http://docs.perfsonar.net/install_quick_start.html][http://docs.perfsonar.net/install_quick_start.html]] for more details.)

In addition to the above on-demand tests, the Performance Toolkit server can be configured to continuously monitor the throughput or delay between your site and peer sites of interest.  To begin this monitoring, enter the GUI and ensure that your server is a member of the community or communities of interest.  Once that is complete, continue on by selecting either the *perfSONAR-BUOY* throughput or delay configuration menu item.  

pSB-throughput:  This utility will run regularly scheduled BWCTL tests between your Toolkit server and the selected peer servers.  Results are stored in a database and displayed on the server&#39;s web page.  You may also use standard web-service calls to retrieve this data for display on remote web servers.  This would allow monitoring of a common core infrastructure at a central site, while each site could keep local/customized views. 
  
pSB-delay: This utility will run regularly scheduled OWAMP tests between your Toolkit server and the selected peers.  Results are stored in a database and displayed on the server’s web page.  You may also use standard web-service calls to retrieve this data for display on remote web servers.  This would allow monitoring of a common core infrastructure at a central site, while each site could keep local/customized views as required.

---+ Known Issues

Currently none.


---+ References

   1 [[http://docs.perfsonar.net/using_ndt.html][%NDT%]]
   1 [[http://docs.perfsonar.net/config_owamp.html][%OWAMP%]]
   1 [[http://docs.perfsonar.net/config_bwctl.html][%BWCTL%]]
   1 [[http://docs.perfsonar.net/using_npad.html][%NPAD%]]

See also the OSG/WLCG pages on perfSONAR at https://twiki.opensciencegrid.org/bin/view/Documentation/DeployperfSONAR 
---+ *Comments*
%COMMENT{type=&quot;tableappend&quot;}%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = MarcoMambelli

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = ComputeElement

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       =  HorstSeverini
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         =  MarcoMambelli
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
--&gt;
