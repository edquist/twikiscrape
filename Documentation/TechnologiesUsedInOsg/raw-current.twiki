%LINKCSS%



---+!! %SPACEOUT{ &quot;%TOPIC%&quot; }%
%TOC%

%STARTINCLUDE%
%EDITTHIS%

---++ Current or upcoming technology highlights
---+++ glideinWMS
Contributed by Igor Sfiligoi 1/10/08; posted to home page 1/11/08

glideinWMS is a Grid Workload Management System based on the pilot concept. In this mode, users never submit the jobs directly to the grid; pilot jobs are sent instead, asynchronously. Once a pilot job starts on a worker node, it validates it, and finally fetches a user job.

There are multiple advantages of using a pilot jobs:
   1 . Late binding: Pilots are sent to all suitable grid sites. Only once pilots start are real jobs selected for the selected resource. No forecasting is needed.
   1.  Reliability: A broken grid site will either kill pilot jobs or pilots will detect the problem at startup. Real jobs only start on well-behaved resources.
   1.  Grid-wide fair share: The relative priorities between jobs of the same VO are set inside the workload management system. Grid sites only manage priorities between different VOs.

glideinWMS is implemented on top of the Condor workload management system (WMS). glideinWMS is responsible for launching the [[http://www.uscms.org/SoftwareComputing/Grid/WMS/glideinWMS/][Condor glideins]], while the Condor daemons handle the user jobs themselves.

For more information about pilot jobs, see the newsletter article [[http://www.opensciencegrid.org/osgnews/2006/november/][Solving Pilot Job Security Holes Using gLExec]]. Also see the [[http://www.uscms.org/SoftwareComputing/Grid/WMS/glideinWMS/][glideinWMS documentation]].

---+++ Condor scalability work
Contributed by Igor Sfiligoi 1/10/08

When we started a year ago, a single Condor scheduling node was hardly able to manage 3000 jobs at the same time.
Using resources over the WAN was even worse, with 500 concurrent jobs being the practical limit.
By working closely with the Condor team, we managed to improve this limits quite a bit, with the latest tests showing 10000 running jobs using a single scheduling node, and no additional limits being hit by using resources over the WAN.

---++ Past technology highlights
---+++ VDT
Contrib by AH and AR, ran Dec 07-Jan-08 (initial one)

*The Virtual Data Toolkit* %BR%
The Virtual Data Toolkit (VDT) provides the middleware upon which the OSG software stack is based. OSG 0.8 is based on VDT 1.8.1. The goal of the VDT is to make it as easy as possible for users to deploy, maintain and use grid middleware.

The VDT contains basic grid services (including Condor-G and Globus) and a wide range of utilities.

[[https://twiki.grid.iu.edu/twiki/bin/view/Trash/ReleaseDocumentationVdtRelease][Learn more ...]]


%STOPINCLUDE%


-- Main.AnneHeavey - 11 Jan 2008

