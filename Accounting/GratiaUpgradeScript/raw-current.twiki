---+!! &lt;nop&gt;Gratia Upgrade Script

&lt;!--
   * Set VIEWTHISTOPIC = &lt;div class=&quot;twikiSmall&quot;&gt;&lt;a href=&quot;%TOPIC%&quot;&gt;View this section&lt;/a&gt;&lt;/div&gt;
--&gt; 
%TOC% 
%STARTINCLUDE%

---++ Gratia Upgrade Script

%VIEWTHISTOPIC%

A script ( __gratia-upgrade.sh__) is available to facillitate the upgrading and installation of production, test and development gratia instances.

In the cvs repostitory, the script resides in __./gratia/build-scripts/gratia-upgrade.sh__.

If you wish to upgrade from the latest daily build (see [[GratiaDailyBuilds][Gratia Daily Builds section]] for more details), then you can use the script in _/home/gratia/gratia-builds/gratia-latest/build-scripts/gratia-upgrade.sh_.

If you are installing a named release, you should use the script relevant to that version: _~gratia/gratia-releases/&amp;lt;release-dir&amp;gt;/build-scripts/gratia-upgrade.sh_. Note that if you need to specify a particular =.dat= file from which to obtain the instance configuration, you are restricted to run modes 2 and 3 below.

*Usage: gratia-upgrade.sh --help* 
&lt;verbatim&gt;
Usage: gratia-upgrade.sh --help
This script is intended to simplify the upgrading of a gratia instance
in development, integration and production.

Modes for running the script:
1. Question and answer mode (usually no command line arguments)
     gratia-upgrade.sh
   This is the recommended mode for performing upgrades.

2. Expert user mode.
     gratia-upgrade.sh --instance TOMCAT_INSTANCE
          --source SOURCE_DIR
          --pswd ROOT_PSWD | --mysql MYSQL_FILE
          [--config DAT_FILE ]
          [--force-log4j]
   For those that disdain questions and answers. This mode eliminates some
   questions.  There will be prompts for starting the service and a few
   tests.  Available, but not a recommended mode of upgrading.

3. Cron mode.  Used for daily upgrades of the test environment.
   There are no prompts (all arguments are required).
   Refer to the paragraph below as to the prompts for the value of the
   individual arguments.
     gratia-upgrade.sh --instance TOMCAT_INSTANCE
          --source SOURCE_DIR
          --daily EMAIL_ADDRESS(ES)
          --mysql MYSQL_FILE
          [--config DAT_FILE ]
          [--force-log4j]

Although it does not really do much more than is already available to do, its
intent is to take some of the guesswork (memory-like) out of the upgrade
process and it does some validation.

A major assumption it makes is that all tomcat collectors are in /data.
If this is not true, you may use the command-line option &quot;--tomcat-dir &lt;dir&gt;&quot;.

 No prompt mode   Prompt mode questions
 --------------   ---------------------

 --config         N/A. Used in only expert or cron modes to specify a
                  different .dat file from which to obtain the instance
                  configuration.
 --instance       tomcat instance (e.g, tomcat-itb_gratia_itb).
 --source         source directory
                    - daily builds..... /home/gratia/gratia-builds
                    - release builds... /home/gratia/gratia-releases
                    - other............ specified by you
 --pswd           mysql root password.
 --daily          Do you want to start the tomcat/collector service?
 --mysql          DB MySql file containing the password for upgrades
                  (required when running from cron and when used the
                  --pswd argument is ignored)
 --force-log4j    Force overwrite of log4j config file.

If &#39;--daily&#39; is used, then all arguments are required and use of this argument
will automatically start the tomcat/collector and requires specifying the
email address(es).  It is intended for use ONLY when running from cron for
the purpose of daily test installations.

If &#39;--daily&#39; is not used and recipients are not specified explicitly
with &quot;--mail &lt;recipients&gt;&quot;, the script will attempt to guess a
suitable email address to which to send the upgrade status email from
the configured user in the tomcat instance&#39;s configuration .dat file. If
the configured user is not specified then mail is sent to
grid-accounting@fnal.gov; if the configured user is root or daemon the
default email destination is not altered.

The &#39;--force-log4j&#39; argument is used to force the over-writing of the
log4j.properties file used for logging.  If these properties have been
modified locally and you desire to preserve these changes, then this option
should not be used and any changes will have to be performed manually.

The script performs the following:
 1. shutdown your tomcat instance/collector
 2. run update-gratia-local with the appropriate arguments
 3. clean your log directory saving the old logs in
      /data/gratia_tomcat_logs_backups
 4. optionally, allow you to start your collector
    (when the --daily argument is specified, it will start the collector)
 5. optionally, overwrite your log4j.properties file

Log files are maintained for every execution of this script in this directory:
  /data/TOMCAT_INSTANCE-upgrades.log
as YYYY-MM-DD.log.  These files are appended to and this script perform a
housekeeping retaining only the last 10 log files.

The latest release data will be shown in:
  /data/TOMCAT_INSTANCE.gratia-release

You must be root user to execute this script.
&lt;/verbatim&gt;


A sample of the question and answers mode execution of this script is shown below.  It was run on gratia02.fnal.gov where the test ITB instances of Gratia reside:
   1 The script is designed to allow you to perform multiple upgrades for instance on the same node as when performing a release upgrade. If you are performing this type of upgrade, the answers to the questions will become the defaults for the next iteration/upgrade you are performing.
   1 If you elect to start the collector after the upgrade is performed, a series of tests/verifications will be performed:
      * it will verify the tomcat instance/collector started
      * it will verify that the collector is listening on the main url port
      * it will verify that the tomcat process is listening on all 6 ports used by the Gratia collector. 
   1 You also be prompted to run the static reports (these are daily cron jobs) to verify that they will be successful.  This may take a little bit of time to complete.  The script will verify that they have been generated.  It cannot verify the content, however.  That will have to be performed manually using the Gratia reporting UI,

Sample output:
&lt;verbatim&gt;
[root@gratia02 build-scripts]# ./gratia-upgrade.sh 

You can terminate this script at any time using &lt;CNTL-C&gt; EXCEPT after
you give the FINAL approval to perform the update.

This script will allow you to upgrade one of these Gratia collectors in 
the /data directory on gratia02:
drwxr-xr-x  13 root root 4096 Jul 11 09:17 /data/tomcat-gratia_purge_pcanal
drwxr-sr-x  14 daemon daemon 4096 Aug 12 12:48 /data/tomcat-itb_gratia_itb
drwxr-sr-x  13 daemon daemon 4096 Jul 14 00:42 /data/tomcat-itb_gratia_osg_daily
drwxr-sr-x  13 daemon daemon 4096 Aug 12 08:12 /data/tomcat-itb_gratia_psacct

Do you want to proceed? (y/n): y
----- choose_collector ------

These are the collectors on this node (gratia02) you are permitted to upgrade:
   tomcat-gratia_purge_pcanal
   tomcat-itb_gratia_itb
   tomcat-itb_gratia_osg_daily
   tomcat-itb_gratia_psacct

Choose a collector (none to exit): tomcat-itb_gratia_itb
----- choose_source_directory ------
Official releases or nightly builds (releases/builds/other)? [default - ]: builds
----- find_build_source ------
Which date?
/home/gratia/gratia-builds/gratia-2008-08-08
/home/gratia/gratia-builds/gratia-2008-08-09
/home/gratia/gratia-builds/gratia-2008-08-10
/home/gratia/gratia-builds/gratia-2008-08-11
/home/gratia/gratia-builds/gratia-2008-08-12
/home/gratia/gratia-builds/gratia-2008-08-13
/home/gratia/gratia-builds/gratia-2008-08-14
/home/gratia/gratia-builds/gratia-latest
... choose the date (eg, 2008-07-14) or &#39;latest&#39; [default - NONE]: latest
----- choose_db_root_password ------
Enter the root MySql password [default - NONE]: 
----- choose_force_mode -----
Do you wish to force update of some config files (eg log4j)?: (y/n): y
----- final_verification ------

We are ready to upgrade with the following information provided:
  host...................... gratia02.fnal.gov
  tomcat instance........... tomcat-itb_gratia_itb
  source location........... /home/gratia/gratia-builds/gratia-latest
  password.................. xxxx
  log4j config overwrite.... yes

Do you want to proceed? (y/n): y
   :
   :
(output from the upgrade will scroll by)
   :
   :
----- ask_to_start_collector -----
Do you want to start the collector: (y/n): y
   :
(if you answer &#39;y&#39;, a set of verification/validations are performed as described previously)
   :
... sleeping 20 seconds to allow tomcat to deploy war files

#-------------------------------
# verify_instance_is_running
#-------------------------------
Verifying that the tomcat instance is running using
  ps -ef |grep file=/data/tomcat-itb_gratia_itb |egrep -v grep
   :

PASSED: tomcat instance (tomcat-itb_gratia_itb) is running

#-------------------------------
# verify_tomcat_connection
#-------------------------------
Verifying that tomcat is listening for the following connection
by doing a wget on the gratia-release file:
    tomcat service: http://gratia02.fnal.gov:8880
   :
PASSED: Tomcat connection (http://gratia02.fnal.gov:8880) is good

#-------------------------------
# verify_port_availability
#-------------------------------

Verifying that the tomcat process has 6 ports it
is listening on for this tomcat instance and all are by the same process.
Disclaimer: This is the closest one can do for this type validation.

...using port 17000 as the basis for the netstat command:
   :
PASSED: number of connections look good
-----  ask_to_run_static_reports -----
Do you want to run the static reports: (y/n): y

#-------------------------------
# verify_static_reports
#-------------------------------
... running static reports.
...RUNNING: /data/tomcat-itb_gratia_itb/gratia/staticReports.py /data/tomcat-itb_gratia_itb http://gratia02.fnal.gov:8880/gratia-reporting/
     :
PASSED: static reports processed

(the script will then loop back to the top and ask for a new collector)


&lt;/verbatim&gt;

%STOPINCLUDE%

-- Main.JohnWeigand - 18 Jul 2008
