&lt;verbatim&gt;

# All subclusters are listed in their own separate section; the section name is arbitrary as long as it starts with the string &quot;subcluster&quot;.  Section names *must not* be repeated
[subcluster 1]
# Required attributes
name = UNKNOWN 
cores_per_node = 4
node_count = 0
cpus_per_node = 2
cpu_speed_mhz = 1000 # In MHZ
ram_mb = 4000 # RAM per *node*, in MB
cpu_vendor = Intel # Valid options: AMD or Intel
cpu_model = Intel(R) Xeon(R) CPU           E5345  @ 2.33GHz # Output directly from &quot;model name&quot; from /proc/cpuinfo on this node
inbound_network = False # True or False; set to True if the node can be contacted directly from the outside network
outbound_network = True # True or False; set to True if the node can contact the outside network

# Optional attributes
swap_mb = 4000 # Swap per *node*, in MB
SI00 = 2000 # SI00 

Similarly, one section per SE must be filled in; each SE is in its own separate section starting with the text &quot;se&quot;.  Section names *must not* be repeated.
[se 1]
# Required attributes
name = (SE Name) # Human readable name of SE
srm_endpoint = httpg://srm.example.com:8443/srm/v2/server # URL to the SRM endpoint; must have the FQDN, the port, and the service endpoint
# Valid examples:
# srm://srm.example.com:8443/srm/managerv2
# httpg://srm.example.com:8446/srm/v2/server
# Invalid examples:
# srm.example.com (not a full endpoint)
# srm://srm.example.com/srm/v2 (no port number)
# srm://srm.example.com:8443/ (No service endpoint)
provider_implementation = static # The implementation which generates information for the SE.  Possible options are &quot;static&quot; (works with any SE), &quot;dcache&quot;, and &quot;bestman&quot;.
# Bestman and dCache providers require additional information in order to function.  Links are:
# dCache: (TODO: insert link)
# BestMan: (TODO: insert link)
implementation = bestman # The implementation name; must be lower-case.  Common options are &quot;bestman&quot; and &quot;dcache&quot;.  We prefer the name of the SRM implementation (e.g., bestman) instead of the underlying file system implementation (e.g, Lustre)
version = 2.2.1.1-e1 # The implementation version.  We prefer the version of the SRM implementation

# The next three options determine the VOs which can access the SE and the paths those VOs should use.  There are three possible ways to configure:
# 1) VOs all write and read from default_path
# 2) VOs have a common prefix; the GIP takes the default_path and replaces the value of VONAME with the VO&#39;s actual name
# 3) A VO has a specific path.
# (1 or 2) and (3) can be combined; if a VO does not have a specific path, then the default path as determined by (1) or (2) is used.  
# This allows for a distinct path for each VO (setting default_path=/pnfs/example.com/osg/VONAME) *and* VO-specific overrides (such as mapping CMS to /pnfs/example.com/cms).

default_path = (path) # The top-level path; this is the default for each VO; if &quot;VONAME&quot; is found in this string, it will be substituted with the VO&#39;s name.  So, a path of /pnfs/example.com/VONAME will map to /pnfs/example.com/cms for the VO cms.
vo_paths = vo1:/path/for/vo1, vo2:/path/for/vo2 # The VO-specific path; comma or space delimited list of vo:path combinations.  Overrides the value set in default_path
# allowed_vos = vo1, vo2, vo3 # If this option is specified, only VOs in this list will be advertised as allowed to write into this SE.

# Optional attributes
# The unique name below affects the name in FTS; WLCG-interoperable sites will be concerned about this value
unique_name = (SE name) # Machine-readable name; no spaces or special characters; usually the host name of the headnode or SRM node
srm_version = 2 # Currently, the only supported version is 2.
transfer_endpoint = gsiftp://ftp.example.com:2811 # Comma or space-delimited list of transfer endpoints.  Detected automatically for BestMan and dCache.  Needs the protocol, host, and port (port *not* optional)

&lt;/verbatim&gt;


-- Main.BrianBockelman - 10 Nov 2008
