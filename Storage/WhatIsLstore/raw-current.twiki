---+ What Is L-Store?

Leadership in applying computing to science will necessarily require both world-class computing and world-class data management. An important gap in current approaches to managing the high volumes of data involved in ultrascale science stems from a lack of suitable infrastructure to work with data &amp;#8220;in transit.&amp;#8221; In this context, data is said to be &amp;#8220;in transit&amp;#8221; between the time at which it is generated at a source (e.g. a supercomputer simulation, an instrument or detector, an aggregated set of repositories) and the time it is either archived or thrown away, and during which it needs to be easily available to a (potentially large and distributed) research group for analysis, visualization, or some other form of processing. To meet the diverse and changing set of application needs that different research communities have, large amounts of non-archival storage are required for transitory buffering, and it needs to be widely dispersed, easily available, seamlessly integrated with archival resources, and configured to maximize flexibility of use. 

Current approaches to this problem tend to be adaptations of solutions developed in an era when massive storage was mostly concentrated in data centers. Storage is allocated as if its usage were non-transitory and would, therefore, tend to make availability scarce. Consequently, under these traditional approaches, storage is available only to those with user accounts and membership in the appropriate virtual organizations, and it is encapsulated behind legacy interfaces that inhibit the flexibility of use and scheduling. This situation severely restricts the ability of application communities to access and schedule usable storage where and when they need to in order to make their workflow more productive. Investigating new strategies in this area would clearly be worthwhile.

The approach to this problem that we plan to explore is based on a new type of Open Science Grid (OSG) storage element, the logistical storage element (L-Store). The architecture of the L-Store integrates a familiar data management interface &amp;mdash; the _Storage Resource Manager (SRM)_ &amp;mdash; with a new technology for wide area data management: _Logistical Networking (LN)_, which is now being used by several important OSG application communities, including Fusion Energy and Astrophysics. 

Logistical Networking technology builds on a highly generic storage service that uses the Internet Backplane Protocol (IBP), which it deploys on storage servers called &amp;#8220;depots.&amp;#8221; The strategy of combining SRM with IBP-based depots is designed to provide an interoperable foundation for wide area storage infrastructure that can address the problems of in-transit data management through a familiar interface, but with maximum flexibility and performance. 


---++ What Adding L-Store Will Achieve
We believe that adding L-Store storage elements to the OSG will achieve the following objectives: 
   * _Enable OSG sites to provision with working storage as cost effectively as possible_: SPDs can use low cost commodity hardware, require low front-end investment, and involve minimal installation and management costs. This helps to maximize the opportunity of all OSG sites to provision with working storage to address chronic problems of data logistics. 
   * _Provide a seamless interface between archival storage and wide area working storage_: By combining SRM and IBP as a front end for tape-based archival resources, L-Store will allow researchers to experiment with a wide range of caching, buffering, and prefetching strategies to optimize performance and reliability between long term and working storage.
   * _Facilitate widespread use of high performance data movement among all well connected OSG sites_: Available LN tools make high-performance data transfers a seamless part of the working environment. Spreading L-Store across OSG sites will accelerate the use of this capability dramatically.
   * _Open a smooth path for incorporating future innovation in storage technologies_: The generic IBP storage service used by SPDs is designed to be easy to implement on virtually any type of storage resource. LStore? will use IBP with disk and tape resources, but it has also been implemented, for example, in RAM. Use of IBP guarantees that interoperability will be preserved as new innovation is incorporated.
   * _Expand the range of application communities using the OSG beyond its primary HEP community_: LN technology is already widely used in application communities important to the OSG, including Fusion, Astrophysics, Medical Imaging, and Environmental Modeling. LN&amp;#8217;s highly generic storage paradigm will allow OSG storage infrastructure to support all these communities equally well.
   * _Provide new opportunities for computational services for data in transit_: For the purposes of managing data in transit, the workflow could often be made much more efficient if the data, while it is being buffered in transit, could easily be searched, reduced, reformatted, error encoded, encrypted, compressed, and so on. Prototype software already available will enable researchers to experiment with these capabilities using the shared, lightweight processing power available on L-Store.

*SRM Parallel Depot Architecture:* %BR% &lt;img src=&quot;%ATTACHURLPATH%/SPDArchitecture.PNG&quot; alt=&quot;SPDArchitecture.PNG&quot; width=&#39;316&#39; height=&#39;251&#39; /&gt;


---++ See Also

   * [[http://mimir.accre.vanderbilt.edu/cgi-bin/public/DocDB/ListBy?topicid=8][L-Store documentation at ACCRE]]
   * [[http://www.lstore.org][L-Store wiki]]
   * [[http://osg-docdb.opensciencegrid.org/cgi-bin/DisplayMeeting?conferenceid=17][L-Store Workshop (April 7, 2005)]]
   * [[%PUBURL%/%WEB%/WebHome/SPDInitialDesignDoc.doc][An SRM Parallel Depot Storage Element For the Open Science Grid]] (DOC) 


&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TedHesselroth

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %NO%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = FirstName
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = FirstLast
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %NO%
############################################################################################################
--&gt;

