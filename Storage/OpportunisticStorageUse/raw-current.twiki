---+!! *&lt;nop&gt;%SPACEOUT{ &quot;%TOPIC%&quot; }%*
%DOC_STATUS_TABLE%
%TOC{depth=&quot;2&quot;}%

---++About This Document
This document is intended for Storage Element administrators who want to configure their SE for opportunistic use using tagged directories

---++Requirements
The general requirements for a storage element supporting opportunistic use are

   * There is a capability of specifying a portion of the total storage for opportunistic use.
   * It is possible to allow particular VOs and Roles a privilege to use space other than that included in opportunistic storage.
   * Files created through opportunistic use will not be permanently available in the storage system.

---++Procedure 
Space reservation is a promise by the storage system to make certain amount of storage space of certain type available for usage for a specified period of time.

In case of successful reservation,a unique name,called space token is assigned to the reservation. Space token can be used during the transfer operations to tell the system to put the files being manipulated or transferred into an associated space reservation . A storage system ensures that the reserved amount of the disk space is indeed available, thus providing a guarantee that a client does not run out of space until all space promised by the reservation has been used. When files are deleted, the space is returned to the space reservation. 

A storage site administrator may configure the site for opportunistic use through space reservation. In SRM-dCache 1.9 the creation of space reservations is controlled by use of link groups. The site administrator may assign storage pools to link groups. This shall be the basis of dividing the storage; certain pools are designated for opportunistic use.

Here are the operations that are performed to enable opportunistic use of storage. Note that explicit authorization of privileged VOs is also necessary in order to prohibit opportunistic access.

The /opt/d-cache/config/PoolManager.conf file needs to be modified in order to enable opportunistic storage.

&lt;br&gt;&lt;/br&gt;
  1. Add following lines to create a new unit
&lt;pre class=&quot;screen&quot;&gt;
psu create unit -store  public:osg@osm
&lt;/pre&gt;

  2. Add following lines to create a unit group and add the new unit to it
&lt;pre class=&quot;screen&quot;&gt;
psu create ugroup opportunistic-store
psu addto ugroup opportunistic-store public:osg@osm
&lt;/pre&gt;

  3. Determine which pools shall be designated for opportunistic use.  Add a line for each of these pools. The names to use are the ones used internally by dCache. 
&lt;pre class=&quot;screen&quot;&gt;
psu create pool poolnode1_1
psu create pool poolnode1_2
psu create pool poolnode2_1
psu create pool poolnode2_2
psu create pool poolnode3_2
psu create pool poolnode3_2
&lt;/pre&gt;

  4. Create a pool group for opportunistic use and add the pools to it.
&lt;pre class=&quot;screen&quot;&gt;
psu create pgroup public
psu addto pgroup public poolnode1_1
psu addto pgroup public poolnode1_2
psu addto pgroup public poolnode2_1
psu addto pgroup public poolnode2_2
psu addto pgroup public poolnode3_1
psu addto pgroup public poolnode3_2
&lt;/pre&gt;

  5. Verify that there is a link that includes this pool group.
&lt;pre class=&quot;screen&quot;&gt;
# public - will be linkGrouped as opportunistic storage area
psu create link public-link any-store world-net any-protocol
psu set link public-link -readpref=10 -writepref=10 -cachepref=10 -p2ppref=-1
psu add link public-link public
&lt;/pre&gt;

  6. Verify that there is a link group that includes the above link.
&lt;pre class=&quot;screen&quot;&gt;
psu create linkGroup public-link-group
psu addto linkGroup public-link-group public-link
psu set linkGroup custodialAllowed public-link-group true
psu set linkGroup onlineAllowed public-link-group true
psu set linkGroup nearlineAllowed public-link-group true
psu set linkGroup replicaAllowed public-link-group true
psu set linkGroup outputAllowed public-link-group false
psu set linkGroup attribute public-link-group HSM=None
&lt;/pre&gt;

Save the changes made to this file.

  7. Load the new rules into the !Trash.StoragePoolManager.
&lt;pre class=&quot;screen&quot;&gt;
$ ssh -l admin -c blowfish -p 22223 localhost
admin@localhost&#39;s password: 
    dCache Admin (VII) (user=admin)
(local) admin &gt; cd Trash.StoragePoolManager
(Trash.StoragePoolManager) admin &gt; reload -yes
&lt;/pre&gt;
  
  8. Check that the rules were loaded into the !Trash.StoragePoolManager.
&lt;pre class=&quot;screen&quot;&gt;
(Trash.StoragePoolManager) admin &gt; psu dump setup 
# Printed by diskCacheV111.poolManager.PoolSelectionUnitV2 at Wed Nov 14 09:56:54 CST 2007
# The units ...
#
psu create unit -net    0.0.0.0/255.255.255.255
psu create unit -net    0.0.0.0/0.0.0.0
psu create unit -store  *@*
psu create unit -protocol */*
psu create unit -store  public:osg@osm
#
&lt;/pre&gt;

If you don&#39;t see the new store unit, load the new rules by restarting the dCache domain.

 9. Verify in /opt/d-cache/config/srmSetup that the space manager is enabled and implicit space reservation is turned off
&lt;pre class=&quot;screen&quot;&gt;
srmSpaceManagerEnabled=yes
srmImplicitSpaceManagerEnabled=no
&lt;/pre&gt;

Having the option on would allow users to write to the storage element without space tokens. In that case, a space reservation would be made for them for the duration of the transfer. This would complicate the freeing of space from expired reservations, since the file would immediately be in an expired reservation. Therefore if a site intends to recycle space in the opportunistic storage area it is recommended that implicit space reservation be turned off. 


  10. Modify the &lt;nop&gt;LinkGroupAuthorization.conf file to add authorization for any authenticated user to make space reservations in the opportunistic storage area and restrict access to the other link groups. An example /opt/d-cache/etc/LinkGroupAuthorization.conf is
&lt;pre class=&quot;screen&quot;&gt; 
LinkGroup default-link-group
uscms/Role=*
usatlas/Role=*

LinkGroup volatile-link-group
*/Role=cmsuser

LinkGroup opportunistic-link-group
*/Role=*
&lt;/pre&gt;

If you would like a more restrictive policy, see step 15 below.

  11. If you changed /opt/d-cache/config/srmSetup in step 9, restart srm to pick up the changes. Otherwise, reload the link groups and link group authorizations in srmSpaceManger. 
&lt;pre class=&quot;screen&quot;&gt;
$ ssh -l admin -c blowfish -p 22223 localhost
admin@localhost&#39;s password: 
    dCache Admin (VII) (user=admin)
(local) admin &gt; cd SrmSpaceManager@srm-oursiteDomain
(SrmSpaceManager@srm-cd-oursiteDomain) admin &gt; update link groups
update started
(SrmSpaceManager@srm-oursiteDomain) admin &gt; 
&lt;/pre&gt;

  12. Create a directory for the rootpath of the opportunistic storage area.
&lt;pre class=&quot;screen&quot;&gt;
# cd /pnfs/oursite.edu/data
# mkdir public
# chmod 777 public
&lt;/pre&gt;

  13. Tag the directory as belonging to the opportunistic store unit defined above in Step 2 above
&lt;pre class=&quot;screen&quot;&gt;
# cd public
# cat &#39;.(tag)(OSMTemplate)&#39;
StoreName myStore
# echo &quot;StoreName public&quot; &gt; &quot;.(tag)(OSMTemplate)&quot;
# cat &#39;.(tag)(OSMTemplate)&#39;
StoreName public
# echo &quot;osg&quot; &gt; &quot;.(tag)(sGroup)&quot;
# grep &quot;&quot; $(cat &quot;.(tags)()&quot;)
.(tag)(OSMTemplate):StoreName public
.(tag)(sGroup):osg
&lt;/pre&gt;

  14. Tag the access latency of this rootpath as ONLINE and the retention policy as REPLICA.
&lt;pre class=&quot;screen&quot;&gt;
# echo  &quot;ONLINE&quot; &gt; &quot;.(tag)(AccessLatency)&quot;
# echo  &quot;REPLICA&quot; &gt; &quot;.(tag)(RetentionPolicy)&quot;
&lt;/pre&gt;

  15. Find out the user name to which opportunistic users will map to. Also you need to know their uid, gid, and pnfs path under which they are allowed to read write data.
 Then on node running the gPlazma domain (usually the admin node) create file /etc/grid-security/storage-authzdb which contains entries of form

authorize &lt;user-name&gt; read-write &lt;uid&gt; &lt;gid&gt; / &lt;pnfs-path&gt; /

An example is shown here-

&lt;pre class=&quot;screen&quot;&gt;
authorize cdf    read-write 9500 5000 / /pnfs/oursite.edu/data/public /
authorize dzero  read-write 9501 5001 / /pnfs/oursite.edu/data/public /
authorize gadu   read-write 9502 5002 / /pnfs/oursite.edu/data/public /
authorize sdss   read-write 9503 5003 / /pnfs/oursite.edu/data/public /
authorize ligo   read-write 9504 5004 / /pnfs/oursite.edu/data/public /
authorize star   read-write 9505 5005 / /pnfs/oursite.edu/data/public /
authorize ivdgl  read-write 9506 5006 / /pnfs/oursite.edu/data/public /
authorize gridex read-write 9507 5007 / /pnfs/oursite.edu/data/public /
authorize fmri   read-write 9508 5008 / /pnfs/oursite.edu/data/public /
authorize mis    read-write 9509 5009 / /pnfs/oursite.edu/data/public /
authorize grase  read-write 9510 5010 / /pnfs/oursite.edu/data/public /
authorize glow   read-write 9511 5011 / /pnfs/oursite.edu/data/public /
&lt;/pre&gt;

  16. (Optional) If you would like to restrict opportunistic use to particular VOs, modify the authorization for opportunistic link group in /opt/d-cache/etc/LinkGroupAuthorization.conf such as the following.
&lt;pre class=&quot;screen&quot;&gt; 
LinkGroup opportunistic-link-group
cdf/Role=*
dzero/Role=*
gadu/Role=*
sdss/Role=*
ligo/Role=*
star/Role=*
ivdgl/Role=*
gridex/Role=*
fmri/Role=*
mis/Role=*
grase/Role=*
glow/Role=*
&lt;/pre&gt;
   Repeat step 11 to cause the authorization file to be reloaded into srmSpaceManager. 

  17. Users can now make their own space reservations To make a space 
reservation for opportunistic use, one does so with srm-reserve-space command usage of which is mentioned [[https://twiki.grid.iu.edu/bin/view/Trash/ReleaseDocumentationFermiSrmClientCommands][here]]

If you would prefer that users access the opportunistic storage area through such a pre-created space token, 
rather than making their own, restrict the authorization for making tokens in step 16. Users will still be able to use a 
token created by the site administrator.

  18. Upgrade your ldap server to use glue schema 1.3 and publish your opportunistic storage area. See [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GipConfiguration][GIP Configuration.]]

Also, on your site&#39;s policy web page publish your policy on usage and deletions (see below), along with the needed srm endpoint and root path, 
and the site-created space token if you are using one. Direct users to [[https://twiki.grid.iu.edu/bin/view/Trash/ReleaseDocumentationFermiSrmClientCommands][here]]  for information on making and using space reservations.

---++ Maintenance of the Opportunistic Storage Area

To prevent the opportunistic storage area from filling up, files from expired space reservations should be deleted.
The SRM space reclaimer utility of the [[http://datagrid.ucsd.edu/toolkit/docs.html][OSG storage operations toolkit]] can be used to perform this cleanup. This toolkit is included in the [[http://vdt.cs.wisc.edu/software/dcache/server/][VDT-dCache package]] and if chosen, gets installed on admin node during dCache installation/upgrade process.

---++Problem Resolution And Help
---+++Support
If you have questions or need help configuring your Storage Element for Opportunistic use, please send email to osg-storage@opensciencegrid.org


%STOPINCLUDE%

---++ *Comments*
| I have updated this document and its ready for review | Main.NehaSharma | 13 Sept 2010 - 04:23|
%COMMENT{type=&quot;tableappend&quot;}%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = NehaSharma

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TedHesselroth
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         =  
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %NO%
############################################################################################################
--&gt;

-- Main.Neha Sharma - 09 Sept 2010
