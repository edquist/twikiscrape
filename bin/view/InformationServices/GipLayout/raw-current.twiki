
---+ GIP Directory Layout for OSG 1.0 and beyond

   * $VDT_LOCATION
      * $GIP_LOCATION=$VDT_LOCATION/gip.
         * var/ldif/ - output of the static LDIF.  This is overwritten only when =configure_gip= is run.
         * providers/ - Each file in this directory will be executed as a GIP provider.  The GIP provider outputs new LDIF entries; make sure the DN for the LDIF is unique, otherwise it will cause problems.
         * plugins/ - Each file in this directory will be executed as a GIP plugin.  The GIP plugin outputs LDIF which *alters* existing entries.  The DN of the plugin is matched against existing DNs; if a match is found, then the existing entry is updated with the information from the plugin.
         * lib/python/ - Python libraries which provide common GIP code.
         * libexec/ - Executable scripts which do the &quot;heavy lifting&quot; for the providers and plugins.  The providers and plugins are usually lightweight wrappers around some other entry in the libexec/ directory.  Our suggestion is to keep scripts distributed by the VDT in libexec/, and to place any site custom scripts in providers/ and plugins/.
         * etc/ - Configuration directory for the GIP.
         * templates/ - Templates for each of the GIP entries.  These templates are utilized by the GIP scripts.
      * $VDT_LOCATION/setup/configure_gip - Configuration script for the GIP; this is usually not run by hand, and instead executed by =configure-osg.py=.  This configuration script does a massive amount of work right now; it is slowly being broken down into smaller, more modular pieces.

   * The VDT will set the =$GIP_LOCATION= environment variable to point to the GIP&#39;s top-level directory.
   * The top-level GIP directory is =$VDT_LOCATION/gip= 
   * The LDIF will go in =$GIP_LOCATION/var/ldif=
   * Providers go to =$GIP_LOCATION/providers= and plugins in =$GIP_LOCATION/plugins=.


-- Main.BrianBockelman - 10 Mar 2008
