<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> TWikiPluginsDotPm &lt; TWiki &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/TWiki/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/TWiki/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/TWiki/TWikiPluginsDotPm?_T=16 Feb 2017" type="application/x-wiki" title="edit TWikiPluginsDotPm" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/TWiki/WebRss" />    
<base href="https://twiki.opensciencegrid.org/bin/view/TWiki/TWikiPluginsDotPm"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">


</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#FFD8AA ;
	}
	.patternBookView {
		border-color:#FFD8AA ;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">



</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>
<body class="patternViewPage patternPrintPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="patternTopic"> <h1><a name="Package_TWiki_Plugins"></a> Package <code>TWiki::Plugins</code> </h1>
<p />
This module defines the singleton object that handles Plugins
loading, initialization and execution.
<p />
This class uses Chain of Responsibility (GOF) pattern to dispatch
handler calls to registered plugins.
<p />
<p />
<div class="twikiToc"> <ul>
<li> <a href="?cover=print#Package_TWiki_Plugins"> Package TWiki::Plugins</a> <ul>
<li> <a href="?cover=print#PUBLIC_constant_VERSION"> PUBLIC constant $VERSION</a>
</li> <li> <a href="?cover=print#PUBLIC_SESSION"> PUBLIC $SESSION</a>
</li> <li> <a href="?cover=print#ClassMethod_new_session"> ClassMethod new <tt>($session)</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_load_allDisabled_lo"> ObjectMethod load <tt>($allDisabled) -&gt; $loginName</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_enable"> ObjectMethod enable <tt>()</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_get_PluginVersion_n"> ObjectMethod getPluginVersion <tt>() -&gt; $number</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_addListener_command"> ObjectMethod addListener <tt>($command,$handler)</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_have_HandlerFor_han"> ObjectMethod haveHandlerFor <tt>($handlerName) -&gt; $boolean</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_registrationHandler"> ObjectMethod registrationHandler <tt>()</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_before_CommonTagsHa"> ObjectMethod beforeCommonTagsHandler <tt>()</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_common_TagsHandler"> ObjectMethod commonTagsHandler <tt>()</tt></a>
</li> <li> <a href="?cover=print#ObjectMethod_after_CommonTagsHan"> ObjectMethod afterCommonTagsHandler <tt>()</tt></a>
</li> <li> <a href="?cover=print#ObjectMethd_pre_RenderingHandler"> ObjectMethd preRenderingHandler( $text, \%map )</a>
</li></ul> 
</li></ul> 
</div>
<p />
Note that as of version 1.026 of this module, TWiki internal
methods are <em>no longer available</em> to plugins. Any calls to
TWiki internal methods must be replaced by calls via the
$SESSION object in this package, or via the Func package.
For example, the call:
<p />
my $pref = TWiki::getPreferencesValue('URGH');
<p />
should be replaced with
<p />
my $pref = TWiki::Func::getPreferencesValue('URGH');
<p />
and the call
<p />
my $t = TWiki::writeWarning($message);
<p />
should be replaced with
<p />
my $pref = $TWiki::Plugins::SESSION-&gt;writeWarning($message);
<p />
Methods in other modules such as Store must be accessed through
the relevant TWiki sub-object, for example
<p />
TWiki::Store::saveTopic(...)
<p />
should be replaced with
<p />
$TWiki::Plugins::SESSION-&gt;{store}-&gt;saveTopic(...)
<p />
Note that calling TWiki internal methods is very very bad practice,
and should be avoided wherever practical.
<p />
The developers of TWiki reserve the right to change internal
methods without warning, unless those methods are clearly
marked as PUBLIC. PUBLIC methods are part of the core specification
of a module and can be trusted.
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="PUBLIC_constant_VERSION"></a> PUBLIC constant $VERSION </span></h2>
This is the version number of the plugins package. Use it for checking
if you have a recent enough version.
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="PUBLIC_SESSION"></a> PUBLIC $SESSION </span></h2>
This is a reference to the TWiki session object. It can be used in
plugins to get at the methods of the TWiki kernel.
<p />
You are <em>highly</em> recommended to only use the methods in the
<a href="/bin/view/TWiki/TWikiFuncDotPm" class="twikiLink">Func</a> interface, unless you have no other choice,
as kernel methods may change between TWiki releases.
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ClassMethod_new_session"></a> <a href="/bin/view/TWiki/ClassMethod" class="twikiLink">ClassMethod</a> <strong>new</strong> <tt>($session)</tt> </span></h2>
<p />
Construct new singleton plugins collection object. The object is a
container for a list of plugins and the handlers registered by the plugins.
The plugins and the handlers are carefully ordered.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_load_allDisabled_lo"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>load</strong> <tt>($allDisabled) -&gt; $loginName</tt> </span></h2>
<p />
Find all active plugins, and invoke the early initialisation.
Has to be done <em>after</em> prefs are read.
<p />
Returns the user returned by the last <code>initializeUserHandler</code> to be
called.
<p />
If allDisabled is set, no plugin handlers will be called.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_enable"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>enable</strong> <tt>()</tt> </span></h2>
<p />
Initialisation that is done after the user is known.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_get_PluginVersion_n"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>getPluginVersion</strong> <tt>() -&gt; $number</tt> </span></h2>
<p />
Returns the $TWiki::Plugins::VERSION number if no parameter is specified,
else returns the version number of a named Plugin. If the Plugin cannot
be found or is not active, 0 is returned.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_addListener_command"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>addListener</strong> <tt>($command,$handler)</tt> </span></h2> <ul>
<li> =$command* - name of the event
</li> <li> <code>$handler</code> - the handler object.
</li></ul> 
<p />
Add a listener to the end of the list of registered listeners for this event.
The listener must implement <code>invoke($command,...)</code>, which will be triggered
when the event is to be processed.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_have_HandlerFor_han"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>haveHandlerFor</strong> <tt>($handlerName) -&gt; $boolean</tt> </span></h2> <ul>
<li> <code>$handlerName</code> - name of the handler e.g. preRenderingHandler
</li></ul> 
Return: true if at least one plugin has registered a handler of
this type.
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_registrationHandler"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>registrationHandler</strong> <tt>()</tt> </span></h2>
<p />
Called by the register script
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_before_CommonTagsHa"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>beforeCommonTagsHandler</strong> <tt>()</tt> </span></h2>
<p />
Called at the beginning (for cache Plugins only)
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_common_TagsHandler"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>commonTagsHandler</strong> <tt>()</tt> </span></h2>
<p />
Called after %INCLUDE:"..."%
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethod_after_CommonTagsHan"></a> <a href="/bin/view/TWiki/ObjectMethod" class="twikiLink">ObjectMethod</a> <strong>afterCommonTagsHandler</strong> <tt>()</tt> </span></h2>
<p />
Called at the end (for cache Plugins only)
<p />
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="ObjectMethd_pre_RenderingHandler"></a> <span class="twikiNewLink">ObjectMethd<a href="/bin/edit/TWiki/ObjectMethd?topicparent=TWiki.TWikiPluginsDotPm" rel="nofollow" title="ObjectMethd (this topic does not yet exist; you can create it)">?</a></span> preRenderingHandler( $text, \%map ) </span></h2>
<p /> <ul>
<li> <code>$text</code> - the text, with the head, verbatim and pre blocks replaced with placeholders
</li> <li> <code>\%removed</code> - reference to a hash that maps the placeholders to the removed blocks.
</li></ul> 
<p />
Placeholders are text strings constructed using the tag name and a sequence number e.g. 'pre1', "verbatim6", "head1" etc. Placeholders are inserted into the text inside \1 characters so the text will contain \1_pre1\1 for placeholder pre1.
<p />
Each removed block is represented by the block text and the parameters passed to the tag (usually empty) e.g. for
<pre>
&#60;pre class&#61;&#39;slobadob&#39;&#62;
XYZ
&#60;/pre&#62;
the map will contain:
&#60;pre&#62;
$removed-&#62;{&#39;pre1&#39;}{text}:   XYZ
$removed-&#62;{&#39;pre1&#39;}{params}: class&#61;&#34;slobadob&#34;
&#60;/pre&#62;

Iterating over blocks for a single tag is easy. For example, to prepend a line number to every line of a pre block you might use this code:

foreach my $placeholder ( keys &#37;$map ) {
    if( $placeholder &#61;~ /^pre/i ) {
       my $n &#61; 1;
       $map-&#62;{$placeholder}{text} &#61;~ s/^/$n++/gem;
    }
}


---++ ObjectMethod &#42;postRenderingHandler&#42; &#60;tt&#62;(\$text)&#60;/tt&#62;

   &#42; &#61;\$text&#61; - a reference to the HTML, with the head, verbatim and pre blocks replaced with placeholders



---++ ObjectMethod &#42;startRenderingHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called just before the line loop

&#42;DEPRECATED&#42; Use preRenderingHandler instead. This handler correctly 
handles verbatim and other TWiki ML block types, and exposes them to 
the plugin.



---++ ObjectMethod &#42;outsidePREHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called in line loop outside of &#38;lt;PRE&#38;gt; tag

&#42;DEPRECATED&#42; Use preRenderingHandler instead. 
This handler correctly handles pre and other 
TWiki ML block types, and is called only once 
instead of line-by-line.



---++ ObjectMethod &#42;insidePREHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called in line loop inside of &#38;lt;PRE&#38;gt; tag

&#42;DEPRECATED&#42; Use preRenderingHandler instead. 
This handler correctly handles pre and other 
TWiki ML block types, and is called only once 
instead of line-by-line.



---++ ObjectMethod &#42;endRenderingHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called just after the line loop

&#42;DEPRECATED&#42; Use postRenderingHandler instead.



---++ ObjectMethod &#42;beforeEditHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called by edit



---++ ObjectMethod &#42;afterEditHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called by edit



---++ ObjectMethod &#42;beforeSaveHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called just before the save action



---++ ObjectMethod &#42;afterSaveHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called just after the save action



---++ ObjectMethod &#42;mergeHandler&#42; &#60;tt&#62;()&#60;/tt&#62;

Called to handle text merge.



---++ ObjectMethod &#42;beforeAttachmentSaveHandler&#42; &#60;tt&#62;($attrHashRef,$topic,$web)&#60;/tt&#62;

This code provides Plugins with the opportunity to alter an uploaded attachment between the upload and save-to-store processes. It is invoked as per other Plugins.
   &#42; &#61;$attrHashRef&#61; - Hash reference of attachment attributes (keys are indicated below)
   &#42; &#61;$topic&#61; -     &#124; Topic name
   &#42; &#61;$web&#61; -       &#124; Web name

Keys in $attrHashRef:
&#124; &#42;Key&#42;       &#124; &#42;Value&#42; &#124;
&#124; attachment  &#124; Name of the attachment &#124;
&#124; tmpFilename &#124; Name of the local file that stores the upload &#124;
&#124; comment     &#124; Comment to be associated with the upload &#124;
&#124; user        &#124; Login name of the person submitting the attachment, e.g. &#39;jsmith&#39; &#124;

Note: All keys should be used read-only, except for comment which can be modified.

Example usage:

&#60;pre&#62;
   my( $attrHashRef, $topic, $web ) &#61; &#64;&#95;;
   $$attrHashRef{&#39;comment&#39;} .&#61; &#34; (NOTE: Extracted from blah.tar.gz)&#34;;
&#60;/pre&#62;



---++ ObjectMethod &#42;afterAttachmentSaveHandler&#42; &#60;tt&#62;($attachmentAttrHash,$topic,$web,$error)&#60;/tt&#62;

deal with an uploaded attachment between the upload and save-to-store processes. It is invoked as per other plugins.

   &#42; &#61;$attrHashRef&#61; - Hash reference of attachment attributes (keys are indicated below)
   &#42; &#61;$topic&#61; -     &#124; Topic name
   &#42; &#61;$web&#61; -       &#124; Web name
   &#42; &#61;$error&#61; -     &#124; Error string of save action, empty if OK

Keys in $attrHashRef:
&#124; &#42;Key&#42;       &#124; &#42;Value&#42; &#124;
&#124; attachment  &#124; Name of the attachment &#124;
&#124; tmpFilename &#124; Name of the local file that stores the upload &#124;
&#124; comment     &#124; Comment to be associated with the upload &#124;
&#124; user        &#124; Login name of the person submitting the attachment, e.g. &#39;jsmith&#39; &#124;

Note: The hash is &#42;read-only&#42;



---++ ObjectMethod &#42;writeHeaderHandler&#42; &#60;tt&#62;() -&#62; $headers&#60;/tt&#62;

Called by TWiki::writePageHeader. &#42;DEPRECATED&#42; do not use!

&#42;DEPRECATED&#42; Use modifyHeaderHandler instead. it is a lot 
more flexible, and allows you to modify existing headers 
as well as add new ones. It also works correctly when 
multiple plugins want to modify headers.



---++ ObjectMethod &#42;modifyHeaderHandler&#42; &#60;tt&#62;(\&#64;headers,$query)&#60;/tt&#62;



---++ ObjectMethod &#42;redirectCgiQueryHandler&#42; &#60;tt&#62;() -&#62; $result&#60;/tt&#62;

Called by TWiki::redirect



---++ ObjectMethod &#42;renderFormFieldForEditHandler&#42; &#60;tt&#62;($name,$type,$size,$value,$attributes,$possibleValues) -&#62; $html&#60;/tt&#62;

This handler is called before built-in types are considered. It generates the HTML text rendering this form field, or false, if the rendering should be done by the built-in type handlers.
   &#42; &#61;$name&#61; - name of form field
   &#42; &#61;$type&#61; - type of form field
   &#42; &#61;$size&#61; - size of form field
   &#42; &#61;$value&#61; - value held in the form field
   &#42; &#61;$attributes&#61; - attributes of form field 
   &#42; &#61;$possibleValues&#61; - the values defined as options for form field, if any. May be a scalar (one legal value) or an array (several legal values)
Return HTML text that renders this field. If false, form rendering continues by considering the built-in types.

Note that a common application would be to generate formatting of the
field involving generation of javascript. Such usually also requires
the insertion of some common javascript into the page header. Unfortunately,
there is currently no mechanism to pass that script to where the header of
the page is visible. Consequentially, the common javascript may have to
be emitted as part of the field formatting and might be duplicated many
times throughout the page.



---++ ObjectMethod &#42;renderWikiWordHandler&#42; &#60;tt&#62;() -&#62; $result&#60;/tt&#62;

Change how a WikiWord is rendered

Originated from the TWiki:Plugins.SpacedWikiWordPlugin hack


</pre></div><!-- /patternTopic-->
<p />
<p />
</div><!-- /patternContent-->
<hr />
This topic: TWiki<span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span>TWikiPluginsDotPm</span> <br />    
Topic revision: r1 - 01 Feb 2006 - 12:01:25 - <a href="/bin/view/Main/TWikiContributor" class="twikiLink">TWikiContributor</a>
</div><!-- /patternMainContents-->
</div><!-- /patternMain-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>
<p />