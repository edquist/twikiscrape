&lt;!--
   * Set check =  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt; 
--&gt;
---+!! Gratia Access/Login Specification 

%TOC%

%STARTINCLUDE%
---+ Overview
This document is intended to serve as both a requirements and design specification for limiting access and visibility into the two web service user interfaces of Gratia: 
   * administration services
   * reporting services


---+ gratia-administration
The Gratia administration is accessible as http(s)://&amp;lt;node.domain&amp;gt;:&amp;lt;port&amp;gt;/gratia-administration.  It allows for viewing the status of the collector and for maintenance of several data tables.

---++ administration access requirements
The Gratia administration web user interface login will allow access to all update service menu options, otherwise only the read-only menu options will be available. 

%TABLE{ tableborder=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; headerbg=&quot;#99CCCC&quot; databg=&quot;#FFFFCC, #FFFFFF&quot;}%
%EDITTABLE{  header=&quot;|*Menu option*|*No login required*|*Login required*|&quot; format=&quot;| textarea, 5x30 | textarea, 5x50 | textarea, 5x50 |&quot;  changerows=&quot;on&quot; quietsave=&quot;on&quot; editbutton=&quot;Edit table&quot; }%
|*Menu option*|*No login required*|*Login required*|
| Maintenance&lt;br /&gt;   * Site Table&lt;br /&gt;   * VO Management&lt;br /&gt;   * VOName correction |  |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |
| Probes&lt;br /&gt;   * active, inactive or all&lt;br /&gt;   * CPU Info&lt;br /&gt;   * Roles |  |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |
| Authentication&lt;br /&gt;   * Certificates |  |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |
| Replication&lt;br /&gt;   * Job Usage Replication&lt;br /&gt;   * Metric Replicatino |  |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |
| System&lt;br /&gt;   * System status: normal or detailed |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |  |
| System&lt;br /&gt;   * Administration |  |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |
| Documentation&lt;br /&gt;   * Installation&lt;br /&gt;   * Security&lt;br /&gt;   * Replication&lt;br /&gt;   * Gratia Service Settings |  &lt;img src=&quot;/pub/TWiki/TWikiDocGraphics/choice-yes.gif&quot; alt=&quot;DONE&quot; title=&quot;DONE&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; /&gt;   |  |

&lt;p&gt;


 List of requirements.
   1 For an instance of a Gratia collector, at least one Gratia administrator must be defined.
   1 The Gratia administrators are identified and managed by the VO
   1 A user grid certificate will be used to identify the administrator

---++ administration access design
The identity of a Gratia administrator will be defined in the _TOMCAT_HOME/gratia/service-configuration.properties_ file.  
   * For Gratia instances servicing multiple VO&#39;s, multiple entries are allowed
   * The identity of the Gratia administrator(s) will be defined by specifying the FQAN (Fully Qualified Attribute Name) as defined by the VO.  Note that &quot;Capability=&quot; is normally a part of the FQAN, but this attribute has been deprecated and thus will not be used. The top level group in the FQAN or the FQAN is, by convention within OSG, defined as the VO name of the VOMS server.
   * In order to insure that the most current list of administrative identities is always used this file should be read each time the login service is invoked (explicitly or implicitly).  An alternative method of insuring currency is to read the timestamp on the file and read it only when it has changed.
&lt;pre&gt;
  service-configuration.properties file entries:
  service.admin.FQAN.0=/cms/uscms/Role=gratiaadmin
  service.admin.FQAN.1=/cms/uscms/gratiaadmin/Role=NULL
  service.admin.FQAN.atlas=/atlas/usatlas/Role=gratiaadmin
  service.admin.DN.john=/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491

  service.voms.connections=voms-servers

Note: the above entries show various examples of how the 
identity of the Gratia administrators can be defined within a VO:
    service.admin.FQAN.x = valid FQANs that give administrative access, 
                                       where x are unique numbers and/or letters

  service.voms.connections = file located in tomcat/gratia containing 
                                          the voms URL(s) for each VO specified

or simply using a DN:
  service.admin.DN.x = valid DNs that give administrative access, 
                                 where x are unique numbers and/or lettters
                                 the value &#39;ALLOW ALL&#39; will give access to all who have a valid certificate
&lt;/pre&gt;

The Gratia login process will need the identity of the OSG VO VOMS servers in order to authenticate the identity of the user.          
   1 This will be in the form of an OS file located at _TOMCAT_HOME/gratia/_ 
   1 File name is defined by the key _service.voms.connections=voms-servers_ in the _service-configuration.properties_ file
   1 File permissions of 644
   1 The file will contain 2 tokens with whitespace as the delimiter. Contiguous whitespace is treated as a single delimiter.  
      * The 1st token is the VO name which will be top level group of the FQAN defined by the _service.admin.FQAN.n_ key in the _service-configuration.properties_ file.
      * The 2nd token is the url of the VO&#39;s VOMS server.
   1 Initially, this file will be manually maintained.  In the long term, this file should be distributed by the OSG GOC.
   1 In order to insure that the most current list of VOMS servers is always used this file should be read each time the login service is invoked (explicitly or implicitly).  An alternative method of insuring currency is to read the timestamp on the file and read it only when it has changed.
&lt;pre&gt;
&lt;b&gt;./gratia/voms-servers file:&lt;/b&gt;
  # comment line
  atlas  https://voms.cern.ch:8443/voms/atlas
  cms    https://voms.cern.ch:8443/voms/cms
  geant4 https://voms.cern.ch:8443/voms/geant4
&lt;/pre&gt;

The user identity requesting login access will be retrieved from a grid certificate imported in their browser. The DN (subject) of the certificate and CA (issuer) of the certificate, in the following form, will be used:
&lt;pre&gt;
DN: /DC=org/DC=doegrids/OU=People/CN=John Weigand 458491
CA: /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
&lt;/pre&gt;

The procedure for logging in for the &quot;happy-day&quot; scenario is:
   1 When the administration page is initially accessed, the _Status: normal_ page will be presented and at the left frame menu a list of  menu options.  The options displayed in gray color are those requiring login. The _logout_ option is also displayed in gray color as it has no effect before login.
   1 If the user desires administrative update options, the user will select the appropriate menu option.
   1 The login process will read the imported user certificate from the browser to access the identity (DN/CA,subject/issuer) of the user.
   1 Depending on the specified values in the _service-configuration.properties_ file the following are the authorization steps:
      * if there are defined _service.admin.DN.x_ keys, then these keys are checked against the presented DN. If there is a match or if a key has the value  _ALLOW ALL_ the user is given _admin_ access and no other action is required.
      * if there are defined _service.admin.DN.x_ keys and there is no match with the presented DN (and there is no key with the value  _ALLOW ALL_) then 
         * A _pull-down/popup_ menu will be displayed showing the list of possible VOs containing users who are authorized  for  _admin_ access to this Gratia instance.
         * This list will be based on the set defined in the _service.admin.FQAN.n_ parameters of the _service-configurataion.properties_ file.
         * Using the _voms-server_ file (defined by the _service.voms.connections_ key), the login process will access the VO&#39;s VOMS server selected by the user and provide another _pull-down/popup_ menu displaying the set of FQANs for that user in the VO selected. The _&lt;nop&gt;VOMSAdmin_ method below can be used to retrieve that set:
         * &lt;nop&gt;listUsersWithRole (java.lang.String groupname, java.lang.String rolename)
         * The user will then select the FQAN from the list.
         * The login process will check the selected FQAN against the set of _service.admin.FQAN.n_ values in the _service-configuration.properties_ file.
   1 If the user is _not_ authorized, 
      * the left frame menu will remain unchanged.
   1 If the user is authorized, 
      * the left frame menu will display all the menu options available in the normal link color including the _logout_ option.

Additional login processing considerations:
   1 There is no need to query all the VOMS servers designated by the _service.admin.FQAN.n_ list if the user is determined to be a Gratia administrator.  Once is enough.
   1 In order to take into account the scenario where a user&#39;s Gratia administrative privileges have been revoked (similar to a CRL situation), a _refresh_ parameter will be added to the _system-configuration.properties_ file.  The login process will _implicitly_ re-authorize the user as though the user had selected the _login_ menu option.  This will be done  &quot;behind-the-scenes&quot; when the user performs any action including a refresh of a page.  This interval is the time between _login_ authorization checks.
   1 In order to take into account a user being logged in with  Gratia administrator privileges and leaving his browser unattended for an extended period, a _timeout_ parameter will be added to the _system-configuration.properties_ file. If a user has been inactive for the period specified, the login process will  return the user to the &quot;read-only&quot; state and menu options (replacing the _logout_ option with the _login_ option).  The user will have to _explicitly_ login again.

&lt;pre&gt;
&lt;b&gt;service-configuration.properties file:&lt;/b&gt;
# service.admin.refresh -&amp;gt; (expressed in minutes). 
#     This is time interval at which a user&#39; admin authorization is re-checked.
 service.admin.timeout-&amp;gt; (expressed in minutes). 
#     This is time interval at which a user&#39; admin authorization is reset and requires
#     an explicit login.  This is only done if the user is inactive for this period of time.
service.admin.refresh=30
service.admin.timeout=30
&lt;/pre&gt;

Some special error handling conditions: 
(&lt;b&gt;Note: These are suggestions and subject to change based on feedback from the developer.)&lt;/b&gt;
   1 All error conditions should be caught and a &quot;friendly&quot; message displayed providing sufficient information to understand/resolve the problem.  There should be no java stacktraces displayed to the screen.%BR%%BR%
   1 If there is not at least one _service.admin.FQAN.n_ entry (or the entry is corrupted) in the _service-configuration.properties_ file, display a message similar to:%BR%
      &lt;i&gt;Access denied: There are no valid service.admin.FQAN parameters in the service-configuration.properties file.  Refer to your Gratia documentation to configure this parameter.&lt;/i&gt;%BR%%BR%
   1 If there is no _voms-servers_ file (or no matching entries for the _service.admin.FQAN.n_ entries, diisplay a message similar to:%BR%
      &lt;i&gt;Access denied: The following VOs for your service.admin.FQAN parameters in the service-configuration.properties file could not be found in the _voms-server_ file.  Check your configuration.&lt;/i&gt;%BR%%BR%
   1 There can be _1 to n_ VOs to search.  If the user is denied (FQAN not found for the user)  in the VO&#39;s specified, the process should generate a message similar to:%BR%
      &lt;i&gt;Access denied: You are not defined as a Gratia administrator in any of the following VOs: &amp;lt;list the VO names of the VOMS servers queried&amp;gt;&lt;/i&gt;%BR%%BR%
   1 Since there are multiple VO VOMS servers to interrogate, one or more of them may not be accessible at that point in time.  
      * If this condition exists and the accessible VO VOMS servers do not allow access, then display a message similar to:%BR%
         &lt;i&gt;Access denied: The following VO VOMS server were not accessible: &amp;lt;list the VO names of the VOMS servers that were inaccessible&amp;gt;&lt;/i&gt;
      * If the user is authorized in one of the accessible VOMS servers, don&#39;t display any message.  Just allow access to all menu options.%BR%%BR%



---++ administration access open issues
&lt;ol&gt;
&lt;li&gt;Command line shutdown of update services using _wget_ .&lt;p&gt;
Currently the _initd_ tomcat service, does a _wget_ to stop the _update services_ prior to stopping _tomcat_.
&lt;pre&gt;
  wget -O - -q &#39;http://gratia.opensciencegrid.org:8881/gratia-administration/systemadministration.html?action=stopDatabaseUpdateThreads&#39;
&lt;/pre&gt;
This will not be allowed when the login access is implemented.  An alternative is required. 

&lt;b&gt;Possible resolution:&lt;/b&gt; This needs to be investigated.  Can we use the _--certificate=file_ option (and maybe others are needed) of the _wget_ command to pass either the _http_ or _host_ certificate that is needed by the collector to access the VOMS servers.  We would have  some special processing in the login process to recognize this.

&lt;b&gt;Current implementation&lt;/b&gt; allows stopping/starting the database updating threads by using a special URL, different than the one mentioned above. This needs to be investigated further and take into account the implemented authorization mechanisms.

&lt;/li&gt;
&lt;p&gt;
&lt;/ol&gt;
&lt;p&gt;


---+ gratia-reporting
The Gratia reporting is accessible as http(s)://&amp;lt;node.domain&amp;gt;:&amp;lt;port&amp;gt;/gratia-reporting.  It allows for viewing the accounting data only.  There is no maintenance/update capability.  The general intent in this area is to to allow various levels of visibility to the data:
   * public-like data viewable by anyone
   * VO level data viewable by members of a VO
   * Individual user data (DN level) for members of a VO

The detailed requirements for this capability have not been fully defined yet.

---++ reporting view requirements
This section has not been defined yet.

---++ reporting view design

---++ reporting view open issues



%STOPINCLUDE%



&lt;!-- MAJOR UPDATES
For significant updates to the topic, consider adding your &#39;signature&#39; (beneath this editing box) !--&gt;
---++!! Major updates
&lt;!--Future editors should add their signatures beneath yours!--&gt;
-- Main.JohnWeigand - 25 Feb 2008%BR%

