%TOC%

---+ Install, configure and generate gratia reports locally

This documentation explains how to install gratia code and configure it to generate gratia reports locally by connecting to any database of your choice. Note: The procedure below could all be done using a regular user account. 
&lt;ol&gt;
&lt;li&gt; Check out the code relevant to the gratia repots from the gratia trunk as shown below. Note: Below &quot;reports&quot; is the destination directory. You can replace it by any name of your choice. 
&lt;pre&gt;
svn co https://gratia.svn.sourceforge.net/svnroot/gratia/trunk/reporting/summary reports
cd reports
&lt;/pre&gt;
&lt;li&gt;In order to generate the gratia reports you need to connect to different gratia databases from which to read the data from. The database information goes into a configuration file. The default name of this configuration file is gratiareports.conf. This value could be overridden by using the --config command line option when running the report scripts. 
When the gratia code is initially checked out, it only contains a template configuration file, which is named &quot;gratiareports.conf.template&quot;. This file contains the template framework from which the configuration file to be used could be created. Copy this template file to gratiareports.conf and edit this file to properly fill-in the values for the variables in the different sections. Note: All sections need to be present and all values need to be filled-in. Otherwise while running the reporting script an error will be thrown indicating the problem. 
&lt;pre&gt;
cp gratiareports.conf.template gratiareports.conf
Edit gratiareports.conf as indicated above
&lt;/pre&gt;

The various sections in the configuration files are self explanatory. If not, please contact a gratia team member for help. 
&lt;li&gt;Once the configuration file is ready, you are ready to run the reports. Here are some (limited) examples showing how to run the reporting scripts.
&lt;pre&gt;
VO discrepancy reports
---------------------------------
python compareVOs.py --email=&quot;valid email address&quot; --weekly 2009/10/23 (to email VO discrepancy report)
python compareVOs.py --weekly 2009/10/23 (To display report to stdout)
python compareVOs.py --config=&quot;tst.conf&quot; --weekly 2009/10/23 (use a different configuration file from the default one)

Daily reports
-----------------
sh daily_mutt.sh --mail &amp;lt valid email address &amp;gt --daily 2009/09/10

Range reports
-------------------
sh range_mutt.sh --daily 2009/09/10
&lt;/pre&gt;
&lt;/ol&gt;

---++ Short description of individual reports
-- Main.KarthikArun - 28 Oct 2009
