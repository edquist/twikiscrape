<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> GitHubMigrationProposal &lt; SoftwareTeam &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/SoftwareTeam/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/SoftwareTeam/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/SoftwareTeam/GitHubMigrationProposal?_T=16 Feb 2017" type="application/x-wiki" title="edit GitHubMigrationProposal" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/SoftwareTeam/WebRss" />    
<base href="https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/GitHubMigrationProposal"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">


</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#DDDDDD;
	}
	.patternBookView {
		border-color:#DDDDDD;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">



</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--TWISTYPLUGIN_TWISTY--><style type="text/css" media="all">
@import url("https://twiki.opensciencegrid.org/twiki/pub/TWiki/TwistyContrib/twist.css");
</style>
<script type='text/javascript' src='https://twiki.opensciencegrid.org/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js'></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikiPref.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TwistyContrib/twist.compressed.js"></script>
<script type="text/javascript">
// <![CDATA[
var styleText = '<style type="text/css" media="all">.twikiMakeVisible{display:inline;}.twikiMakeVisibleInline{display:inline;}.twikiMakeVisibleBlock{display:block;}.twikiMakeHidden{display:none;}</style>';
document.write(styleText);
// ]]>
</script>

<!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

<!--TABLEPLUGIN_twikiAttachmentsTable--><style type="text/css" media="all">
.tableSortIcon img {padding-left:.3em; vertical-align:text-bottom;}
.twikiTable#twikiAttachmentsTable td {border-style:solid none;}
.twikiTable#twikiAttachmentsTable th {border-style:solid none;}
.twikiTable#twikiAttachmentsTable td {vertical-align:middle;}
.twikiTable#twikiAttachmentsTable th {vertical-align:middle;}
.twikiTable#twikiAttachmentsTable td {vertical-align:top;}
.twikiTable#twikiAttachmentsTable th {background-color:#eceef2;}
.twikiTable#twikiAttachmentsTable th.twikiSortedCol {background-color:#e0e3e9;}
.twikiTable#twikiAttachmentsTable tr.twikiTableRowdataBg0 td {background-color:#ffffff;}
.twikiTable#twikiAttachmentsTable tr.twikiTableRowdataBg0 td.twikiSortedCol {background-color:#f2f3f6;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol0 {text-align:center;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol1 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol2 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol3 {text-align:right;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol4 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol5 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol6 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol7 {text-align:center;}
</style></head>
<body class="patternViewPage patternPrintPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="patternTopic"> <div class="twikiToc"> <ul>
<li> <a href="?cover=print#Switching_Software_Area_software"> Switching Software Area (/software) to GitHub</a> <ul>
<li> <a href="?cover=print#Objectives"> Objectives</a>
</li> <li> <a href="?cover=print#Repo_characteristics"> Repo characteristics</a>
</li> <li> <a href="?cover=print#High_Level_Architecture"> High-Level Architecture</a> <ul>
<li> <a href="?cover=print#UW_repository"> UW repository</a>
</li> <li> <a href="?cover=print#GitHub_repository"> GitHub repository</a>
</li> <li> <a href="?cover=print#Synchronization"> Synchronization</a>
</li> <li> <a href="?cover=print#Backups"> Backups</a>
</li> <li> <a href="?cover=print#Contributions"> Contributions</a>
</li> <li> <a href="?cover=print#Access_control"> Access control</a>
</li></ul> 
</li> <li> <a href="?cover=print#Detailed_Architecture"> Detailed Architecture</a> <ul>
<li> <a href="?cover=print#UW_repository_AN1"> UW repository</a>
</li> <li> <a href="?cover=print#GitHub_repository_AN1"> GitHub repository</a> <ul>
<li> <a href="?cover=print#Access_control_AN1"> Access control</a>
</li></ul> 
</li> <li> <a href="?cover=print#Synchronization_AN1"> Synchronization</a> <ul>
<li> <a href="?cover=print#Fetcher_cron_job"> Fetcher cron job</a>
</li> <li> <a href="?cover=print#Watchdog_cron_job"> Watchdog cron job</a>
</li></ul> 
</li> <li> <a href="?cover=print#Nightly_AFS_Backups"> Nightly AFS Backups</a>
</li></ul> 
</li> <li> <a href="?cover=print#Migration"> Migration</a> <ul>
<li> <a href="?cover=print#One_time_setup"> One-time setup</a>
</li> <li> <a href="?cover=print#Per_project_migration"> Per-project migration</a>
</li></ul> 
</li> <li> <a href="?cover=print#Reference"> Reference</a> <ul>
<li> <a href="?cover=print#Safety"> Safety</a>
</li> <li> <a href="?cover=print#Manual_tidying_suggestions"> Manual tidying suggestions</a>
</li></ul> 
</li></ul> 
</li></ul> 
</div>
<p />
<h1><a name="Switching_Software_Area_software"></a> Switching Software Area (/software) to GitHub </h1>
<p />
This document details the plan for migrating OSG Software source code from the UW–Madison Subversion repository to Git.
<p />
Also see the <a href="/bin/view/SoftwareTeam/SW025_GitHubMigration" class="twikiLink">project page</a>.
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Objectives"></a> Objectives </span></h2>
<p /> <ul>
<li> OSG must control directly the authoritative source code repository and will be wholly responsible for its operation and maintenance
</li> <li> The authoritative repository will be synchronized frequently with approved changes to the working repository at GitHub
</li> <li> Anyone may view source code and submit contributions using the GitHub repository
</li> <li> The OSG Technology team must manage all write access to the repositories and will decide which contributions are accepted
</li> <li> The OSG Technology team must be able to work when the GitHub repository is unavailable
</li> <li> Common use cases should be easy to learn and efficient, and all supported use cases must be documented clearly
</li> <li> The migration process must preserve existing data, interrupt work as little as reasonable, and be reversible in case of problems
</li></ul> 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Repo_characteristics"></a> Repo characteristics </span></h2>
<p />
There will be two repositories:
<p /> <ul>
<li> <strong>UW–Madison</strong> repository – the authoritative copy for all OSG Software source code <ul>
<li> Stored at the UW–Madison on the Computer Sciences AFS system
</li> <li> If another repository conflicts with the UW one, the UW copy is correct unless the Software team explicitly decides otherwise
</li> <li> If the UW repository becomes unavailable, the Software team addresses the outage as soon as possible within business hours and with top priority
</li></ul> 
</li></ul> 
<p /> <ul>
<li> <strong>GitHub</strong> repository – for regular development use <ul>
<li> It is easy to access and update (for authorized users)
</li> <li> Developers publish their changes to the GitHub repository
</li> <li> The AFS repository pulls data from the GitHub repository
</li></ul> 
</li></ul> 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="High_Level_Architecture"></a> High-Level Architecture </span></h2>
<p />
Developers use the GitHub repos for day to day work, using the typical GitHub
workflow: fork, commit, make pull requests. Repos are synchronized frequently to the UW
to maintain a current repository under OSG control.
<p />
<h3><a name="UW_repository"></a> UW repository </h3>
<p />
Authentication and access control is provided by the UW CSL Kerberos system.
In the normal case, team members do not touch or clone from the AFS
repositories, but if GitHub is unavailable, trusted developers (i.e., those
with the right AFS ACLs) can push directly to the UW repository until GitHub
is available.
<p />
<h3><a name="GitHub_repository"></a> GitHub repository </h3>
<p />
The GitHub repository is organized into individual repositories per software
component and is owned by the <code>opensciencegrid</code> organization.  Each team member
must have a GitHub account and write access granted via GitHub's access
control mechanisms in order to approve contributions.  The GitHub repos will
be configured to reject "unsafe" commits (commits that alter history, cause
conflicts, or otherwise cause breakage or potential loss of information).
<p />
<h3><a name="Synchronization"></a> Synchronization </h3>
<p />
The UW repository organization mirrors the GitHub one. Each individual UW
repository will pull from the corresponding GitHub repository periodically.
The UW repository will be configured to accept only safe changes.
<p />
If an unsafe update is attempted, the developers will be notified via email.
They will have to resolve the conflict and push the changes back to GitHub.
<p />
<h3><a name="Backups"></a> Backups </h3>
<p />
The UW repository will live on an AFS volume that is backed up nightly by the CSL.
We will make a snapshot of the repo before each backup runs, to ensure
consistency.  This process is modeled after what we do for the Subversion repository.
<p />
<h3><a name="Contributions"></a> Contributions </h3>
<p />
External collaborators or team members will fork one of the GitHub repos and
submit their changes as pull requests; a team member will review and merge the
pull requests to incorporate the changes.
<p />
<h3><a name="Access_control"></a> Access control </h3>
<p />
We will use GitHub's access control mechanisms.
<p />
The privilege to make changes to repos and approve others' changes will be
given to people with some percentage on the Software team, and the primary
contributors of the software if they are not in the Software team.
<p />
The privilege to move or delete repos, and to grant or revoke others'
privileges will be given to the heads of the software, release, investigations,
and production teams, plus their delegates.
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Detailed_Architecture"></a> Detailed Architecture </span></h2>
<p />
<p />
<h3><a name="UW_repository_AN1"></a> UW repository </h3>
<p />
For a given software component, the UW repository is located at
<code>/p/condor/workspaces/vdt/git/software/<em>project</em>.git</code>
Once the GitHub repo for a project has been created, making the corresponding
AFS repo is as follows:
<pre>
PROJECT=&lt;your project&gt;

cd /p/condor/workspaces/vdt/git/repo/
git clone --mirror https://github.com/opensciencegrid/$PROJECT.git
cd $PROJECT.git/

# Check integrity of each object fetched:
git config transfer.fsckObjects true

# Enable the reflog (helps debugging):
git config core.logAllRefUpdates true

# Only allow non-fast-forward updates for pull requests:
git config remote.origin.fetch '+refs/pull/*:refs/pull/*'
git config --add remote.origin.fetch 'refs/*:refs/*'

# Allow pushing only one branch/tag at a time back to GitHub.
# Pushing all branches/tags can be done by explicitly specifying
# --mirror to "git push"
git config --unset remote.origin.mirror
</pre>
<p />
The AFS ACLs for each repo will be copied from
<code>/p/condor/workspaces/vdt/git</code>.
<p />
<h3><a name="GitHub_repository_AN1"></a> GitHub repository </h3>
<p />
Each GitHub repository is located at
<code>https://github.com/opensciencegrid/<em>PROJECT</em></code>
and is owned by the OSG GitHub
organization (<code>opensciencegrid</code>).
<p />
We will enable
<a href="https://help.github.com/articles/about-protected-branches/" target="_top">protected branches</a>
for all branches of the project, to prevent non-fast-forward pushes.
<p />
<h4><a name="Access_control_AN1"></a> Access control </h4>
<p />
In general, GitHub repositories have three kinds of permissions:
<p /> <dl>
<dt> Read </dt><dd> the ability to see the contents of the repository, fork the repo, and submit a pull request
</dd> <dt> Write </dt><dd> the ability to accept pull requests or push to the repository; implies read access
</dd> <dt> Admin </dt><dd> the ability to grant or revoke privileges, and the ability to make changes that affect the entire repo, such as transferring ownership, or deleting the repo; implies read and write access
</dd></dl> 
<p />
Everyone has Read access, because GitHub repositories are public unless we
pay GitHub money.
<p />
Write access will be implemented by giving the
<a href="https://github.com/orgs/opensciencegrid/teams/software" target="_top">Software GitHub team</a>
write privileges.
<p />
Admin access will be implemented by giving the
<a href="https://github.com/orgs/opensciencegrid/teams/core" target="_top">Core GitHub team</a> admin
privileges. These people will also control team membership, which will be
implemented by making them the
<a href="https://github.com/orgs/opensciencegrid/people?utf8=%E2%9C%93&amp;query=role%3Aowner+" target="_top">owners of the Open Science Grid organization</a>
in GitHub.
<p />
<h3><a name="Synchronization_AN1"></a> Synchronization </h3>
<p />
<h4><a name="Fetcher_cron_job"></a> Fetcher cron job </h4>
<p /> <ul>
<li> There will be one "fetcher" cron job, owned by <code>cndrutil</code>, to download GitHub repo changes to the AFS repos by running <code>git fetch</code> for each repo.
</li> <li> The cron job will run every 10 minutes.  This is often enough to keep the     AFS repos in sync most of the time, but should avoid placing too much load     on the machine doing the syncing.
</li> <li> Any nonzero exit codes will result in an email to Madison people.
</li> <li> The list of repos will be taken from a file called <code>/p/condor/workspaces/vdt/git/repo/remotes.list</code>
</li> <li> Results will be logged to <code>/p/condor/workspaces/vdt/git/log/backups.log</code>. The log will be rotated.
</li> <li> After a successful fetch, update a file containing the timestamp of the last successful fetch.
</li> <li> A team member can create a file named <code>NO_FETCH</code> in an AFS repo to disable     fetches for that repo, in case there is a persistent error that needs manual     intervention to solve.
</li></ul> 
<p />
<h4><a name="Watchdog_cron_job"></a> Watchdog cron job </h4>
<p /> <ul>
<li> There will be one "watchdog" cron job that will run nightly to examine the AFS     repos and send email to the Madison people about: <ul>
<li> any <code>NO_FETCH</code> files
</li> <li> last update time for each repo (mismatches should be investigated)
</li></ul> 
</li></ul> 
<p />
<h3><a name="Nightly_AFS_Backups"></a> Nightly AFS Backups </h3>
<p />
A single cron job will go through each AFS repo dir <em>PROJECT</em>.git, and do this:
<p />
<pre>
PROJECT=&lt;your project&gt;

rm -rf "/p/condor/workspaces/vdt/git/snapshot/${PROJECT}.git.tmp"
git clone --mirror "/p/condor/workspaces/vdt/git/repo/${PROJECT}.git" \
                   "/p/condor/workspaces/vdt/git/snapshot/${PROJECT}.git.tmp"
rm -rf "/p/condor/workspaces/vdt/git/snapshot/${PROJECT}.git"
mv "/p/condor/workspaces/vdt/git/snapshot/${PROJECT}.git.tmp" \
   "/p/condor/workspaces/vdt/git/snapshot/${PROJECT}.git"
</pre>
<p />
In the unlikely event of an AFS repo becoming unrepairable <em>and</em> we are
unable to make a new clone from GitHub, this is how we restore:
<p />
<pre>
PROJECT=&lt;your project&gt;

rm -rf "/p/condor/workspaces/git/repo/${PROJECT}.git"
git clone --mirror "/p/condor/workspaces/git/snapshot/${PROJECT}.git" \
                   "/p/condor/workspaces/git/repo/${PROJECT}.git"
cd "/p/condor/workspaces/git/repo/${PROJECT}.git"
# restore "config" from an AFS backup
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Migration"></a> Migration </span></h2>
<p />
<h3><a name="One_time_setup"></a> One-time setup </h3>
<p /> <ol>
<li> Create AFS volume for <code>/p/condor/workspaces/vdt/git</code> (done). Have the quota notifier from <a href="https://jira.opensciencegrid.org/browse/SOFTWARE-1666" target="_top">SOFTWARE-1666</a> monitor this volume
</li> <li> Create authors file to map Subversion user names to email addresses for Git (there is one at "/p/condor/workspaces/vdt/svn-access/authors.txt" -- make sure it's up-to-date)
</li> <li> Create "backup" cron job, run by <code>cndrutil</code> (see "Backups" section)
</li> <li> Create "fetch" and "watchdog" cron jobs, run by <code>cndrutil</code> (see "Synchronization" section)
</li></ol> 
<p />
<h3><a name="Per_project_migration"></a> Per-project migration </h3>
<p />
One of the GitHub migration owners (read: <a href="/bin/view/Main/MatyasSelmeci" class="twikiLink">MatyasSelmeci</a> and
<a href="/bin/view/Main/CarlEdquist" class="twikiLink">CarlEdquist</a>) will convert each project from Subversion to Git.
<p />
Some projects already have read-only GitHub mirrors. For example,
<a href="https://vdt.cs.wisc.edu/svn/software/osg-configure/" target="_top">osg-configure in Subversion</a>
has a corresponding
<a href="https://github.com/opensciencegrid/osg-configure" target="_top">osg-configure repo in GitHub</a>.
There are special considerations for those projects.
<p />
Before doing any conversions, we must contact the software owners and major
contributors, and work with them to make sure the conversion has a minimal
impact on their work process.
<p />
The outcomes of the conversion that may affect their work are:
<p /> <ul>
<li> The corresponding Subversion repo will become read-only
</li> <li> If a GitHub read-only mirror exists, it will have its history overwritten
</li></ul> 
<p />
<b>Contributors must commit their work to Subversion before the conversion to avoid
problems.</b> If necessary, schedule a switchover date with the owners and
major contributors.
<p />
Overall steps are:
<p /> <ol>
<li> Wait for the switchover date if necessary.
</li> <li> If there is no read-only GitHub mirror, create the GitHub repo under      the "opensciencegrid" organization.
</li> <li> Do the conversion -- create a new Git repo based on the data from Subversion using the scripts in      <a href="https://vdt.cs.wisc.edu/svn/software/tools/github/git-svn-bare-setup" target="_top">software/tools/github</a>:<pre>
PROJECT=<em>PROJECT</em>

svn checkout https://vdt.cs.wisc.edu/svn/software/tools/github
./github/git-svn-bare-setup $PROJECT
cd $PROJECT.git
</pre>
</li> <li> Inspect the repo and perform any manual tidying, if appropriate.      See the <a href="/bin/view/SoftwareTeam/GitHubMigrationProposal#ManualTidying" class="twikiCurrentTopicLink twikiAnchorLink">manual tidying suggestions</a> section.
</li> <li> Push all branches and tags.<pre>
git push github
</pre>
</li> <li> Enable protected branches for the repo in GitHub: <ol>
<li> In the GitHub web interface for the repo, go to "Settings &rarr; Branches".
</li> <li> Under "Protected branches", select a branch.
</li> <li> Check "Protect this branch".
</li> <li> Click "Save changes".
</li> <li> Repeat for all the other branches.
</li></ol> 
</li> <li> Edit GitHub permissions on the repo: <ol>
<li> In the GitHub web interface for the repo, go to "Settings &rarr; Collaborators &amp; teams".
</li> <li> Ensure the team "Core" is added and has Admin privileges.
</li> <li> Ensure the team "Software" is added and has Write privileges.
</li> <li> If the software owner is not on the Software team, add them to the         "Collaborators" section and give them Write privileges.
</li></ol> 
</li> <li> Set up synchronization for the repo: <ol>
<li> Add the repo to <code>/p/condor/workspaces/vdt/git/repo/remotes.list</code>.
</li> <li> Wait for the fetcher script to run.
</li> <li> Verify that <code>/p/condor/workspaces/vdt/git/repo/<em>PROJECT</em>.git</code> exists         and the contents look good.
</li></ol> 
</li> <li> Close off the original Subversion repo: <ol>
<li> Make a file in the trunk of the Subversion directory called <code>MOVED-TO-GIT</code> that contains the following text:          <pre>The source code for this project is now contained in GitHub at
   https://github.com/opensciencegrid/<em>PROJECT</em>
Changes committed to SVN will be ignored.</pre>
</li> <li> Edit <code>/p/condor/workspaces/vdt/svn/hooks/pre-commit</code> and add <code>software/<em>PROJECT</em></code> to the <code>@blocked_dirs</code> list.      <!--1. Edit <code>/p/condor/workspaces/vdt/svn-access/svn-acl-file</code> and add the following lines to shut off HTTPS write access to the repo:         <pre>[/software/<em>PROJECT</em>]
* = r</pre> and commit the changes to Git.-->
</li></ol> 
</li></ol> 
<p />
<font color="#ff0000">If anything fails, either debug, <em>carefully recording all steps</em> or just try again.</font>
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Reference"></a> Reference </span></h2>
<p />
<h3><a name="Safety"></a> Safety </h3>
<p />
See the <a href="/bin/view/SoftwareTeam/GitHubMigrationProposalSafetyInvestigation" class="twikiLink">safety investigation</a>
page for a report our investigations into the safety of this plan.
<p />
<a name="ManualTidying"></a>
<h3><a name="Manual_tidying_suggestions"></a> Manual tidying suggestions </h3>
<p />
After the initial conversion with the <code>git-svn-bare-setup</code>, there are a number
of optional tasks which can be done to create a tidier repository. This is
mostly a reference for the migration owners.
<p />
Since this task involves a lot of manual steps, it is <strong>strongly</strong> recommended
that you keep a log of the exact steps you take. Saving shell history is a good
idea.
<p />
A good way to inspect the history of the repo is to run:
<pre>gitk --branches -tags --date-order</pre>
You might want to keep this window up and refresh it after making changes.
<p />
Two common problems are:
<p /> <ol>
<li> Zombie branches -- branches that have been deleted in SVN but were      recreated for some reason during the conversion.
</li> <li> Unidentified merges -- merges that happened in SVN but do not show up as      such in the Git repo.
</li></ol> 
<p />
The script <code>trim-deleted-svn-branches</code> helps identify both of these: branches
are often deleted after merging, so a zombie branch may indicate the presence
of a merge.
<p /> <ol>
<li> Run the trim script (<code>trim-deleted-svn-branches</code>), to see what would be      trimmed (don't actually execute commands). The script returns a set of      <code>git branch</code> and <code>git tag</code> commands. <ol>
<li> For any <code>branch@rev</code> tags that would be created, see if there's         anything <strong>obvious</strong> to you, the one performing the migration, in the         chronological vicinity of the <code>branch@rev</code> commit that clearly matches         the concept of a git merge, and if so, add a git graft for it.
</li> <li> Do any other tidying that you would like, that seems worth doing, that         just so happens to come to your attention at the moment while         inspecting <code>gitk</code>, for which you feel like expending the effort and         eye strain to tidy up. <ol>
<li> This may include making what should have been merges look like            merges in git, even for commits which are already part of the            history for active branches.
</li> <li> Feel free to consult <a href="/bin/view/Main/CarlEdquist" class="twikiLink">CarlEdquist</a> for help if you are confused.
</li></ol> 
</li> <li> If any grafts have been added and you are satisfied with the result in         <code>gitk</code>, then finalize your changes:         <pre>git-filter-branch -- --all  &&  rm -rf refs/original info/grafts</pre>
</li></ol> 
</li> <li> Re-run the trim script, and this time run the tag and branch commands      that it outputs.
</li></ol> 
<p />
See also the following guide for identifying potential git merge points for svn branches that were merged into trunk but not subsequently deleted:
<p /> <ul>
<li> <a href="https://twiki.opensciencegrid.org/twiki/pub/SoftwareTeam/GitHubMigrationProposal/merge-guessing.txt" target="_top">merge-guessing.txt</a>
</li></ul> </div><!-- /patternTopic-->
<p />
<p />
<div class="twikinetRounded twikinetRoundedAttachments"><div class="rCRounded"><div class="rCTR"><div class="rCTL"></div><!--/rCTL--><div class="twikiAttachments">
<div class="twistyPlugin twikiMakeVisibleInline">  <span id="topicattachmentslistshow" class="twistyRememberSetting twistyTrigger twikiUnvisited twistyHidden twistyInited"><a href="#"><img src="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen.gif" border="0" alt="" /><span class="twikiLinkLabel twikiUnvisited">Attachments</span></a> </span> <span id="topicattachmentslisthide" class="twistyRememberSetting twistyTrigger twikiUnvisited twistyHidden twistyInited"><a href="#"><img src="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose.gif" border="0" alt="" /><span class="twikiLinkLabel twikiUnvisited">Attachments</span></a> </span>  </div><!--/twistyPlugin twikiMakeVisibleInline--> <div class="twistyPlugin"><div id="topicattachmentslisttoggle" class="twistyRememberSetting twistyContent twikiMakeHidden twistyInited">
<table cellspacing="0" cellpadding="0" border="0" class="twikinetWrapperTable" rules="none">
<tr class="twikinetWrapperTableRow">
<td class="twikinetWrapperTableT twikinetWrapperTableTL"></td>
<td class="twikinetWrapperTableT twikinetWrapperTableTR"></td>
</tr>
<tr class="twikinetWrapperTableRow">
<td colspan="2" class="twikinetWrapperTableMain">
<table summary="Topic attachments" cellspacing="0" id="twikiAttachmentsTable" cellpadding="0" class="twikiTable" rules="rows" border="1"><caption>Topic attachments</caption>
		<tr class="twikiTableOdd twikiTableRowdataBgSorted0 twikiTableRowdataBg0">
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol0 twikiFirstCol"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=0;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">I</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol1"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=1;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Attachment</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol2"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=2;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Action</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol3"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=3;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Size</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol4"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=4;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Date</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol5"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=5;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Who</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol6 twikiLastCol"> <a rel="nofollow" href="/bin/view/SoftwareTeam/GitHubMigrationProposal?cover=print;sortcol=6;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Comment</font></a> </th>
		</tr>
		<tr class="twikiTableEven twikiTableRowdataBgSorted0 twikiTableRowdataBg0">
			<td bgcolor="#ffffff" align="center" valign="top" class="twikiTableCol0 twikiFirstCol twikiLast"> <img width="16" alt="txt" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/txt.gif" height="16" border="0" /><span class="twikiHidden">txt</span> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol1 twikiLast"> <a href="/twiki/pub/SoftwareTeam/GitHubMigrationProposal/merge-guessing.txt">merge-guessing.txt</a> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol2 twikiLast"> <a href="/bin/attach/SoftwareTeam/GitHubMigrationProposal?filename=merge-guessing.txt;revInfo=1" title="change, update, previous revisions, move, delete..." rel="nofollow">manage</a> </td>
			<td bgcolor="#ffffff" align="right" valign="top" class="twikiTableCol3 twikiLast"> 4.1&nbsp;K </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol4 twikiLast"> <span class="twikiNoBreak">09 Mar 2016 - 18:23</span> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol5 twikiLast"> <a href="/bin/view/Main/CarlEdquist" class="twikiLink">CarlEdquist</a> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol6 twikiLastCol twikiLast"> guide for identifying possible svn merges that should also be git merges </td>
		</tr></table>
</td>
</tr>
<tr class="twikinetWrapperTableRow">
<td class="twikinetWrapperTableB twikinetWrapperTableBL"></td>
<td class="twikinetWrapperTableB twikinetWrapperTableBR"></td>
</tr>
</table>
</div></div> <!--/twistyPlugin--></div><!--//twikiAttachments--></div><!--/rCTR--><div class="rCBR"><div class="rCBL"></div><!--/rCBL--></div><!--/rCBR--></div><!--/rCRounded--></div><!--/twikinetRounded--></div><!-- /patternContent-->
<hr />
This topic: SoftwareTeam<span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span><a href="/bin/view/SoftwareTeam/WebHome" class="twikiCurrentWebHomeLink twikiLink">WebHome</a> &gt; <a href="/bin/view/SoftwareTeam/InternalDocs" class="twikiLink">InternalDocs</a><span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span>GitHubMigrationProposal</span> <br />    
Topic revision: r26 - 06 Apr 2016 - 22:25:48 - <a href="/bin/view/Main/MatyasSelmeci" class="twikiLink">MatyasSelmeci</a>
</div><!-- /patternMainContents-->
</div><!-- /patternMain-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>
<p />