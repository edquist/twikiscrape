


-- Main.DanFraser - 16 Mar 2011
There are three main drivers from the community:
   1 The primary driver for using native packages is to incorporate OSG software into standard configuration management tools (e.g. Puppet, CFEngine, Rocks, …). Currently these tools do not integrate with Pacman, and as a result, many site admins are already creating their own binary RPM packages (and sometimes even sharing these with other admins) for use in their installations. A significant step forward would be to help them get out of the business of creating binary RPMs on their own.
   1 Another key driver is to get the VDT team out of the business of repackaging existing packages. 
   1 An important use case by Atlas is to manage multiple (clustered) CEs. This is the main driver behind CREAM.

The requirement is to focus first on components that are installed and/or managed most frequently. 
In addition, there needs to be “configuration” RPMs for carrying basic configuration capabilities.
Need to package the following binary RPMs and place them in a Yum repository that would support commands like “yum install osg-wn-client”. This repository should include:

   * OSG WN Client packages:
      * Globus-client
      * Globus-RLS-Client
      * CA-certificates
      * Licenses
      * Pegasus-worker
      * UberFTP
      * SRM-Client-Fermi
      * SRM-Client-LBNL
      * Dccp
      * MyProxy-client
      * LCG-utils
      * LFC-client
      * Voms-client
      * Glite-FTS-client
      * EDG-GridFTP-client

   * Glexec – since installation does not work on a network filesystem.
   * CA Certificate Installation management (e.g. vdt-ca-manage)
   * Xrootd (primarily for Atlas Tier-3’s)
      * From discussion at the AHM meeting, we are currently waiting on the Xrootd team to provide a basic configuration template to build on.
      * There were additional discussions that need to be incorporated here.
      * Issues reported by Doug B. that need to be addressed include:
         * Note -  epel yum repository - has xrootd rpm  which clashes with OSG rpm . epl xrootd rpm is of unknown origin. At CERN SL5 work stations have epel repository enabled. Can we coordinate with epel on this?
         * Critical Missing files:
            * /etc/init.d/xrootd
            * xrootd/etc/StartXRD
            * xrootd/etc/StartXRD.cf
         * Critical Missing directories:
            * /opt/vdt/xrootd/core
         * The RPM does not create non-privilege account to run xrootd.  Note in ATLAS Tier 3 we recommend people use xrootd:xrootd account.
         * In the condor rpm if the condor user is missing it is created. Can that happen here?
         * Critical missing directory ownership: (Assuming that xrootd will run under xrootd account)
            * directories owned by xrootd:xrootd
               * /opt/vdt/xrootd/core
               * /opt/vdt/xrootd/var/*
         * Other issues -  (understood that this is missing for now - perhaps a configuration rpm)
            * missing auth_file: xrootd.cfg
            * files that must be edited.
            * xrootd/etc/StartXRD  - for starting extra xrootd on redirector machine Server Side inventory.  (started with -n cns flag)
            * /etc/init.d/xrootdfs to get the proper mount points.

   * CREAM
      * From discussions with John H. at the AHM, the first set of RPMs only needs to be good enough to deploy a basic CREAM install. They can be binary only and they only need to include enough to run CREAM--they don&#39;t need a complete CE. 
