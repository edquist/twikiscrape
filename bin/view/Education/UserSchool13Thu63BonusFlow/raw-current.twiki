&lt;style type=&quot;text/css&quot;&gt;
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
&lt;/style&gt;

---+ Thursday Exercise 6.3: Bonus Workflow Modifications

If you finish the entire workflow, and are thirsty for more you are welcome to try any of the following in whatever order you like:

---+++ Bonus 1
Rerun the workflow twice, once with approximately twice the permutations per process and again with four times the permutations (keeping a total of 25,000 permutations per trait). Of these variations, which finishes in an overall faster time? Why?

---+++ Bonus 2
You probably noticed that the job processes from the Permutation step create many log, out, and error files. Modify the Permutation submit files either to consolidate these files, or to place them in a subdirectory. You may wish to direct other files to this location as well.

---+++ Bonus 3
_Focusing just on one of the Permutation steps_, scale up the number of total permutations to 250,000 per trait in two ways: once where each job process completes a number of permutations that correspond to run times of ~1hour, and once for runtimes of ~2 hours. How does the throughput (overall runtime) of the Permutation step differ between these two examples? Hint: by changing the submit file to only create one log file, you can more easily take note of the total time, from submission to the end of the last job&#39;s run time.

---+++ Bonus 4
You probably noticed that Joe’s jobs bring back unnecessary files that are created when runR.pl sets the R environment at the beginning of each job (=SLIBS1.tar.gz= and =built-sl5-R-2.10.1.tar.gz=). Use the HTCondor =transfer_output_files= to keep these files from coming back. Does this make much of a difference for the average time it takes for the Permutation processes to run?




-- Main.LaurenMichael - 26 Jun 2013
