&lt;style type=&quot;text/css&quot;&gt;
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
&lt;/style&gt;

---+ Monday Exercise 1.2: Experiment With Basic HTCondor Commands

The goal of this exercise is to use the basic informational HTCondor commands, =condor_status= and =condor_q=. They will be useful for monitoring your jobs and available slots throughout the day.

This exercise should take only a few minutes.


---++ Viewing Slots

As discussed in the lecture, the =condor_status= command is used to view the current state of slots in an HTCondor pool.

At its most basic, the command is very simple:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT_SHORT% &lt;strong&gt;condor_status&lt;/strong&gt;
&lt;/pre&gt;

This command, running on our (CHTC) pool, will produce a lot of output; there is one line per slot, and we typically have over 10,000 slots.

Here is a sample of the main part of the output:

&lt;pre class=&quot;screen&quot;&gt;
slot1@glow-c055.cs LINUX      X86_64 Unclaimed Idle      0.000 8053  0+01:14:34
slot1@glow-c056.cs LINUX      X86_64 Unclaimed Idle      0.000 8053  0+03:57:00
slot1@glow-c057.cs LINUX      X86_64 Unclaimed Idle      0.000 8053  1+00:05:17
slot1@glow-c067.lm LINUX      X86_64 Owner     Idle      0.300  250  7+03:22:21
&lt;em&gt;slot2@glow-c067.lm LINUX      X86_64 Claimed   Busy      1.000 1024  0+02:42:08&lt;/em&gt;
slot3@glow-c067.lm LINUX      X86_64 Claimed   Busy      1.000 1024  0+02:40:24
&lt;/pre&gt;

This output consists of 8 columns:

| *Col* | *Example* | *Meaning* |
| 1 | =slot2@glow-c067.lm= | Slot name and hostname, truncated |
| 2 | =LINUX= | Operating system |
| 3 | =X86_64= | Machine architecture (e.g., Intel 64 bit) |
| 4 | =Claimed= | State of the slot (=Unclaimed= is available, =Owner= is being used by the machine owner, =Claimed= is matched to a job) |
| 5 | =Busy= | Is there activity on the slot? |
| 6 | =1.000= | Load average, a measure of activity on the slot |
| 7 | =1024= | Memory available to the slot, in MB |
| 8 | =0+02:42:08= | Amount of time spent in current activity (days + hours:minutes:seconds) |

At the end of the slot listing, there is a summary. Here is a sample:

&lt;pre class=&quot;screen&quot;&gt;
                     Total Owner Claimed Unclaimed Matched Preempting Backfill

        X86_64/LINUX 13240     3   12516       688       0         28        0
      X86_64/WINDOWS     6     2       0         4       0          0        0

               Total 13246     5   12516       692       0         28        0
&lt;/pre&gt;

There is one row of summary for each machine architecture/operating system combination. The columns are the different states that a slot can be in. The final row gives a summary of slot states for the whole pool.

*Questions:*

   * For the sample above, how many 64-bit Linux slots are available? (Hint: Unclaimed = available.)
   * For the sample above, how many slots total are being used by their owner?

Now, run =condor_status= yourself and try these:

   * How many 64-bit Linux slots are in the pool right now? How does that compare to the sample above?
   * How many of those 64-bit Linux slots are available now?


---++ Viewing Jobs

The =condor_q= command shows (by default) all jobs on this submit machine that are running or waiting to run. The =_q= part of the name is meant to suggest the word “queue”, or list of jobs _waiting_ to finish.

At its most basic, the command is very simple:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT_SHORT% &lt;strong&gt;condor_q&lt;/strong&gt;
&lt;/pre&gt;

The main part of the output (which may be empty!) show one job ID per line:

&lt;pre class=&quot;screen&quot;&gt;
-- Submitter: osg-ss-submit.chtc.wisc.edu : &lt;...&gt; : ...
 ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD               
&lt;em&gt;2359.0   cat             6/20 12:19   0+00:00:00 I  0   0.0  .condor_run.3354  &lt;/em&gt;
&lt;/pre&gt;

This output consists of 8 columns:

| *Col* | *Example* | *Meaning* |
| ID | =2359.0= | Job ID, which is the =cluster=, a dot character (=.=), and the =process= |
| OWNER | =cat= | The user ID of the user who submitted the job |
| SUBMITTED | =6/20 12:19= | The date and time when the job was submitted |
| RUN_TIME | =0+00:00:00= | Total time spent running so far (days + hours:minutes:seconds) |
| ST | =I= | Status of job: =I= is Idle (waiting to run), =R= is Running, =H= is Held, etc. |
| PRI | =0= | Job priority (see next lecture) |
| SIZE | =0.0= | Current run-time memory usage, in MB |
| CMD | =hostname= | Name of the executable to be run |

At the end of the job listing, there is a summary. Here is a sample:

&lt;pre class=&quot;screen&quot;&gt;
1 jobs; 0 completed, 0 removed, 1 idle, 0 running, 0 held, 0 suspended
&lt;/pre&gt;

It shows total counts of jobs in the different possible states.

*Questions:*

   * For the sample above, when was the job submitted?
   * For the sample above, was the job running or not yet? How can you tell?

Now, run =condor_q= yourself and try these:

   * How many jobs are queued in total? (That is, running or waiting to run.)
   * How many jobs from this submit machine are running right now?

---+++ Extra Information

Both =condor_status= and =condor_q= have many command-line options, some of which significantly change their output. We will touch on a few of the most useful options in the next lecture and set of exercises, but if you want to experiment yourself, go ahead! There are a few ways to learn more about the commands:

   * Use the (brief) built-in help for the commands, e.g.: =condor_q -h=
   * Read the installed man(ual) pages for the commands, e.g.: =man condor_q=
   * Find the command in [[http://research.cs.wisc.edu/htcondor/manual/][the online manual]]; *note:* the text online is the same as the =man= text, only formatted for the web

Here is one option to get you started. The output from =condor_q= can be very long, if there are many submitters and jobs on the submit machine at once. If you are interested in just your jobs, you can ask to see only them:

&lt;pre class=&quot;screen&quot;&gt;
%UCL_PROMPT_SHORT% &lt;strong&gt;condor_q &lt;em&gt;userid&lt;/em&gt;&lt;/strong&gt;
&lt;/pre&gt;

Replace =userid= with your own (login) user ID. Try a full =condor_q= and one limited to just your jobs to see the difference!
