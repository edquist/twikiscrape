&lt;style type=&quot;text/css&quot;&gt;
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
&lt;/style&gt;

---+ Friday Exercise 1.3: Execute a Production Workflow

In this Exercise, you will:
   * finish testing workflow steps, 
   * write the DAG for the workflow you planned, and 
   * submit this workflow on osg-ss-submit.chtc.wisc.edu. 
There are bonus tasks in [[https://www.opensciencegrid.org/bin/view/Education/UserSchool15Fri14BonusFlow][Exercise 1.4]], if you get through this part quickly, including running the workflow on the Open Science Grid.

---++ Steps to Take

1) While one person in your group works on step 1, someone else can work on step 2.

   * 1A) Modify the _permutation_ submit file for each trait according to the optimal number of _job processes_, number of permutations-per-process, and requests for memory and disk. Submit one of these newly modified _permutation_ submit files in preparation for an optimized QTL test. If your estimate of the necessary permutations per process (for a ~30-minute run time) was not close enough, modify and test the _permutation_ jobs again.

   * 1B) To prepare an optimized QTL step, use =tarit.sh= to package the output from the test _permutation_ step just above. Then run the _QTL_ job. As above, you will only need to submit one of the QTL submit files to confirm the approximate memory and disk needed. Make sure all of the desired output files for the QTL step are created to confirm success.

   * 1C) Don&#39;t forget to test taritall.sh after a successful QTL job, to make sure it works as expected. After the optimized _permutation_ and _QTL_ tests, copy all output, error, and log files to a new directory to prepare for the production workflow.

2) Write a single DAG file for the workflow, including:
   * =JOB= lines for each submit file
   * =PARENT x CHILD y= lines as necessary
   * =SCRIPT PRE= and/or =SCRIPT POST= lines for the tar steps
*Note:* You may need to think about how each =tar= step works for deciding on &quot;PRE&quot; or &quot;POST&quot; scripts for each.

To *quickly* check that you&#39;ve got the details of the DAG correct, modify your _permutation_ submit files to run only a few processes, and with each process performing a much smaller number of permutations (say, ~10?).

3) Modify the permutations submit files before submitting a full-scale run of the DAG (100,000 total permutations for each trait). If you have any issues, consult the log and out files for the DAG and jobs, and modify your approach at any of the previous steps. While the full-scale DAG is running, you may wish to further detail your drawn workflow, including information regarding resource usage. Share all submit and DAG files with one another so everyone has a copy.


If you have time (even while step 3 is running smoothly), move on to the Bonus Tasks in [[/bin/view/Education/UserSchool15Fri14BonusFlow][Exercise 1.4]]



-- Main.LaurenMichael - 26 Jul 2015

