<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> GlideinWMSExercises &lt; Education &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/Education/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/Education/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/Education/GlideinWMSExercises?_T=16 Feb 2017" type="application/x-wiki" title="edit GlideinWMSExercises" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/Education/WebRss" />    
<base href="https://twiki.opensciencegrid.org/bin/view/Education/GlideinWMSExercises"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">


</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#D0D0D0;
	}
	.patternBookView {
		border-color:#D0D0D0;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">

@import url('/pub/Documentation/Tools/exercises.css ');

</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>
<body class="patternViewPage patternPrintPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="patternTopic"> <h1><a name="Glidein_for_the_users_Hands_on_S"></a> Glidein for the users - Hands-on Session, Wednesday July 21st, 2010 </h1>
<p />
This session will give you hands-on experience in using the glideinWMS as a user.
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Local_setup"></a> Local setup </span></h2>
<p />
As with all the other hands-on exercises, we will be using <strong>submit03.ncc.unesp.br</strong> to submit and monitor our jobs.
<p />
However, we will use <strong>a different Condor instance running on that same machine</strong>.
The reason for having a different instance is due to the security requirements
of having a Condor pool spread across the WAN.
Interested students can talk to me to get a more detailed information,
for all the others, you just need to make sure you point to the right Condor installation.
<p />
To use the proper Condor instance, please run:
<pre class="screen">
$ source /opt/glidecondor/condor.sh 
</pre>
<p />
At any given point, you can check you are using the right one by using:
<pre class="screen">
$ which condor_submit
/opt/glidecondor/bin/condor_submit
$ echo $CONDOR_CONFIG
/opt/glidecondor/etc/condor_config
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="The_work_environment"></a> The work environment </span></h2>
<p />
As mentioned in the lecture, the glideinWMS environment looks almost exactly like a regular, local Condor pool.
<p />
It just does not have any resources attached unless you ask for them;
try
<pre class="screen">
condor_status
</pre>
<p />
The glideinWMS will submit glideins on your behalf when you will need them.
But you may need to tell it what are your needs (but more on this later on).
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Generic_jobs"></a> Generic jobs </span></h2>
<p />
Let's start with a very generic job;<br>
a variation of the basic Condor jobs Alain introduced you to.
<p />
Let us <a href="http://www.stealthcopter.com/blog/2009/09/python-calculating-pi-using-random-numbers/" target="_top">calculate Pi using the monte carlo method</a>;<br>
create a file called <strong>pi.py</strong> containing:
<pre class="file">
#!/bin/env python
from random import *  
from math import sqrt,pi  
from sys import argv
inside=0  
n=int(argv[1])
for i in range(0,n):  
    x=random()  
    y=random()  
    if sqrt(x*x+y*y)<=1:  
        inside+=1  
pi_prime=4.0*inside/n  
print pi_prime, pi-pi_prime
</pre>
and make it executable.
<p />
Try to run it:
<pre class="screen">
./pi.py 1000000
</pre>
The first number is the approximation of pi, while the second one is how far from the real Pi it is.
<p />
Repeat a couple of times.
As you can see, the result changes every time.
<p />
Now, lets submit it as a Condor job;
or better to say, as a bunch of Condor jobs.
<p />
These jobs should run everywhere, so no need to specify any requirement:
<pre class="file">
Universe   = vanilla
Executable = pi.py
Arguments  = 10000000
Requirements = (Arch=!="")
Log        = job.$(Cluster).log
Output   = job.$(Cluster).$(Process).out
Error      = job.$(Cluster).$(Process).err
should_transfer_files   = YES
when_to_transfer_output = ON_EXIT
Queue 100
</pre>
<p />
Submit the above.
<p />
Now sit back and relax... Condor+glideinWMS will take care of everything else... 
after a few minutes we just look at the outputs and see the different results.
<p />
So run <tt>condor_q</tt> and <tt>condor_status</tt> from time to time, until the jobs are done.
<p />
What do you see?
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Understanding_where_jobs_are_run"></a> Understanding where jobs are running </span></h2>
<p />
While your jobs can run everywhere, you may still want to know where they actually ran;
either becuase you want to know who to thank for the CPUs you were consuming,
or to debug problems you had with your program (unlikely in this case... but one never knows).
<p />
So let us add a couple additional attributes to the submit file:
<pre class="file">
Universe   = vanilla
Executable = pi.py
Arguments  = 50000000
Requirements = (Arch=!="")
Log        = job.$(Cluster).log
Output   = job.$(Cluster).$(Process).out
Error      = job.$(Cluster).$(Process).err
should_transfer_files   = YES
when_to_transfer_output = ON_EXIT
+JOB_Site = "$$(GLIDEIN_Site:Unknown)"
+JOB_Gatekeeper = "$$(GLIDEIN_Gatekeeper:Unknown)"
Queue 100
</pre>
<p />
Now submit the job cluster.
<p />
Now monitor the running jobs with
<pre class="screen">
condor_q `id -un` -const 'JobStatus==2' -format '%d.' ClusterId -format '%d ' ProcId -format '%s\n' MATCH_EXP_JOB_Site
</pre>
<p />
What do you see?
<p />
For completed jobs, you can use
<pre class="screen">
condor_history JOB_ID -format '%d.' ClusterId -format '%d ' ProcId -format '%s\n' MATCH_EXP_JOB_Site
</pre>
<p />
Similarly, you can monitor where the available resources are by using:
<pre class="screen">
condor_status -format "%-40s\t" Name -format "%s\t" GLIDEIN_Site -format "%s\n" State
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="BLAST_jobs"></a> BLAST jobs </span></h2>
<p />
Let us now run a set of BLAST jobs, similarly the way you did yesterday. Prepared files can be found under /opt/workshop. Copy the directory to your home directory:
<p />
<pre class="screen">
$ cp -r /opt/workshop/glideinwms-exercises ~/
</pre>
<p />
You should now have a directory under your home directory called "glideinwms-exercises"
<p />
<pre class="screen">
$ cd ~/glideinwms-exercises/blast/
$ ls
</pre>
<p />
<p />
BLAST jobs will however not run everywhere... only a subset of Grid site have BLAST installed.
<p />
So we need to tell the glideinWMS backend we want to run only on sites with BLAST installed.
In this particular glideinWMS installation, we do this by adding this attribute (already in the blast.submit file):
<p />
<pre class="file">
+NeedBLAST=True
</pre>
<p />
Moreover, we have to tell the Negotiator that we want the jobs only to run on sites that support BLAST;
while we may not be requesting glideins on sites without BLAST, someone else might, and we do not want to run there.
<p />
The glideins in this setup will be publishing the <span class="twikiNewLink">HasBLAST<a href="/bin/edit/Education/HasBLAST?topicparent=Education.GlideinWMSExercises" rel="nofollow" title="HasBLAST (this topic does not yet exist; you can create it)">?</a></span> attribute:
<p />
<pre class="file">
Requirements=(Arch=!="") && (HasBLAST=?=True)
</pre>
<p />
Submit the jobs with condor_submit.
<p />
Note that the blast.submit and blast-wrapper are now again simple (unlike the OSGMM ones).
<p />
Did the jobs run slower or faster than the Condor-G / OSGMM jobs?
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Mixing_them_up"></a> Mixing them up </span></h2>
<p />
Let's now consider what happens when you have jobs with different requirements.
<p />
Submit a few clusters of BLAST jobs, and a few of the Pi jobs, possibly intermixing them.
<p />
In which order did the jobs run?
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="NASA_IPAC_Montage_Example"></a> NASA IPAC Montage Example </span></h2>
<p />
This is a real world workflow used to combine images from for example the Hubble telescope to a single image. The workflow takes in the inputs for a specified area, 0.5 degrees by 0.5 degrees in this case, reprojects the images, checks how they overlap, runs a background model to make the images match up, applies the background diffs, and then tiles the images together.
<p />
The workflow is generated by the <a href="http://pegasus.isi.edu" target="_top">Pegasus</a> workflow system. Input is an abstract description of the workflow, a couple of catalogs describing files and site information. Pegasus then maps the workflow to the resource and generates the DAG and all the needed submit files.
<p />
This example is using a ./submit script to wrap the Pegasus submit command. To kick of a workflow, run:
<p />
<pre class="screen">
$ cd ~/glideinwms-exercises/montage
./submit
</pre>
<p />
A timestamped work directory has been generated, and inside of that, there is another directory starting with your username. Cd in to that directory:
<p />
<pre class="screen">
$ cd 2010-12-08_003519/
$ cd rynge.2010-12-08_003519
</pre>
<p />
Let's see how many submit files we have:
<p />
<pre class="screen">
$ ls *.sub | wc -l
300
</pre>
<p />
Just like a normal DAG, you can use <strong>condor_q -dag</strong> and <strong>condor_status</strong> to monitor your jobs. You can also use <strong>pegasus-analyze</strong> from within that work directory, and it will give you some information on for example failed jobs:
<p />
<pre class="screen">
$ pegasus-analyze

************************************Summary*************************************

 Total jobs         :    299 (100.00%)
 # jobs succeeded   :      0 (0.00%)
 # jobs failed      :      0 (0.00%)
 # jobs unsubmitted :    298 (99.67%)
 # jobs unknown     :      1 (0.33%)

*****************************Unknown jobs' details******************************

=======================create_dir_montage_0_GridUNESP_SP========================

 last state: SUBMIT
       site: GridUNESP_SP
submit file: /home/rynge/exercises-tests/glideinwms-exercises/montage/2010-12-08_003840/rynge.2010-12-08_003840/create_dir_montage_0_GridUNESP_SP.sub
output file: /home/rynge/exercises-tests/glideinwms-exercises/montage/2010-12-08_003840/rynge.2010-12-08_003840/create_dir_montage_0_GridUNESP_SP.out
 error file: /home/rynge/exercises-tests/glideinwms-exercises/montage/2010-12-08_003840/rynge.2010-12-08_003840/create_dir_montage_0_GridUNESP_SP.err

---------------------create_dir_montage_0_GridUNESP_SP.out----------------------


---------------------create_dir_montage_0_GridUNESP_SP.err----------------------


**************************************Done**************************************

</pre>
<p />
<p />
Unknown in this case is a good thing. It just means that Pegasus does not know much about the job yet as it hasn't started.
<p />
Take a look at the <strong>montage-0.dag</strong>. 
<p />
Once the workflow is done, you should have a couple of FITS files and a JPG in the directory one level up.
<p />
<pre class="screen">
$ cd ../
$ ls -lh *.jpg *.fits
</pre>
<p />
Open the JPG in an image viewer and take a look at the result!
<p />
-- <a href="/bin/view/Main/MatsRynge" class="twikiLink">MatsRynge</a> - 03 Dec 2010</div><!-- /patternTopic-->
<p />
<p />
</div><!-- /patternContent-->
<hr />
This topic: Education<span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span><a href="/bin/view/Education/GridWorkshops" class="twikiLink">GridWorkshops</a> &gt; <a href="/bin/view/Education/Brazil2011" class="twikiLink">Brazil2011</a><span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span>GlideinWMSExercises</span> <br />    
Topic revision: r3 - 08 Dec 2010 - 02:46:05 - X509_2fDC_3dorg_2fDC_3ddoegrids_2fOU_3dPeople_2fCN_3dMats_20Rynge_20274484
</div><!-- /patternMainContents-->
</div><!-- /patternMain-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>
<p />