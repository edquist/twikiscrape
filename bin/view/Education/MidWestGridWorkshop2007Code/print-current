<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> MidWestGridWorkshop2007Code &lt; Education &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/Education/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/Education/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/Education/MidWestGridWorkshop2007Code?_T=16 Feb 2017" type="application/x-wiki" title="edit MidWestGridWorkshop2007Code" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/Education/WebRss" />    
<base href="https://twiki.opensciencegrid.org/bin/view/Education/MidWestGridWorkshop2007Code"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">


</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#D0D0D0;
	}
	.patternBookView {
		border-color:#D0D0D0;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">

@import url('/pub/Documentation/Tools/exercises.css ');

</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>
<body class="patternViewPage patternPrintPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="patternTopic"> <h1><a name="Code_preparation"></a> Code preparation </h1>
<p />
<div class="twikiToc"><span class="twikiTocTitle">Outline:</span> <ul>
<li> <a href="?cover=print#Code_preparation"> Code preparation</a> <ul>
<li> <a href="?cover=print#Use_framework_template_script_to"> Use framework template script to prepare EDAnalyzer skeleton</a>
</li> <li> <a href="?cover=print#Include_root_libraries_into_Buil"> Include root libraries into BuildFile (CMS makefile)</a>
</li> <li> <a href="?cover=print#Add_analysis_code_and_output_ROO"> Add analysis code and output ROOT file for histograms to skeleton:</a>
</li> <li> <a href="?cover=print#Prepare_parameter_set_to_run_EDA"> Prepare parameter-set to run EDAnalyzer:</a>
</li></ul> 
</li></ul> 
</div> 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Use_framework_template_script_to"></a> Use framework template script to prepare EDAnalyzer skeleton </span></h2>
From your <code>CMSSW_1_2_0/src/Demo</code> directory:
<pre style="background-color: lightblue;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
mkedanlzr -track MyTrackAnalyzer
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Include_root_libraries_into_Buil"></a> Include root libraries into <strong>BuildFile</strong> <em>(CMS makefile)</em> </span></h2>
The BuildFile is in <code>Demo/MyTrackAnalyzer/</code>.  Edit it as follows, adding the text in red as shown. Do not overwrite anything.
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
&#60;use name&#61;FWCore/Framework&#62;
&#60;use name&#61;Foundation/PluginManager&#62;
&#60;use name&#61;FWCore/ParameterSet&#62;
&#60;flags SEAL&#95;PLUGIN&#95;NAME&#61;&#34;DemoMyTrackAnalyzer&#34;&#62;
&#60;use name&#61;DataFormats/TrackReco&#62;
</pre>
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
&#60;use name&#61;root&#62;
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
&#60;export&#62;
   &#60;lib name&#61;DemoMyTrackAnalyzer&#62;
   &#60;use name&#61;FWCore/Framework&#62;
   &#60;use name&#61;Foundation/PluginManager&#62;
   &#60;use name&#61;FWCore/ParameterSet&#62;
   &#60;use name&#61;DataFormats/TrackReco&#62;
</pre>
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
   &#60;use name&#61;root&#62;
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
&#60;/export&#62;
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Add_analysis_code_and_output_ROO"></a> Add analysis code and output ROOT file for histograms to skeleton: </span></h2>
Edit the <code>Demo/MyTrackAnalyzer/src/MyTrackAnalyzer.cc</code> file.
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
// -&#42;- C++ -&#42;-
//
// Package:    MyTrackAnalyzer
// Class:      MyTrackAnalyzer
// 
/&#42;&#42;\class MyTrackAnalyzer MyTrackAnalyzer.cc Demo/MyTrackAnalyzer/src/MyTrackAnalyzer.cc

 Description: &#60;one line class summary&#62;

 Implementation:
     &#60;Notes on implementation&#62;
&#42;/
//
// Original Author:  Oliver Gutsche
//         Created:  Mon Jan 15 10:28:42 CST 2007
// $Id: MidWestGridWorkshop2007Code.txt,v 1.1 2007/03/24 22:32:17 OliverGutsche Exp $
//
//


// system include files
#include &#60;memory&#62;

// user include files
#include &#34;FWCore/Framework/interface/Frameworkfwd.h&#34;
#include &#34;FWCore/Framework/interface/EDAnalyzer.h&#34;

#include &#34;FWCore/Framework/interface/Event.h&#34;
#include &#34;FWCore/Framework/interface/MakerMacros.h&#34;

#include &#34;FWCore/ParameterSet/interface/ParameterSet.h&#34;
#include &#34;FWCore/ParameterSet/interface/InputTag.h&#34;
#include &#34;DataFormats/TrackReco/interface/Track.h&#34;

</pre>
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
#include &#34;TH1D.h&#34;
#include &#34;TFile.h&#34;
#include &#34;TLorentzVector.h&#34;
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">

//
// class decleration
//

class MyTrackAnalyzer : public edm::EDAnalyzer {
   public:
      explicit MyTrackAnalyzer(const edm::ParameterSet&#38;);
      ~MyTrackAnalyzer();

   private:
      virtual void beginJob(const edm::EventSetup&#38;) ;
      virtual void analyze(const edm::Event&#38;, const edm::EventSetup&#38;);
      virtual void endJob() ;

      // ----------member data ---------------------------
      edm::InputTag trackTags&#95;; //used to select what tracks to read from configuration file
</pre>
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
      TH1D &#42;pt&#95;;
      TH1D &#42;mmumu&#95;;
      TH1D &#42;mzz&#95;;
      TFile &#42;file&#95;;
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
};

//
// constants, enums and typedefs
//

//
// static data member definitions
//

//
// constructors and destructor
//
MyTrackAnalyzer::MyTrackAnalyzer(const edm::ParameterSet&#38; iConfig)
:
 trackTags&#95;(iConfig.getUntrackedParameter&#60;edm::InputTag&#62;(&#34;tracks&#34;))
{
   //now do what ever initialization is needed
</pre>
(Note the <code>histograms.root</code> file definition below; you'll use this in your CRAB config file.)
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
   file&#95; &#61; new TFile(&#34;histograms.root&#34;,&#34;RECREATE&#34;);

   pt&#95; &#61; new TH1D(&#34;pt&#34;,&#34;Track p&#95;{T}&#34;,250,0.,250.);
   pt&#95;-&#62;Sumw2();
   pt&#95;-&#62;SetXTitle(&#34;p&#95;{T} &#91;GeV]&#34;);
   pt&#95;-&#62;SetYTitle(&#34;Events&#34;);

  mmumu&#95; &#61; new TH1D(&#34;mmumu&#34;,&#34;m&#95;{#mu#mu}&#34;,250,0.,250.);
  mmumu&#95;-&#62;Sumw2();
  mmumu&#95;-&#62;SetXTitle(&#34;m&#95;{#mu#mu} &#91;GeV]&#34;);
  mmumu&#95;-&#62;SetYTitle(&#34;Events&#34;);

  mzz&#95; &#61; new TH1D(&#34;mzz&#34;,&#34;m&#95;{ZZ}&#34;,250,0.,250.);
  mzz&#95;-&#62;Sumw2();
  mzz&#95;-&#62;SetXTitle(&#34;m&#95;{ZZ} &#91;GeV]&#34;);
  mzz&#95;-&#62;SetYTitle(&#34;Events&#34;);
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">

}


MyTrackAnalyzer::~MyTrackAnalyzer()
{
 
   // do anything here that needs to be done at desctruction time
   // (e.g. close files, deallocate resources etc.)

</pre>
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
  file&#95;-&#62;Write();
  file&#95;-&#62;Close();
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">

}


//
// member functions
//

// ------------ method called to for each event  ------------
void
MyTrackAnalyzer::analyze(const edm::Event&#38; iEvent, const edm::EventSetup&#38; iSetup)
{
   using namespace edm;
   using reco::TrackCollection;
  
   Handle&#60;TrackCollection&#62; tracks;
   iEvent.getByLabel(trackTags&#95;,tracks);
   for(TrackCollection::const&#95;iterator itTrack &#61; tracks-&#62;begin();
       itTrack !&#61; tracks-&#62;end();
       ++itTrack) {
</pre>
(You may have a line in the original file to overwrite here: int charge ...)
<pre style="background-color: red;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
     pt&#95;-&#62;Fill(itTrack-&#62;pt());
     std::vector&#60;TLorentzVector&#62; mumus;
     TLorentzVector track1(itTrack-&#62;px(),itTrack-&#62;py(),itTrack-&#62;pz(),std::sqrt(itTrack-&#62;p()&#42;itTrack-&#62;p()+0.10566&#42;0.10566));
     for(TrackCollection::const&#95;iterator itTrack2 &#61; tracks-&#62;begin();
         itTrack2 !&#61; tracks-&#62;end();
         ++itTrack2) {
       if ( itTrack-&#62;charge() !&#61; itTrack2-&#62;charge() ) {
         TLorentzVector track2(itTrack2-&#62;px(),itTrack2-&#62;py(),itTrack2-&#62;pz(),std::sqrt(itTrack2-&#62;p()&#42;itTrack2-&#62;p()+0.10566&#42;0.10566));
         TLorentzVector mumu &#61; track1 + track2;

         mmumu&#95;-&#62;Fill(mumu.M());
         mumus.push&#95;back(mumu);

       }
     }

     if ( mumus.size() &#62; 1 ) {
       for ( std::vector&#60;TLorentzVector&#62;::iterator mumu1 &#61; mumus.begin();
             mumu1 !&#61; mumus.end();
             ++mumu1) {
         if ( mumu1-&#62;M() &#62; 80. &#38;&#38; mumu1-&#62;M() &#60; 100.0 ) {
           for ( std::vector&#60;TLorentzVector&#62;::iterator mumu2 &#61; mumu1+1;
                 mumu2 !&#61; mumus.end();
                 ++mumu2) {
             if ( mumu2-&#62;M() &#62; 80. &#38;&#38; mumu2-&#62;M() &#60; 100.0 ) {
               TLorentzVector zz &#61; &#42;mumu1 + &#42;mumu2;
               mzz&#95;-&#62;Fill(zz.M());
             }
           }
         }
       }
     }
</pre>
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
  }
}


// ------------ method called once each job just before starting event loop  ------------
void 
MyTrackAnalyzer::beginJob(const edm::EventSetup&#38;)
{
}

// ------------ method called once each job just after ending the event loop  ------------
void 
MyTrackAnalyzer::endJob() {
}

//define this as a plug-in
DEFINE&#95;FWK&#95;MODULE(MyTrackAnalyzer);
</pre>
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Prepare_parameter_set_to_run_EDA"></a> Prepare parameter-set to run EDAnalyzer: </span></h2>
A parameter set in CMSSW is a configuration file.  In the <code>Demo/MyTrackAnalyzer/test</code> directory, create a file <code>demotest.cfg</code>, and give it the following contents:
<pre style="background-color: lightgrey;  text-align: left;padding: 10px;margin-left: 20px;margin-right: 20px;color: black;">
process A &#61; {

  source &#61; PoolSource {
        untracked vstring fileNames &#61; {
                &#34;file:test.root&#34;
        }
        untracked int32 maxEvents &#61; -1
        untracked uint32 skipEvents &#61; 0
  }

  module higgs &#61; MyTrackAnalyzer {
        untracked InputTag tracks &#61; ctfWithMaterialTracks
  }

  path p &#61; {
        higgs
  }

}
</pre>
<p />
<p />
<p />
-- <a href="/bin/view/Main/AnneHeavey" class="twikiLink">AnneHeavey</a> - 24 May 2007 (from Oliver Gutsche)</div><!-- /patternTopic-->
<p />
<p />
</div><!-- /patternContent-->
<hr />
This topic: Education<span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span><a href="/bin/view/Education/CmsHiggsDemo" class="twikiLink">CmsHiggsDemo</a><span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span>MidWestGridWorkshop2007Code</span> <br />    
Topic revision: r1 - 24 May 2007 - 20:16:35 - <a href="/bin/view/Main/AnneHeavey" class="twikiLink">AnneHeavey</a>
</div><!-- /patternMainContents-->
</div><!-- /patternMain-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>
<p />