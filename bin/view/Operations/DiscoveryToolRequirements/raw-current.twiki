---++ Software version discovery tool

---++ Overview 
The state of OSG resources includes the status, capabilities and configuration of those resources. As resources update software on independent schedules based on local preferences, version entropy ensues. 
This document describes requirements for a tool to discover the configuration of the resources and get a realtime snapshot of the current state of OSG resources.

---++++ Status
The health status of resources is reported to a central collector and packaged for display [[http://myosg.grid.iu.edu/rgstatushistory/index?datasource=statushistory&amp;downtime_attrs_showpast=&amp;account_type=cumulative_hours&amp;ce_account_type=gip_vo&amp;se_account_type=vo_transfer_volume&amp;start_type=7daysago&amp;end_type=now&amp;facility=on&amp;facility_10009=on&amp;gridtype=on&amp;gridtype_1=on&amp;service_1=on&amp;service_5=on&amp;service_central_value=0&amp;service_hidden_value=0&amp;active=on&amp;active_value=1&amp;disable_value=1][here]].

---++++ Capabilities
Capabilities of resources can be obtained from several sources, for example [[http://myosg.grid.iu.edu/rgbdii/index?facility=on&amp;facility_10009=on&amp;gridtype=on&amp;gridtype_1=on&amp;summary_attrs_showservice=on&amp;summary_attrs_showrsvstatus=on&amp;summary_attrs_showfqdn=on&amp;gip_status_attrs_showfqdn=on&amp;gip_status_attrs_showtestresults=on&amp;datasource=bdii&amp;bdii_server=is-osg&amp;bdii_object=cluster][here]].

---++++ Configuration
The configuration of a resource includes
[[https://myosg.grid.iu.edu/rgsummary/index?summary_attrs_showgipstatus=on&amp;summary_attrs_showwlcg=on&amp;summary_attrs_showservice=on&amp;summary_attrs_showrsvstatus=on&amp;summary_attrs_showfqdn=on&amp;summary_attrs_showvomembership=on&amp;summary_attrs_showcontact=on&amp;gip_status_attrs_showtestresults=on&amp;downtime_attrs_showpast=&amp;account_type=cumulative_hours&amp;ce_account_type=gip_vo&amp;se_account_type=vo_transfer_volume&amp;bdiitree_type=total_jobs&amp;bdii_object=service&amp;bdii_server=is-osg&amp;start_type=7daysago&amp;start_date=10%2F03%2F2013&amp;end_type=now&amp;end_date=10%2F03%2F2013&amp;facility=on&amp;facility_10009=on&amp;gridtype=on&amp;gridtype_1=on&amp;service_1=on&amp;service_5=on&amp;service_2=on&amp;service_3=on&amp;active=on&amp;active_value=1&amp;disable_value=1][which VOs]]
are served by that resource,
[[https://myosg.grid.iu.edu/rgsummary/index?summary_attrs_showgipstatus=on&amp;summary_attrs_showwlcg=on&amp;summary_attrs_showservice=on&amp;summary_attrs_showrsvstatus=on&amp;summary_attrs_showfqdn=on&amp;summary_attrs_showvomembership=on&amp;summary_attrs_showcontact=on&amp;gip_status_attrs_showtestresults=on&amp;downtime_attrs_showpast=&amp;account_type=cumulative_hours&amp;ce_account_type=gip_vo&amp;se_account_type=vo_transfer_volume&amp;bdiitree_type=total_jobs&amp;bdii_object=service&amp;bdii_server=is-osg&amp;start_type=7daysago&amp;start_date=10%2F03%2F2013&amp;end_type=now&amp;end_date=10%2F03%2F2013&amp;facility=on&amp;facility_10009=on&amp;gridtype=on&amp;gridtype_1=on&amp;service_1=on&amp;service_5=on&amp;service_2=on&amp;service_3=on&amp;active=on&amp;active_value=1&amp;disable_value=1][the services]]
it provides and the existence and version of any software installed on that resource.

Currently several tools partially address the need to determine the version of installed software. An internal GOC tool, currently unnamed and unsupported, produces [[http://soichi6.grid.iu.edu/home/osg/crawl][XML]] containing some version information. A similarly supported UC tool produces a [[http://www.mwt2.org/~marco/myosgldr.php][table]] containing OSG and VDT version numbers. The !BDII information browser provides [[http://is.grid.iu.edu/data/cemon_raw_incoming/ce.hep.fsu.edu][version information]] for some installed software components but this service is likely to be deprecated in the future. Other sources of version information exist, for example, the !CVMFS client version can be determined from the access logs on stratum 1 servers.

---+++ Requirements
A need exists for a tool to discover the existence and version of installed software. This tool should:
   * Automatically determine resources providing specific services
   * Be configurable and flexible enough to determine the existence and version of a particular software package for resources providing a particular service. Packages currently of interest include (but are not limited to):
      * !OSG software stack
      * !VDT version
      * !CVMFS client version
      * Java 
   * Have a light weight execution framework for use by multiple OSG Areas (Software, Operations, Security). 
   * Produce human and machine readable output summarizing the results.
   * Create a minimal footprint on OSG resources. 

-- Main.ScottTeige - 23 Oct 2013

