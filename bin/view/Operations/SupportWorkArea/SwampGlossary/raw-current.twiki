---+ Glossary of SWAMP Terms

| Version | Author | Notes |
| 0.1 | Alain Deximo | Draft |

---++ Introduction and Goal

SWAMP (Software Assurance Marketplace) aids open source software developers and software assurance tool developers in the creation of more secure cyberinfrastructure by offering the capacity needed to continuously test and “rebuild” the code underlying critical infrastructure applications.  The goal here is to provide a reference for commonly used words within SWAMP. 

---++ Description

This reference will provide a brief explanations on some of the most commonly used words within SWAMP.


   $ *API:*: Application programming interface that specifies how external software (such as IDEs) should interact with the SWAMP.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Trash/Trash/Trash/Assessment Run (A-Run):]]*: Specifies one Tool to assess one Software Package on one operating system Platform.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Trash/Trash/Trash/Assessment Tool:]]*: An Trash/Trash/Trash/Assessment Tool analyzes a Software Package to find weaknesses that could lead to security vulnerabilities. One person owns an Trash/Trash/Trash/Assessment Tool.

   $ *[[https://continuousassurance.org/about-us/the-team/ ATeam:]]*: Individuals involved in the SWAMP project that specifically deal with software architecture. 

   $ *Build Run (B-Run):*: Not yet added to functionality, but will allow users to test a build with their software package before running an assessment.

   $ *[[http://codedx.com/ CodeDx:]]*: A 3rd party integrated results viewer that is capable of processing and displaying multi assessment tool assessment results.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Execution Record:]]*: Displays statistics about the scheduled Trash/Trash/Trash/Assessment Run.

   $ *IDE:*: Integrated development environment provides the facilities for software development (source code editor, build and debugging support).
   
   $ *[[https://continuousassurance.org/tool-selection/ IOC:]]*: Initial Operating Capability

   $ *Interactive Virtual Machine (IVM):*: A software-based emulation of a computer that provides end-user interactive capabilities in the SWAMP environment.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Native Viewer:]]*: A SWAMP developed basic viewer that displays assessment results.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Owner:]]*: A User that has requested ownership privileges and has been vetted by a SWAMP Administrator, who owns a Project and/or Software Package, (Future Option: Trash/Trash/Trash/Assessment Tool).

   $ *[[https://continuousassurance.org/platform-selection/ Platform:]]*: The operating system environment in which an Trash/Trash/Trash/Assessment Run occurs. 

   $ *Plugin:*: A software component that adds specific functionality to an existing software application.  For example, Eclipse API plugin – provides functionality to Eclipse so that it can interact with the SWAMP using the API capabilities.

   $ *[[https://continuousassurance.org/software-developers/ Project:]]*: A person or group of people working together for a common purpose, for example to create better assessment tools, and/or to mitigate weaknesses in Software Packages.

   $ *[[https://continuousassurance.org/swamp/SWAMP-User-Manual.pdf Project Member:]]*: A person who has accepted an invitation to join a SWAMP project. Project Members are able to create Trash/Trash/Trash/Assessment Runs, schedule Run Request, and view Trash/Trash/Trash/Assessment Results.

   $ *Run Request:*: A request to execute one or more Trash/Trash/Trash/Assessment Runs as soon as possible after the requested time. Project Members can schedule Run Requests to occur daily, weekly, or monthly. Members can schedule Run Requests that are a combination of daily, weekly, or monthly times. 

   $ *[[https://continuousassurance.org/package-selection/ Software Package:]]*: A software component or system used by others.

   $ *Swampcats:*: Individuals involved in the SWAMP project that specifically deal with infrastructure.

   $ *SwimTeam:*: Individuals involved in the SWAMP project that specifically deal with software development, integration, and testing.




-- Main.AlainDeximo - 04 Jun 2014
