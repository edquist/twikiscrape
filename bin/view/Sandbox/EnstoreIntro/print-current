<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US" lang="en_US">
<head>
<link rel="stylesheet" href="https://twiki.opensciencegrid.org/twiki/pub/TWiki/HeadlinesPlugin/style.css" type="text/css" media="all" />
<title> EnstoreIntro &lt; Sandbox &lt; TWiki    </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="icon" href="/twiki/pub/Sandbox/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="shortcut icon" href="/twiki/pub/Sandbox/WebPreferences/favicon.ico    " type="image/x-icon" />
<link rel="alternate" href="https://twiki.opensciencegrid.org/bin/edit/Sandbox/EnstoreIntro?_T=16 Feb 2017" type="application/x-wiki" title="edit EnstoreIntro" />
<meta name="SCRIPTURLPATH" content="/bin" />
<meta name="SCRIPTSUFFIX" content="" />
<meta name="TEXT_JUMP" content="Jump" />
<meta name="TEXT_SEARCH" content="Search" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" /><meta name="robots" content="noindex,nofollow"> 
<base href="https://twiki.opensciencegrid.org/bin/view/Sandbox/EnstoreIntro"></base>
<!--BEHAVIOURCONTRIB--><script type="text/javascript" src="/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiWindow.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiEvent.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiHTML.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiForm.js"></script>
<script type="text/javascript" src="/twiki/pub/TWiki/PatternSkin/pattern.js"></script><style type="text/css" media="all">
@import url('/twiki/pub/TWiki/TWikiTemplates/base.css');
</style><script type="text/javascript" src="/twiki/pub/TWiki/TWikiJavascripts/twikiStyles.js"></script><style type="text/css" media="all">


</style>
<style type="text/css" media="all">
@import url("/twiki/pub/TWiki/TWikiNetSkin/layout.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/style.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/colors.css");
@import url("/twiki/pub/TWiki/TWikiNetSkin/rounded_corners.css");
</style>
<style type="text/css" media="all">
	/* Styles that are set using variables */
	#patternLeftBar .patternWebIndicator,
	.patternBookView .twikiTopRow {
		background-color:#DDDDDD;
	}
	.patternBookView {
		border-color:#DDDDDD;
	}
	.patternPreviewPage #patternMain {
		/* uncomment to set the preview image */
		/*background-image:url("/twiki/pub/TWiki/PreviewBackground/preview2bg.gif    ");*/
	}
	
</style><style type="text/css" media="all">



</style>
<style type="text/css" media="all">
	@import url("/twiki/pub/TWiki/TWikiNetSkin/print.css");
</style><!--TWISTYPLUGIN_TWISTY--><style type="text/css" media="all">
@import url("https://twiki.opensciencegrid.org/twiki/pub/TWiki/TwistyContrib/twist.css");
</style>
<script type='text/javascript' src='https://twiki.opensciencegrid.org/twiki/pub/TWiki/BehaviourContrib/behaviour.compressed.js'></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikilib.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikiPref.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiJavascripts/twikiCSS.js"></script>
<script type="text/javascript" src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TwistyContrib/twist.compressed.js"></script>
<script type="text/javascript">
// <![CDATA[
var styleText = '<style type="text/css" media="all">.twikiMakeVisible{display:inline;}.twikiMakeVisibleInline{display:inline;}.twikiMakeVisibleBlock{display:block;}.twikiMakeHidden{display:none;}</style>';
document.write(styleText);
// ]]>
</script>

<!--GOOGLEANALYTICSPLUGIN--><!-- Google Analytics script -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-69012-21']);
  _gaq.push(['_setDomainName', 'none']);
  _gaq.push(['_setAllowLinker', true]);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

<!--TABLEPLUGIN_twikiAttachmentsTable--><style type="text/css" media="all">
.tableSortIcon img {padding-left:.3em; vertical-align:text-bottom;}
.twikiTable#twikiAttachmentsTable td {border-style:solid none;}
.twikiTable#twikiAttachmentsTable th {border-style:solid none;}
.twikiTable#twikiAttachmentsTable td {vertical-align:middle;}
.twikiTable#twikiAttachmentsTable th {vertical-align:middle;}
.twikiTable#twikiAttachmentsTable td {vertical-align:top;}
.twikiTable#twikiAttachmentsTable th {background-color:#eceef2;}
.twikiTable#twikiAttachmentsTable th.twikiSortedCol {background-color:#e0e3e9;}
.twikiTable#twikiAttachmentsTable tr.twikiTableRowdataBg0 td {background-color:#ffffff;}
.twikiTable#twikiAttachmentsTable tr.twikiTableRowdataBg0 td.twikiSortedCol {background-color:#f2f3f6;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol0 {text-align:center;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol1 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol2 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol3 {text-align:right;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol4 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol5 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol6 {text-align:left;}
.twikiTable#twikiAttachmentsTable td.twikiTableCol7 {text-align:center;}
</style></head>
<body class="patternViewPage patternPrintPage">
<a name="PageTop"></a>
<div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="patternTopic"> <h1><a name="Introduction_to_the_Mass_Storage"></a> Introduction to the Mass Storage System </h1>
<p />
<form name="EDITTHIS" action="/bin/edit/Sandbox/EnstoreIntro" method="get"><input type="submit" value="Edit section" alt="Edit this section" title="Click to edit this section" class="twikiButton" style="font-size:.5em;"><input type="hidden" value="1487268881" name="t"></form>
<p />
The mass storage system at Fermilab has three major components:  <ol>
<li> <em>Enstore</em>, the principal mass storage component; Enstore provides access to data on tape or other storage media both local to a user&#8217;s machine and over networks. 
</li> <li> A <em>namespace implemented by PNFS</em> which presents the storage media library contents as though the data files existed in a hierarchical UNIX file system. 
</li> <li> <em>dCache</em>, a data file caching system; dCache is implemented as a front-end to Enstore. 
</li></ol> 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="About_Enstore"></a> About Enstore </span></h2>
Enstore is the mass storage system implemented at Fermilab as the primary data store for large data sets. Its design was inspired by the mass storage architecture at DESY, and it originates from discussions with the DESY designers. Enstore is designed to provide high fault tolerance and availability sufficient for the <span class="twikiNewLink">RunII<a href="/bin/edit/Sandbox/RunII?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="RunII (this topic does not yet exist; you can create it)">?</a></span> data acquisition needs, as well as easy administration and monitoring. It uses a client-server architecture which provides a generic interface for users and allows for hardware and software components that can be replaced and/or expanded. 
<p />
Enstore has two major kinds of software components: 
<p /> <ol>
<li> Enstore servers, which are software modules that have specific functions, e.g., maintain database of data files, maintain database of storage volumes, maintain configuration, look for error conditions and sound alarms, communicate user requests down the chain to the tape robots, and so on. See Chapter 8: Overview of the Enstore Servers. 
</li> <li> encp, a program for copying files directly to and from the mass storage system. <a href="/bin/view/Sandbox/EnstoreIntro#CopyingFilesWithEncp" class="twikiCurrentTopicLink twikiAnchorLink">Copying Files with Encp</a>. Enstore can be used directly only from on-site machines. Off-site users are restricted to accessing Enstore via dCache, and in fact on-site users are encouraged to go through dCache as well. 
</li></ol> 
<p />
Enstore supports both automated and manual storage media libraries. It allows for a larger number of storage volumes than slots. It also allows for simultaneous access to multiple volumes through automated media libraries. There is no preset upper limit to the size of a data file in the enstore system; the actual size is limited by the physical resources. The lower limit on the file size is zero. The upper limit on the number of files that can be stored on a single volume is about 5000. 
<p />
Enstore allows users to search and list contents of media volumes as easily as they search native file systems. The stored files appear to the user as though they exist in a mounted UNIX directory. The mounted directory is actually a distributed virtual file system in PNFS namespace containing metadata for each stored file. Enstore eliminates the need to know volume names or other details about the actual file storage. 
<p />
Users typically access Enstore via the dCache caching system. The protocols supported by dCache include dccp, gridftp (globus-url-copy), kerberized ftp and weakly-authenticated ftp (these are described in Chapter 5: Using the dCache to Copy Files to/from Enstore). On-site users may bypass dCache and use the encp program, the Enstore copy command roughly modeled on UNIX&#8217;s cp, to copy files directly to and from storage media. 
<p />
There are several installed Enstore systems at Fermilab. Currently these include CDFEN for CDF RunII, <span class="twikiNewLink">D0EN<a href="/bin/edit/Sandbox/D0EN?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="D0EN (this topic does not yet exist; you can create it)">?</a></span> for D0 RunII, and STKEN for all other Fermilab users. <a href="http://hppc.fnal.gov/enstore/" target="_top">Web-based monitoring for the Enstore systems</a> is available. Currently, all storage libraries are tape libraries. The Computing Division operates and maintains the tape robots, slots, and other tape equipment, but for the present, experiments provide and manage their own volumes. 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="About_the_PNFS_Namespace"></a> About the PNFS Namespace </span></h2>
PNFS is a virtual file system package that implements the Enstore namespace. It was written at DESY. PNFS is mounted like NFS, but it is a virtual file system only. It maintains file grouping and structure information via a set of tags in each directory. The encp program communicates this information between PNFS and the Enstore servers when it uploads or downloads a data file. 
<p /> <ul>
<li> <img width="16" alt="info" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/info.gif" height="16" border="0" /> <strong><font color="#008000">NOTE:</font></strong> There are some exceptions; arrangements for PNFS mounting have been made for some experiments whose systems are managed by the Computing Division, e.g., soudan.org for Minos. 
</li></ul> 
<p />
PNFS can only be mounted on machines that are physically at the lab1. When a user copies a data file from disk to the Enstore system, he or she specifies its destination in terms of a PNFS directory. The data file gets copied to a storage volume (selected according to the tags of the specified PNFS directory) and a corresponding metadata entry is created in the PNFS directory. This entry takes the name given in the encp command line or in the protocol-specific dCache command. It contains metadata about the data file, including information about the file transfer, the data storage volume on which the data file resides, the file&#8217;s location on the volume, and so on. 
<p />
To browse file entries in the Enstore system, on-site users can mount their experiment&#8217;s PNFS storage area on their own computers, and interact with it using standard non-I/O UNIX operating system utilities (see section 4.1 UNIX Commands You can Use in PNFS Space). Normal UNIX permissions and administered export points are used for preventing unauthorized access to the name space. 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="About_dCache"></a> About dCache </span></h2>
The dCache was originally designed as a front-end for a set of Hierarchical Storage Managers (HSMs), namely Enstore, <span class="twikiNewLink">EuroGate<a href="/bin/edit/Sandbox/EuroGate?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="EuroGate (this topic does not yet exist; you can create it)">?</a></span> and DESY&#8217;s OSM. (It has since been further developed and can be implemented stand-alone. We do not address the stand-alone functionality in this manual.) When used as a front-end to an HSM, dCache can be viewed as an intermediate &#8220;relay station&#8221; between client applications and the HSM (Enstore, in our case). Client systems communicate with dCache via any of a number of protocols, listed in 1.3.3 Protocols for Communicating with dCache. DCache communicates with Enstore (in a manner transparent to the user) via a high-speed ethernet connection. The dCache decouples the potentially slow network transfer (to and from client machines) from the fast storage media I/O in order to keep Enstore from bogging down. 
<p />
Data files uploaded to the dCache from a user&#8217;s machine are stored on highly reliable RAID disks pending transfer to Enstore. Files already written to storage media that get downloaded to the dCache from Enstore are stored on ordinary disks. 
<p />
The dCache is installed at Fermilab on a server machine on which the /pnfs root area is mounted. Since PNFS namespace can only be mounted on machines in the fnal.gov domain, off-site users may only access Enstore via the dCache. On-site users are strongly encouraged to go through the dCache as well. We discuss dCache in more depth in Chapter 5: Using the dCache to Copy Files to/from Enstore. 
<p />
<a href="http://www-dcache.desy.de" target="_top">More general information about dCache.</a> 
<p />
<p />
<h3><a name="Advantages"></a> Advantages </h3>
The principal advantages of using the dCache are: 
<p /> <ul>
<li> Optimized usage of existing tape drives due to transfer rate adaption. 
</li> <li> Possible usage of slower and cheaper drive technology without overall performance reduction. 
</li> <li> Optimized usage of the robot systems by coordinated read and write requests. 
</li> <li> Better usage of network bandwidth by exploring the best location for the data. 
</li> <li> No explicit staging required to access the data. 
</li> <li> Ability to do posix-like IO reads and writes to data files instead of transferring entire files. 
</li> <li> Working ROOT interfaces. 
</li> <li> Tapeless data methods, raw data to reconstruction to analysis to users. 
</li> <li> Written to tape as 'by-product'; no tape delays. 
</li> <li> Pnfs does not have to be mounted for access to the data. 
</li> <li> Same access to storage system, on and off site. Strong authentication, both gss and gsi to the data. Native and ftp access to the data. 
</li> <li> The access methods for data would be uniform, independent of data&#8217;s media location. 
</li> <li> Even without the back-end HSM (e.g., Enstore), the dCache system could be seen as a huge data store with a unique namespace and standardized access methods. Care will be taken that valuable data resides on safe disks as long as no HSM copy exists. Back-end storage to the HSM can be done regularly (policy based) or by manual intervention only. 
</li> <li> A joint DESY-FNAL effort makes the use of manpower more efficient and guarantees continued support and maintenance of the developed software. 
</li></ul> 
<p />
<h3><a name="Protocols_for_Communicating_with"></a> Protocols for Communicating with dCache </h3>
Whenever an application needs to talk to the dCache, it has to choose an appropriate door into the system. There are a number of different dCache doors through which users/applications can send requests to Enstore. Doors are protocol converters from the dCache point of view, and they are responsible for strong authentication, as necessary. One door may be for Kerberized ftp read/write access, another for dcap (dCache native C API), gridftp, weakly authenticated ftp read-only access, and so on. Each experiment determines which door(s) its experimenters may use, and communicates this information to the Enstore administrators who manage the doors&#8217; configurations. Most doors are for native transfers, and are local. See Chapter 5: Using the dCache to Copy Files to/from Enstore for more information. 
<p />
<h1><a name="Overview_of_the_Enstore_Servers"></a> Overview of the Enstore Servers </h1>
<p />
In this chapter we describe the software modules that act as Enstore servers and the libraries with which they interact. The servers include: 
<p /> <ul>
<li> File Clerk (FC) 
</li> <li> Volume Clerk (VC) 
</li> <li> Library Manager (LM) 
</li> <li> Mover (MV) 
</li> <li> Media Changer (MC) 
</li> <li> Configuration Server (CS) 
</li></ul> 
<p />
All of the above-listed servers must be running in order for data reads and writes to succeed. 
<p />
The Enstore monitoring framework includes:
<p /> <ul>
<li> Inquisitor 
</li> <li> Alarm Server (AS) 
</li> <li> Log Server (LS) 
</li> <li> Event Relay (ER) 
</li> <li> Monitor Server 
</li> <li> Accounting Server 
</li> <li> Drivestat Server 
</li> <li> Information Server 
</li></ul> 
<p />
Typically, data transfer can still take place even if any of these monitoring systems is down. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="File_Clerk"></a> File Clerk </span></h2>
The File Clerk (FC) is a server that tracks files in the system. It manages a database of metadata for each data file in the Enstore system. The metadata includes the file&#8217;s name, its unique identifier (the bit file ID, or bfid, that the 
<p />
FC itself assigns to each new file ), the volume on which it resides, and so on. You can get information on specific files using the enstore info command; see section 9.1 enstore info. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Volume_Clerk"></a> Volume Clerk </span></h2>
The Volume Clerk (VC) is a server that stores and administers storage volume (tape) information. You can get information on specific volumes using the enstore info command; see section 9.1 enstore info.
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Library_Manager"></a> Library Manager </span></h2>
A Library in Enstore is comprised of both the physical media and a robot arm used to mount the media in attached drives. An Enstore library is typically called a robot. A library/robot interfaces to software that controls the robot arm (the Media Changer, see section 8.5). Each library can contain a variety of media types and employ different types of media drives.
<p />
A Virtual Library (VL) is a subset of an Enstore library. It can contain one and only one type of media. A Library Manager (LM) is a server which is bound to a single Virtual Library (VL), and controls what happens within that VL. We speak of bound &#8220;LM-VL pairs&#8221;. An LM receives requests for file reads and writes from the user, stores these unassigned requests in a queue, prioritizes them, and dispatches the requests to a Mover for actual data transfer to and from its VL. 
<p />
There may be many LM-VL pairs in an Enstore system. There may be more than one LM-VL pair for each media type, but not vice-versa. For example, given an STK Powderhorn library holding 20, 60 and 200 GB media, Enstore would need to divide it into at least three LM-VL pairs. 
<p />
You can get information on specific library managers using the enstore library command; see section 9.2 enstore library. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Mover"></a> Mover </span></h2>
A Mover (MV) is a process responsible for efficient data transfer between the encp process and a single, assigned media drive in a library (robot). The Mover receives instructions from a Library Manager (LM) on how to satisfy the users&#8217; requests. The Mover sends instructions to the Media Changer (MC) (described in section 9.5) that services the Mover's assigned drive in order to get the proper volume mounted. 
<p />
A mover can be configured to serve multiple LMs. Allowing flexible LM assignment has two benefits: 
<p /> <ul>
<li> First, since a virtual library (an LM-VL pair) handles only one type of media, a drive which can handle multiple types of media (e.g., different capacity media) can be shared by multiple LM-VL pairs without a static partitioning of the system. 
</li> <li> Secondly, suppose user groups A and B want to share the capacity of a VL, in which half the tapes belong to group A and the other half to group B. You want to guarantee that groups A and B each get one third of the tape drives, and that the last third is shared. To do this, your administrator can configure the Movers to partition resources in the VL, and assign an LM to each type of use. 
</li></ul> 
<p /> <dl>
<dt> <img width="16" alt="tip" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/tip.gif" height="16" border="0" /> <strong><font color="#008000">NOTE</font></strong> </dt><dd> The media types governed by the LMs must be supported by the Mover&#8217;s assigned drive. 
</dd></dl> 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Media_Changer"></a> Media Changer </span></h2>
The Media Changer (MC) mounts and dismounts the media into and out of drives according to requests from the Movers. One MC can serve multiple drives and thus multiple VLs (the image in section 8.4 Mover shows an MC associated with only one drive). When the drives are in the robot, the MC is the interface to the robotic software. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Configuration_Server"></a> Configuration Server </span></h2>
The Configuration Server (CS) maintains and distributes the information about Enstore system configuration, such as the location and parameters of each Enstore component and/or server. At startup, each server asks the CS for the information it needs (e.g., the location of any other server with which it must communicate). New configurations can be loaded into the CS without disturbing the current running system. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Inquisitor"></a> Inquisitor </span></h2>
The Inquisitor monitors the Enstore servers, obtains information from them, and creates reports at regular intervals that can be viewed on the web under <a href="http://hppc.fnal.gov/enstore/" target="_top">http://hppc.fnal.gov/enstore/</a>. See section 8.10 Event Relay for an illustration of an Inquisitor task. The reports created by the Inquisitor include Enstore Server Status (section 10.4), Encp History (section 10.10), Enstore Configuration (section 10.11), and Enstore Log Files (section 10.13). 
<p />
If the Inquisitor goes down, the System-At-A-Glance web page (described in section 10.3) indicates this by a red ball next to Inquisitor. In this case, data can still be transferred via encp, however, the information on the reports mentioned above doesn&#8217;t continue to update! 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Alarm_Server"></a> Alarm Server </span></h2>
The Alarm Server (AS) maintains a record of alarms raised by other servers, and creates a report available online and described in section 10.12 Enstore Active Alarms. Since Enstore attempts error recovery whenever possible, it is expected that raised alarms will need human intervention to correct the problem. The AS compares each newly raised alarm with the previously raised ones (it raises a counter) in order to prevent raising the same alarm more than once. Alarm output can be configured to be sent in email messages, to a web page, and so on for notification. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Log_Server"></a> Log Server </span></h2>
The Log Server (LS) receives messages from other processes and logs them into formatted log files available online and described in section 10.13 Enstore Log Files. These messages are transactional records. Log files are labeled by date. Every night at midnight, the currently opened log file gets closed and another one is opened. Logs are backed up to tape. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Event_Relay"></a> Event Relay </span></h2>
The Event Relay (ER) is a server that forwards messages based on subscription. All the Enstore servers send messages to the ER. Any server may &#8220;subscribe&#8221; to the ER in order to have messages of particular types forwarded to it. 
<p />
For example, the ER periodically receives &#8220;I&#8217;m alive&#8221; messages (called heartbeats) from the other servers in the system. The Inquisitor (section 8.7) subscribes to the heartbeat messages, so the ER forwards these messages to it. This is illustrated in the image below: 
<p />
If the ER goes down (indicated by a red ball next to Event Relay on the System-At-A-Glance web page described in section 10.3), the information on <span class="twikiNewLink">EnstoreServerStatus<a href="/bin/edit/Sandbox/EnstoreServerStatus?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="EnstoreServerStatus (this topic does not yet exist; you can create it)">?</a></span> and the other web pages described in <span class="twikiNewLink">Monitoring Enstore on the Web<a href="/bin/edit/Sandbox/EnstoreMonitoringEnstoreOnTheWeb?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="Monitoring Enstore on the Web (this topic does not yet exist; you can create it)">?</a></span> may not be accurate. 
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Monitor_Server"></a> Monitor Server </span></h2>
The Monitor Server (MS) is available for investigating network-related problems. It attempts to mimic the communication between encp, the corresponding library manager, and the mover. To initiate a test of this kind, you must use the enstore monitor command, see section 9.3 enstore monitor. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Accounting_Server"></a> Accounting Server </span></h2>
The accounting server is a front-end to a Postgres SQL database, and at this time is not intended for use by end users. It maintains statistical information on a running system. Such information is not essential to operations, however it can be used by admins to analyze the performance and utilization of the system for purposes of troubleshooting and future planning. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Drivestat_Server"></a> Drivestat Server </span></h2>
Drivestat server maintains statistical information of the drives. This is used to update the &#8220;ingest rate&#8221; plots. As with the accounting server, such information is not essential to operations, however it can be used to analyze the performance and utilization of the system for purposes of troubleshooting and future planning. 
<p />
<p />
<h2 class="twikinetRoundedAttachments"><span class="twikinetHeader"><a name="Info_Server"></a> Info Server </span></h2>
The Information Server is a read-only server that maintains detailed file and volume information. You can access this information for particular files and volumes using the enstore info command and its various options (see section 9.1 enstore info). 
<p />
<p />
<p />
<p />
%BOTTOMMATTER%</div><!-- /patternTopic-->
<p />
<p />
<div class="twikinetRounded twikinetRoundedAttachments"><div class="rCRounded"><div class="rCTR"><div class="rCTL"></div><!--/rCTL--><div class="twikiAttachments">
<div class="twistyPlugin twikiMakeVisibleInline">  <span id="topicattachmentslistshow" class="twistyRememberSetting twistyTrigger twikiUnvisited twistyHidden twistyInited"><a href="#"><img src="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen.gif" border="0" alt="" /><span class="twikiLinkLabel twikiUnvisited">Attachments</span></a> </span> <span id="topicattachmentslisthide" class="twistyRememberSetting twistyTrigger twikiUnvisited twistyHidden twistyInited"><a href="#"><img src="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose.gif" border="0" alt="" /><span class="twikiLinkLabel twikiUnvisited">Attachments</span></a> </span>  </div><!--/twistyPlugin twikiMakeVisibleInline--> <div class="twistyPlugin"><div id="topicattachmentslisttoggle" class="twistyRememberSetting twistyContent twikiMakeHidden twistyInited">
<table cellspacing="0" cellpadding="0" border="0" class="twikinetWrapperTable" rules="none">
<tr class="twikinetWrapperTableRow">
<td class="twikinetWrapperTableT twikinetWrapperTableTL"></td>
<td class="twikinetWrapperTableT twikinetWrapperTableTR"></td>
</tr>
<tr class="twikinetWrapperTableRow">
<td colspan="2" class="twikinetWrapperTableMain">
<table summary="Topic attachments" cellspacing="0" id="twikiAttachmentsTable" cellpadding="0" class="twikiTable" rules="rows" border="1"><caption>Topic attachments</caption>
		<tr class="twikiTableOdd twikiTableRowdataBgSorted0 twikiTableRowdataBg0">
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol0 twikiFirstCol"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=0;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">I</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol1"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=1;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Attachment</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol2"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=2;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Action</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol3"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=3;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Size</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol4"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=4;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Date</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol5"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=5;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Who</font></a> </th>
			<th bgcolor="#eceef2" valign="middle" class="twikiTableCol6 twikiLastCol"> <a rel="nofollow" href="/bin/view/Sandbox/EnstoreIntro?cover=print;sortcol=6;table=1;up=0#sorted_table" title="Sort by this column"><font color="#252b37">Comment</font></a> </th>
		</tr>
		<tr class="twikiTableEven twikiTableRowdataBgSorted0 twikiTableRowdataBg0">
			<td bgcolor="#ffffff" align="center" valign="top" class="twikiTableCol0 twikiFirstCol twikiLast"> <img width="16" alt="gif" align="top" src="/twiki/pub/TWiki/TWikiDocGraphics/gif.gif" height="16" border="0" /><span class="twikiHidden">gif</span> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol1 twikiLast"> <a href="/twiki/pub/Sandbox/EnstoreIntro/heartbeat.gif">heartbeat.gif</a> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol2 twikiLast"> <a href="/bin/attach/Sandbox/EnstoreIntro?filename=heartbeat.gif;revInfo=1" title="change, update, previous revisions, move, delete..." rel="nofollow">manage</a> </td>
			<td bgcolor="#ffffff" align="right" valign="top" class="twikiTableCol3 twikiLast"> 3.8&nbsp;K </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol4 twikiLast"> <span class="twikiNoBreak">26 Sep 2006 - 21:35</span> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol5 twikiLast"> <a href="/bin/view/Main/UnknownUser" class="twikiLink">UnknownUser</a> </td>
			<td bgcolor="#ffffff" align="left" valign="top" class="twikiTableCol6 twikiLastCol twikiLast"> Event Relay heartbeats </td>
		</tr></table>
</td>
</tr>
<tr class="twikinetWrapperTableRow">
<td class="twikinetWrapperTableB twikinetWrapperTableBL"></td>
<td class="twikinetWrapperTableB twikinetWrapperTableBR"></td>
</tr>
</table>
</div></div> <!--/twistyPlugin--></div><!--//twikiAttachments--></div><!--/rCTR--><div class="rCBR"><div class="rCBL"></div><!--/rCBL--></div><!--/rCBR--></div><!--/rCRounded--></div><!--/twikinetRounded--></div><!-- /patternContent-->
<hr />
This topic: Sandbox<span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span><a href="/bin/view/Main/TWikiUsers" class="twikiLink">TWikiUsers</a> &gt; <a href="/bin/view/Main/ForrestChristian" class="twikiLink">ForrestChristian</a> &gt; <a href="/bin/view/Sandbox/ForrestChristianSandbox" class="twikiLink">ForrestChristianSandbox</a><span class='twikiSeparator'>&nbsp;&gt;&nbsp;</span>EnstoreIntro</span> <br />    
Topic revision: r6 - 06 Feb 2007 - 21:12:17 - <span class="twikiNewLink">ForrestChristian<a href="/bin/edit/Sandbox/ForrestChristian?topicparent=Sandbox.EnstoreIntro" rel="nofollow" title="ForrestChristian (this topic does not yet exist; you can create it)">?</a></span>
</div><!-- /patternMainContents-->
</div><!-- /patternMain-->
</div><!-- /patternFloatWrap-->
<div class="clear">&nbsp;</div>
</div><!-- /patternOuter--><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="twikinetBadge"><a href="http://www.twiki.net/"><img src="https://twiki.opensciencegrid.org/twiki/pub/TWiki/TWikiNetSkin/twiki-badge-88x31.gif" alt="TWIKI.NET" width="88" height="31" border="0" /></a></div><!--/twikinetBadge--><div id="patternWebBottomBar"><p>
<font size="-1">
TWiki |
<a href="https://ticket.grid.iu.edu/goc/twiki">Report Bugs</a> |
<a href="https://twiki.grid.iu.edu/bin/view/Operations/IUPrivacyPolicy">Privacy Policy</a>
</p>
<p>
<font size="-2">
<span class="twikiRight"> <a href="http://twiki.org/"><img src="/twiki/pub/TWiki/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a></span>Copyright by the contributing authors. All material on this collaboration platform is the property of the contributing authors..
</font>
</p></div><!--/patternWebBottomBar--></div><!-- /patternBottomBarContents--></div><!-- /patternBottomBar-->
</div><!-- /patternPage-->
</div><!-- /patternPageShadow-->
</div><!-- /patternScreen-->
</body></html>
<p />