---+!! Glossary R
%DOC_STATUS_TABLE%

This topic holds the terms beginning with &quot;R&quot; and is included in the GlossaryOfTerms topic.

%STARTINCLUDE%
%INCLUDE{ &quot;GlossaryJumpIndex&quot; }%
%EDITTHIS%

   $ RB (Resource Broker): Grid middleware component that brokers the running of Grid jobs (making use of information services to obtain grid status information about available resources) and schedules jobs.

   $ RBAC (Role-Based Access Control): An infrastructure which provides a framework for role-based access to resources and services.

   $ Release: An OSG Release refers to a set of software that is, or is expected to be, tested and available for download and installation.  It contains a documented set of capabilities.  Releases are sequentially numbered with a r.n.p format (e.g. 1.2.15) where r is the release, n is changed for major releases with significant change, and p is the point release number.  Major releases occur infrequently (~yearly), while point releases are more frequent (~months).  _For more information, see_ [[Documentation.DocReleaseProcess][Trash.ReleaseDocumentationDocReleaseProcess]] and ReleaseDocumentation.WebHome.

   $ Replica catalog: Provides mappings between logical names for files and one or more copies of the files on physical storage systems.

#DefsResource
   $ Resource: A resource is any physical or virtual entity of limited availability. In the OSG, all resources are represented by a unique DNS endpoint.  The entity is available through the grid for use by researchers, typically a machine providing CPU cycles or storage capacity.

#DefsResourceGroup
   $ Resource Group: A named collection of resources for administrative purposes.

#DefsResourceOwner
   $ Resource Owner: An organization that has permanent specific control, rights and responsibilities for a Resource associated with ownership.

#DefsRess
   $ !ReSS (Resource Selection Service):  !ReSS is a component of the OSG Job Management Infrastructure that facilitates automated job/resource management components by publishing information about the OSG resource information in the Glue Schema format so grid users can easily access this published information and use it in their automated job management system. 

   $ RLI (Replica Location Interface): A Grid middleware component used to distribute RLS information.

   $ RLS (Replica Location Service): A Grid middleware component provides information about location of data sets within the data grid. &lt;!--EDG and Globus (with EDG) have both developed implementations of RLS. Grid3 uses the Globus-EDG implementation--&gt;

   $ RP (Resource Provider): A facility offering resources (e.g., CPU, network, storage) to other parties (e.g., VOs) according to a specific Memorandum of Understanding (MOU). 

#DefsRpm
   $ RPM (Red Hat Package Manager): A software package manager, developed by Red Hat, to manage, distribute, and update software as new versions are developed.  RPMs are used by OSG in Release 3.0.
&lt;!--
   $ reliable file transfer: a service layer sitting on top of [[GlossaryOfTerms#DefsGridFtp][GridFTP]] that will retry file transfers.
   $ replacement policy&lt;a name=&quot;DefsReplacementPolicy&quot;&gt;: how an [[GlossaryOfTerms#DefsSrm][SRM]] should dynamically decide which file to replace when space is needed. Similar to disk caching algorithms but much more complex.
   $ replica catalog&lt;a name=&quot;DefsReplicaCatalog&quot;&gt;&lt;/a&gt;: Stores information on locations of replicated files. Maps logical file to multiple site-specific files (described by machine, port, path and filename). _Also called_ local replica catalog (LRC).
   $ replica location service (RLS)&lt;a name=&quot;DefsReplicaLocationService&quot;&gt;&lt;/a&gt;: _Also_ Globus RLS. Grid service that maps logical filenames to physical filenames and consists of two components the [[GlossaryOfTerms#DefsReplicaCatalog][local replica catalog (LRC)]] and the [[GlossaryOfTerms#DefsReplicationLocationIndex][replica location index (RLI)]].
   $ Replica Manager Module (RMM)&lt;a name=&quot;DefsReplicaManagerModule&quot;&gt;&lt;/a&gt;: _Also_ File Replica Manager Module. (dCache) Enforces the existence of both a minimum and maximum file copies within the system.
   $ Replica Registration Service (RRS)&lt;a name=&quot;#DefsReplicaRegistrationService&quot;&gt;&lt;/a&gt;: component that registers data in a [[GlossaryOfTerms#DefsReplicaCatalog][Replica Catalog]].
   $ replication&lt;a name=&quot;DefsReplication&quot;&gt;&lt;/a&gt;: used for managing copies of file instances, or replicas, within specified storage systems. _[[ #HUB04][ref]]_
   $ request&lt;a name=&quot;DefsRequest&quot;&gt;&lt;/a&gt;: (Enstore) After a user submits a job to encp, encp sends a request to Enstore to process the job. _See also:_ job. 
   $ Request Executor&lt;a name=&quot;DefsRequestExecutor&quot;&gt;&lt;/a&gt;:   Process that executes the [[GlossaryOfTerms#DefsRequestPlanner][Request Planner]]&#39;s plan. The Condor Project&#39;s DAGMAN is an example of a request executor.  
   $ Request Interpreter&lt;a name=&quot;DefsRequestInterpreter&quot;&gt;&lt;/a&gt;:  
   $ Request Manager&lt;a name=&quot;DefsRequestManager&quot;&gt;&lt;/a&gt;: Performs request planning based on some strategy and executes that plan. 
   $ Request Planner&lt;a name=&quot;DefsRequestPlanner&quot;&gt;&lt;/a&gt;:  component that determines the best way to run a job by consulting metadata catalogs, [[GlossaryOfTerms#DefsReplicaCatalog][file replica catalogs]], monitoring information (e.g., [[GlossaryOfTerms#DefsNetworkWeaterService][Network Weather Service]], etc. [[#Ssg03][(SSG03)]]
   $ resource layer&lt;a href=&quot;#DefsResourceLayer&quot;&gt;&lt;/a&gt;: third of five layers to support grid applications. Includes components and protocols for managing resources, e.g. [[GlossaryOfTerms#DefsStorageResourceManager][SRM]]
   $ resubmit&lt;a name=&quot;DefsResubmit&quot;&gt;&lt;/a&gt;: (encp) To make a request again if it has been waiting for a mover for over 15 minutes, but not due to an error condition. _See also:_ [[GlossaryOfTerms#DefsRetry][retry]]. 
   $ retry&lt;a name=&quot;DefsRetry&quot;&gt;&lt;/a&gt;: (encp) To will resend a request after an error occurs. _See also:_ [[GlossaryOfTerms#DefsResumbit][resubmit]]. 
   $ RRS&lt;a name=&quot;#DefsRss&quot;&gt;&lt;/a&gt;: _See_ [[GlossaryOfTerms#DefsReplicaRegistrationService][Replica Registration Service]].
--&gt;

#DefsRsv
   $ !RSV (Resource and Service Validation) service: provides a scalable and easy to maintain resource/service monitoring infrastructure for an OSG site admin. 

%COMMENT{type=&quot;tableappend&quot;}%
%STOPINCLUDE%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesWeichel

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = General

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = Student

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = IgorSfiligoi
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
--&gt;

Main.JamesWeichel - 15 Feb 2011

