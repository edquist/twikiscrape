%DOC_STATUS_TABLE%

---+!! Overview of !GridFTP in the Open Science Grid

%TOC%
-------------------------------------

!GridFTP is an extension to well known file transfer protocol (FTP). [[http://www.globus.org/toolkit/data/gridftp][Globus Alliance describes !GridFTP]] as a high-performance, secure, reliable data transfer protocol optimized for high-bandwidth wide-area networks. It is based upon the Internet FTP protocol, and it implements extensions for high-performance operation that were either already specified in the FTP specification but not commonly implemented or that were proposed as extensions by our team. The current !GridFTP protocol specification is now a &#39;proposed recommendation&#39; document in the Global Grid Forum (GFD-R-P.020).


!GridFTP extends the FTP standard with:
   * Strong authentication, encryption via Globus GSI on both control (command) and data channels
   * Multiple data channels for parallel transfers
   * Third-party transfers: C can initiate a transfer from A to B.
   * Partial file transfers
   * Reusable data channels
   * Tunable network &amp; I/O parameters
   * Server side processing
   * Command pipelining

!GridFTP is the _protocol_. A server or client that implements the !GridFTP protocol is _GridFTP-enabled_ or _Grid-enabled_. Although you will hear about &quot;GridFTP servers&quot;, the correct term is &quot;GridFTP-enabled servers&quot;. Groups other than Globus can release !GridFTP-enabled clients &amp; servers (e.g., [[http://dims.ncsa.uiuc.edu/set/uberftp/index.html][UberFTP]], which is included with the OSG release, see also [[https://twiki.grid.iu.edu/bin/view/Documentation/StorageUberFtp][uberFTP how to]]).


&lt;a name=&quot;SampleGridFTP&quot;&gt;&lt;/a&gt;
---++ Simple File Transfer through !GridFTP
In a basic file transfer, we would move a source file from Site A to Site B, perhaps so that we could do some operation on it on Site B&#39;s computers.


&lt;div style=&quot;text-align: center;&quot;&gt; [[%ATTACHURLPATH%/SimpleFileTransfer.png][&lt;img src=&quot;%ATTACHURLPATH%/SimpleFileTransfer.png&quot; alt=&quot;Simple file transfer&quot; style=&quot;width: 50%; height:50%; align: center;&quot; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/SimpleFileTransfer.png][Figure 1: Simple file transfer]]* &lt;/div&gt;


!GridFTP works slightly differently than simple FTP. In Figure 2, Site A, which holds archived data we want to use, runs a !GridFTP-enabled server. Site B, where we want to run our job, runs a !GridFTP-enabled client. We will want to move the file from Site A to Site B.


&lt;div style=&quot;text-align: center;&quot;&gt; [[%ATTACHURLPATH%/GridFTP_Simple.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_Simple.png&quot; alt=&quot;Basic GridFTP Transfer&quot; style=&quot;width: 50%; height:50%; align: center;&quot; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_Simple.png][Figure 2: Basic !GridFTP transfer]]* &lt;/div&gt;


The _data channel_ is the communication link(s) over which the data of interest (in this case, the file we wish to move) flows from one place to another. This high-bandwidth link is authenticated by default, with the option of providing encryption and integrity protection.

The control channel is a low-bandwidth TCP link over which commands and responses flow, and is encrypted and integrity-protected by default. 


---++ Direction of Control
In !GridFTP, control can go either way, depending upon which site is initiating the transfer. Control channel can go either way. Site A can initiate the transfer to Site B, or Site B can initiate the transfer to Site A. The direction of control depends on which is acting as the !GridFTP-enabled client and which the !GridFTP-enabled server. Figure 3 shows how the control 


&lt;div style=&quot;text-align: center&#39;&quot;&gt; [[%ATTACHURLPATH%/GridFTP_ControlChannel.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_ControlChannel.png&quot; alt=&quot;GridFTP showing control channel&quot; style=&quot;width: 50%; height:50%; align: center;&quot; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_ControlChannel.png][Figure 3: !GridFTP transfer showing control channels]]* &lt;/div&gt;


Even though Site A initiates the transfer, meaning that Site B is acting as the &quot;server&quot;, the data channel is still in the same direction as in Figure 2. 


---++ Third party transfer
!GridFTP also allows for the Controller to be at a separate location from both the source and destination locations. This _third-party transfer_ lets a researcher at a remote site initiate a data transfer from Site A to Site B, where he has access to computing facilities.


&lt;div style=&quot;text-align: center&#39;&quot;&gt;[[%ATTACHURLPATH%/GridFTP_3rdPartyTransfer.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_3rdPartyTransfer.png&quot; alt=&quot;GridFTP third-party transfer&quot; style=&quot;width: 50%; height:50%; align: center;&quot; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_3rdPartyTransfer.png][Figure 4: !GridFTP third-party transfer]]* &lt;/div&gt;




---++ Speeding Up !GridFTP
There are several ways to increase !GridFTP transfer speeds. However, speeds are always affected by factors that you can&#39;t control, such as the _network weather_.


---+++ Parallel Streams
Where supported by the installations, !GridFTP supports using _parallel streams_ to transfer data. Instead of a single data channel, it uses several at once, as limited by the installation and its connections.


&lt;div style=&quot;text-align: center&#39;&quot;&gt;[[%ATTACHURLPATH%/GridFTP_ParallelStreams.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_ParallelStreams.png&quot; alt=&quot;GridFTP using parallel streams&quot; style=&quot;width: 50%; height:50%; align: center;&quot; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_ParallelStreams.png][Figure 5: !GridFTP transfer using parallel streams]]* &lt;/div&gt;


---+++ Striped Transfers
!GridFTP also supports _striped transfers_ of data, where both the source and destination use multiple servers all with separate !GridFTP data channels. 


&lt;div style=&quot;text-align: center&#39;&quot;&gt;[[%ATTACHURLPATH%/GridFTP_StripedTransfer.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_StripedTransfer.png&quot; alt=&quot;GridFTP striped transfers&quot; style=&quot;width: 50%; height:50%; align: center;&quot;&#39; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_StripedTransfer.png][Figure 6: !GridFTP striped transfer]]* &lt;/div&gt;

%BR%

&lt;div style=&quot;text-align: center&#39;&quot;&gt;[[%ATTACHURLPATH%/GridFTP_StripedTransfer2.png][&lt;img src=&quot;%ATTACHURLPATH%/GridFTP_StripedTransfer2.png&quot; alt=&quot;striped transfers&quot;  tyle=&quot;width: 50%; height:50%; align: center;&quot;&#39; /&gt;]] %BR%%BR% *[[%ATTACHURLPATH%/GridFTP_StripedTransfer2.png][Figure 7: Striped transfer diagram]]* &lt;/div&gt;


Of course, for truly speedy transfers, use parallel streams with striped transfers.

---+++ Use large TCP windows
&lt;pre class=&quot;screen&quot;&gt;
$ &lt;userinput&gt;globus-url-copy -vb -p 4 -tcp-bs 1048576  / gsiftp://ldas-cit.ligo.caltech.edu:15000/usr1/grid/largefile file:/tmp/largefile&lt;/userinput&gt;
    514392064 bytes      6609.67 KB/sec avg      8639.71 KB/sec inst
&lt;/pre&gt;

---+++ Use large memory buffers
&lt;pre class=&quot;screen&quot;&gt;
$ &lt;userinput&gt;globus-url-copy -vb -p 4 -bs 1048576 -tcp-bs 1048576 gsiftp://ldas-cit.ligo.caltech.edu:15000/usr1/grid/largefile file:/tmp/largefile&lt;/userinput&gt;
    523304960 bytes      7300.56 KB/sec avg      9311.99 KB/sec inst
&lt;/pre&gt;

---++ Debugging
Use =&amp;#8211;dbg= to see control channel communication.

---++ Hints for Experts
To make !GridFTP go really fast
   * Use fast disks and filesystems: your filesystem should read &amp; write &gt;30 MB/s
   * [[http://www-didc.lbl.gov/TCP-tuning/][Configure TCP for performance]]
   * Patch your Linux kernel with the [[http://www.web100.org][web100 patch]], as this has an important work-around for Linux 
   * Understand your network path


--------

_Based on &quot;[[SummerGridWorkshop.SummerGridSyllabus2006#Lecture_4_Tuesday_AM_Grid_data_m][Lecture 4: Grid Data Management]]&quot; (July 2005: OSG Summer School) by Ben Clifford (UChi) from work by Bill Allcock (ANL), Jaime Frey (UWisc) &amp; Scott Koranda (UWMilw)_


-- Main.ForrestChristian - 17 Nov 2006 %BR%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DouglasStrain

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge

  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TanyaLevshina
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %NO%
############################################################################################################
--&gt;

