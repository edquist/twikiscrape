%DOC_STATUS_TABLE%

---+ Info Services Probe
%TOC%

---+ About this Document
This document is about a RSV probe. 
You need a host with RSV installed according to [[InstallRSV]]. The same document instructs on [[InstallRSV#Configuration][how to configure RSV]] and [[InstallRSV#Troubleshooting][&lt;b&gt;how to troubleshoot framework errors&lt;/b&gt;]].


---+ How to get Help?
To get assistance please use [[HelpProcedure][Help Procedure]].
_Please add here additional support channels available for the probe (email, chat, IM, ...) if any_

%INCLUDE{&quot;RsvControl&quot; section=&quot;RsvProfilerNT&quot;}%


---+ Description

The information services probe checks the functionality of the following components:
   * *GIP*: This software lives on your CE and probes the CE&#39;s installed software.  It then generates a text description of the CE and site using a language called &quot;GLUE&quot;.
   * *CEMon*: This software runs as a daemon on your CE and periodically invokes the GIP.  The results are uploaded directly to the GOC and transformed version (into Condor ClassAd) is uploaded to !FermiGrid.  This runs inside a Tomcat application server.
   * *End-to-end BDII data*: The GOC feeds your GIP information into an LDAP server called the &quot;BDII&quot;.  This server, currently =is.grid.iu.edu=, can be queried with normal LDAP clients.  The data in the BDII about your site should be no more than 15 minutes old.
The information services in the OSG is somewhat complex software as it must work on over 80 sites, each with slightly different configurations.  Do not be afraid to get help, either through filing a [[https://ticket.grid.iu.edu/goc/open][trouble ticket]] for your site or contacting the GIP support email address at osg-gip at opensciencegrid dot org.  We&#39;re here to help.


| *Metric* | *Test description* |
| | |

---+ Manual invocation
This probe can be invoked manually.
_It requires in the PYTHONPATH or in the current directory =rsvprobe.py=, providing the base class in Python for RSV Probes, and optionally =timed_command.py=._

It accepts the following additional options:
| *Option* | *Description* |
| | |

To invoke manually: &lt;pre class=&quot;screen&quot;&gt;
_my-probe -m metric -h host_
&lt;/pre&gt;


_To find further info you can check http://myurl_


---+ Provided metrics
The remainder of this page is dedicated to explaining the failure modes of the info services probe, and how you might try to resolve them.

---++ Metric org.osg.gip.consistency
The config.ini on your CE contains some of the same information - resource name, resource group name, storage element name(s) - that is registered centrally in OIM/MyOSG.  The two sources are not automatically synced - we don&#39;t want a central outage affecting your site - so this probe is designed to help alert you if the two don&#39;t match.

Here are the errors you might see:
   * *CRITICAL*:
      * !MyOSG does not have an active, enabled resource group or resource for your hostname
      * The !MyOSG resource name or resource group name for your hostname does not match the corresponding config.ini entry.
      * The !MyOSG resource name for your storage element does not match the name in your [SE] section in your config.ini.
   * *UNKNOWN*: config.ini cannot be parsed (is it world-readable?) or !MyOSG cannot be contacted.  If it&#39;s the latter, it might be a GOC central outage - in this case, you can ignore it.  An UNKNOWN status does not negatively affect your CE&#39;s status.

We strive to have good error messages from this metric; please suggest improvements to the GIP team.

---++ Metric org.osg.gip.lastrun
Each major component of your site (batch system, site description, storage system) has a special plugin in the GIP software.  Each can run - and fail - independently.  This probe is designed to make sure that all of the plugins in your site are running successfully.

There are currently no known cases where a plugin is expected to fail; you should be able to get the entire software to run successfully (but perhaps with help from the GIP team)!

Failure modes of this metric:
   * *UNKNOWN*: This can happen if the probe cannot be submitted to your CE through GRAM, or if the !RSV user cannot list the directory =$VDT_LOCATION/gip/var/tmp=, =$VDT_LOCATION/gip/plugins=, or =$VDT_LOCATION/gip/providers=.  All directories under =$VDT_LOCATION/gip= should be world readable - check the permissions.
   * *WARNING*: This can happen if one of the outputs in =$VDT_LOCATION/gip/var/tmp= is more than 10 minutes old or is not present for one of the plugins.  Verify that CEMon is running; try restarting it and waiting 5-10 minutes.  In addition, try runnign =gip_info= as root and look for warnings or errors in the output.
   * *CRITICAL*: This happens if one of the outputs in =$VDT_LOCATION/gip/var/tmp= is more than 20 minutes old.  The debugging for this error is the same as for WARNING.

---++ Metric org.osg.gip.freshness
All of the data generated by the GIP is periodically (every 5 minutes) uploaded by the CEMon daemon to the GOC.  From there, it is added to an LDAP server called the &quot;BDII&quot;.  A timestamp is added to this data; it is a sign of an infrastructure error if the GIP data is old.

The central BDII has a SLA for 99% availability; a central outage is rare, but not out of the question.  The known failure modes of this probe are:

   * *UNKNOWN*: The central BDII is down or the ldapsearch client is not installed on the CE.  Check your email for downtime announcements, and make sure the openldap-clients RPM is on your CE.
   * *WARNING*: Your GIP data is more than 20 minutes old in the BDII.  Try restarting your CEMon instance; look for errors in the CEMon logs:
      * =$VDT_LOCATION/glite/var/log/glite-ce-monitor.log=
      * =$VDT_LOCATION/tomcat/v55/logs/catalina.out=
   * *CRITICAL*: Your GIP data is more than 30 minutes old in the BDII.  Try the same debugging steps as for *WARNING*.


---+ References
RSV documents
   * A [[RsvOverview][Introduction to RSV]]
   * The [[RsvArchitecture][RSV architecture]]
   * InstallRSV
   * RsvControl

---+ Comments
%COMMENT{type=&quot;tableappend&quot;}%


&lt;!-- CONTENT MANAGEMENT PROJECT

   * Local OWNER = _YourNameHere_

   * Local DOC_AREA       = Monitoring
   * Local DOC_ROLE       = SysAdmin
   * Local DOC_TYPE       = Troubleshooting

   * Local INCLUDE_REVIEW = %YES%
   * Local INCLUDE_TEST   = %YES%

   * Local REVIEW_READY   = %NO%
   * Local TEST_READY     = %NO%
   * Local RELEASE_READY  = %NO%


   * Local REVIEWER       = FirstLast
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%

   * Local TESTER         = FirstLast
   * Local TEST_PASSED    = %IN_PROGRESS%
--&gt;
