%DOC_STATUS_TABLE%
---+!! Install Gratia Web
%TOC{depth=&quot;3&quot;}%

&lt;!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{&quot;INPUT_HOST&quot; encode=&quot;quote&quot; default=&quot;gratiaweb&quot;}%
   * Local UCL_USER = %URLPARAM{&quot;INPUT_USER&quot; encode=&quot;quote&quot; default=&quot;user&quot;}%
   * Local UCL_DOMAIN = %URLPARAM{&quot;INPUT_DOMAIN&quot; encode=&quot;quote&quot; default=&quot;opensciencegrid.org&quot;}%
   * Set TWISTY_OPTS_DETAILED = mode=&quot;div&quot; showlink=&quot;Show Detailed Output&quot; hidelink=&quot;Hide&quot; showimgleft=&quot;/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif&quot; hideimgleft=&quot;/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif&quot; remember=&quot;on&quot; start=&quot;hide&quot; 
--&gt;

---# About this Document
Here we describe how to install and configure the Gratia-Web server. Gratia Web is a web server that displays the accounting information collected in the Gratia Databases. An OSG instance of Gratia Web is available [[http://gratiaweb.grid.iu.edu/gratia/][here]].


---# Requirements
---## Host and OS
   * A host to install the Gratia Web server.
   * OS is %SUPPORTED_OS%. Currently most of our testing has been done on Scientific Linux 6.
   * Root access.
   * Read access to a Gratia database (!MySQL)

---## Networking
%STARTSECTION{&quot;Firewalls&quot;}%
%INCLUDE{&quot;Documentation/Release3.FirewallInformation&quot; section=&quot;FirewallTable&quot;}% \
| HTTP |  tcp  |  8100 |  %ICON{choice-yes}%  | | Default http port for the Gratia Web server |
%ENDSECTION{&quot;Firewalls&quot;}%

---# Installation Procedure

---## Install the Repositories

%INCLUDE{&quot;YumRepositories&quot; section=&quot;OSGRepoBrief&quot; TOC_SHIFT=&quot;++&quot;}%

%NOTE% If you are working on RHEL-5 you will need to install also the [[http://wiki.centos.org/AdditionalResources/Repositories/RPMForge#head-5aabf02717d5b6b12d47edbc5811404998926a1b][rpmforge]] repository to include a newer version of python-cherrypy that is required.

---## Install the Gratia Web package (osg-measurements-metrics-web)
As root install the package osg-measurements-metrics-web enabling the osg-development repo.

&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% yum install osg-measurements-metrics-web --enablerepo=osg-development
&lt;/pre&gt;

---## Configure the database connection to be used by Gratia Web

Copy the =DBParam.xml.rpmnew= file that contains an skeleton of the database connection configuration for !GratiaWeb: &lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% cp /etc/DBParam.xml.rpmnew /etc/DBParam.xml
&lt;/pre&gt;

Edit =/etc/DBParam.xml= updating the user/password fields with a user with read access to the database.


---# Services 
Gratia Web works with one web server and a cron job that generate static graphics for the home page of the web server.
The default location of the static graphs crontab is =/etc/cron.d/GratiaStaticGraphs.cron=

---## Starting and Enabling Services
To start the Gratia Web web server execute as root the following command:
&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% service GratiaWeb start
&lt;/pre&gt;

---## Stopping and Disabling Services
To stop the Gratia Web web server execute as root the following command:
&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% service GratiaWeb stop
&lt;/pre&gt;


---# Validation of Service Operation 

On a browser visit the following URLs (replacing %RED%host%ENDCOLOR% with =localhost= or the hostname of your server):
   * =http://%RED%host%ENDCOLOR%:8100/gratia=
   * =http://%RED%host%ENDCOLOR%:8100/gratia/xml=
   * =http://%RED%host%ENDCOLOR%:8100/gratia/xml/facility_transfer_volume=


---# Advanced Topic - Adding queries to !GratiaWeb (OPTIONAL)
Check the following documentation about queries in !GratiaWeb:
[[Accounting.GratiaWebAddQuery][Adding/Modifying Queries to !GratiaWeb ]]

---# Troubleshooting

---## Useful Configuration and Log Files

| *Service/Process* | *Configuration File* | *Description* |
| gratia_web | /etc/DBParam.xml | Configuration for the database connection parameters. |


| *Service/Process* | *Log File* | *Description* |
| gratia_web  | /var/log/GratiaWeb-access.log | Records of all HTTP requests received. |
| | /var/log/GratiaWeb-error.log | Records errors produced while handling HTTP requests. |
| | /var/log/GratiaWeb.out | Records all the stdout and stderr from the service. |


---# Comments
%COMMENT{type=&quot;tableappend&quot;}%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = JuanFelipeMosqueraMorales

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Trash/Trash/Integration|Monitoring|Operations|Security|Storage|Trash/Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %NO%
############################################################################################################
--&gt;
-- Main.JuanFelipeMosqueraMorales - 15 Jan 2015
