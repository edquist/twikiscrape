%DOC_STATUS_TABLE%



---+!! Install Gratia-APEL Interface
%TOC%

&lt;!-- conventions used in this document
   * Set APEL_FAQ=[[https://twiki.cern.ch/twiki/bin/view/EMI/APELFAQ][APEL FAQ and Troubleshooting]]
   * Set APEL_SERVER=[[https://wiki.egi.eu/wiki/APEL/Server][APEL Server]]
   * Set APEL_SUMMARY_RECS=[[https://wiki.egi.eu/wiki/APEL/MessageFormat#Summary_Job_Records][APEL Job Summary Records]]
   * Set EGI_PORTAL                        = [[http://accounting.egi.eu/osg.php][EGI Accounting Portal]]
   * Set EGI_PORTAL_OSG_VIEW   = [[http://accounting.egi.eu/osg.php][EGI Accounting Portal - OSG view]]
   * Set EGI_PORTAL_TIER1_VIEW = [[http://accounting.egi.eu/tier1.php][EGI Accounting Portal - Tier 1 view]]
   * Set EGI_PORTAL_TIER2_VIEW = [[http://accounting.egi.eu/tier2.php][EGI Accounting Portal - Tier 2 view]]
   * Set EGI_PORTAL_USER_VIEW = [[http://www3.egee.cesga.es/gridsite/accounting/CESGA/user/user_view.html][EGI Accounting Portal - User view]]
   * Set EGI_PORTAL_VOMEMBER_VIEW = [[https://accounting.egi.eu/user/vomem.php][EGI Accounting Portal - VO Member view]]
   * Set OIM_HOME= [[http://oim.grid.iu.edu/][OIM (OSG Information Management System)]]
   * Set MYOSG_HOME= [[http://myosg.grid.iu.edu/about][MyOSG]]
   * Set WLCG_REPORTING = [[http://gratiaweb.grid.iu.edu/gratia/wlcg_reporting][OSG WLCG Reporting]]

   * Local UCL_HOST = %URLPARAM{&quot;INPUT_HOST&quot; encode=&quot;quote&quot; default=&quot;root&quot;}%
   * Local UCL_USER = %URLPARAM{&quot;INPUT_USER&quot; encode=&quot;quote&quot; default=&quot;user&quot;}%
   * Local UCL_DOMAIN = %URLPARAM{&quot;INPUT_DOMAIN&quot; encode=&quot;quote&quot; default=&quot;opensciencegrid.org&quot;}%
   * Set TWISTY_OPTS_DETAILED = mode=&quot;div&quot; showlink=&quot;Show Detailed Output&quot; hidelink=&quot;Hide&quot; showimgleft=&quot;/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif&quot; hideimgleft=&quot;/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif&quot; remember=&quot;on&quot; start=&quot;hide&quot; 
--&gt;


%STARTINCLUDE%
%EDITTHIS%

---+ About this Document
This document is for the individual or group responsible for running the interface between Gratia and the APEL/WLCG/EGI accounting systems.
Here we describe how to install and configure the Gratia-APEL interface on a Linux machine.
When you install this service, as described here, you get the following main components:
| *Software* | *Description* |
| !MySQL client | Used to access the OSG Gratia database |
| httpd | Provides access to the interface results |
| APEL SSM | Sends updates to APEL/EGI |
| Gratia-APEL | Main software |


---+ Introduction
Accounting records collected by Gratia are forwarded to the EGI accounting system, APEL. This is important for US-LHC Tier1 and Tier2 facilities which have to demonstrate to the LHC project delivered computing resources on behalf of ATLAS, CMS and ALICE collaborations, in accordance with signed Memorandum of Understanding agreements. The software parses and analyzes Gratia accounting records for an OSG __resource_group__ , scales wall time and cpu usage into &lt;nop&gt;HepSpec2006 for the processor type, and then forwards this data to the %APEL_SERVER% at the EGI GOC

The APEL Accounting Portal at RAL has been storing CPU accounting results for WLCG.  On behalf on the ATLAS, CMS and ALICE Tier 1 and Tier 2 that are part of OSG, OSG uploads usage information from Gratia to the APEL accounting system.  This OSG data can be viewed in the 
%EGI_PORTAL_OSG_VIEW%.  APEL is using OSG __resource groups__  registered in %OIM_HOME% and viewable in %MYOSG_HOME%

---+ Requirements

---++ Host and OS
   * A host to install the Gratia Service (Pristine node desired)
   * OS is %SUPPORTED_OS%. 
   * Root access

---++ Users
At this time, _root_ user is the only one configured to run this interface.
| *User* | *Default uid* | *Comment* |
| =root= | 0 | Runs the interface (cron) and owns the service certificate and configuration files |

---++ Certificates
You will need one service certificate.  This is a requirement of the APEL/SSM protocol.  
This certificate must be registered with the EGI broker network.
You can use a host certificate but the advantage of using a service certificate allows you to port the interface to another node without
re-registering it with APEL. Instructions for requesting a certificate can be found [[Trash.ReleaseDocumentationGetHostServiceCertificates][Here]].

| *Certificate* | *User that owns certificate* | *Path to certificate* |
| Service certificate | =root= | =/etc/grid-security/gratia-apelcert.pem= &lt;br&gt; =/etc/grid-security/gratia-apelkey.pem= |


Before you can send your messages to the APEL server, you must send your certificate DN to the APEL-SUPPORT@JISCMAIL.AC.UK 
mailing list, e.g. output from running:
&lt;pre class=&quot;screen&quot;&gt;
openssl x509 -subject -noout -in your_cert_pem_file
&lt;/pre&gt;

---+ Installation Procedure

%INCLUDE{&quot;YumRepositories&quot; section=&quot;OSGRepoBrief&quot; TOC_SHIFT=&quot;+&quot;}%

%INCLUDE{&quot;InstallCertAuth&quot; section=&quot;OSGBriefCaCerts&quot; TOC_SHIFT=&quot;+&quot;}%

---++ Install the Gratia-APEL interface
:&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% yum install gratia-apel
&lt;/pre&gt;
%TWISTY{%TWISTY_OPTS_DETAILED%}%   &lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% yum install gratia-apel
Loaded plugins: kernel-module, priorities
Excluding Packages from SLF 5 base
Finished
Reducing SLF 5 base jdk to included packages only
Finished
Excluding Packages from SLF 5 security updates
Finished
Reducing SLF 5 security updates jdk only to included packages only
Finished
Excluding Packages from SL 5 base
Finished
Reducing SL 5 base jdk to included packages only
Finished
1106 packages excluded due to repository priority protections
Setting up Install Process
Examining /root/APEL-RPMS/gratia-apel-0.10-1.noarch.rpm: gratia-apel-0.10-1.noarch
Marking /root/APEL-RPMS/gratia-apel-0.10-1.noarch.rpm to be installed
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package gratia-apel.noarch 0:0.10-1 set to be updated
--&gt; Processing Dependency: fetch-crl3 for package: gratia-apel
--&gt; Processing Dependency: httpd for package: gratia-apel
--&gt; Processing Dependency: mysql for package: gratia-apel
--&gt; Processing Dependency: osg-ca-certs for package: gratia-apel
--&gt; Processing Dependency: osg-version for package: gratia-apel
--&gt; Processing Dependency: python-daemon for package: gratia-apel
--&gt; Processing Dependency: python-ldap for package: gratia-apel
--&gt; Processing Dependency: stomppy for package: gratia-apel
--&gt; Running transaction check
---&gt; Package fetch-crl3.noarch 0:3.0.7-1.el5 set to be updated
---&gt; Package httpd.x86_64 0:2.2.3-74.sl5 set to be updated
--&gt; Processing Dependency: libaprutil-1.so.0()(64bit) for package: httpd
--&gt; Processing Dependency: libapr-1.so.0()(64bit) for package: httpd
---&gt; Package mysql.x86_64 0:5.0.95-5.el5_9 set to be updated
--&gt; Processing Dependency: perl(DBI) for package: mysql
---&gt; Package osg-ca-certs.noarch 0:1.33-1.osg.el5 set to be updated
---&gt; Package osg-version.noarch 0:3.1.15-1.osg.el5 set to be updated
---&gt; Package python-daemon.noarch 0:1.5.2-3.el5 set to be updated
--&gt; Processing Dependency: python-lockfile for package: python-daemon
---&gt; Package python-ldap.x86_64 0:2.2.0-2.1 set to be updated
---&gt; Package stomppy.noarch 0:3.0.3-1.el5.1 set to be updated
--&gt; Processing Dependency: python-ssl for package: stomppy
--&gt; Running transaction check
---&gt; Package apr.x86_64 0:1.2.7-11.el5_6.5 set to be updated
---&gt; Package apr-util.x86_64 0:1.2.7-11.el5_5.2 set to be updated
--&gt; Processing Dependency: libpq.so.4()(64bit) for package: apr-util
---&gt; Package perl-DBI.x86_64 0:1.52-2.el5 set to be updated
---&gt; Package python-lockfile.noarch 0:0.8-3.el5 set to be updated
---&gt; Package python-ssl.x86_64 0:1.15-3.el5 set to be updated
--&gt; Running transaction check
---&gt; Package postgresql-libs.x86_64 0:8.1.23-6.el5_8 set to be updated
--&gt; Finished Dependency Resolution
Beginning Kernel Module Plugin
Finished Kernel Module Plugin

Dependencies Resolved

================================================================================
 Package          Arch    Version             Repository                   Size
================================================================================
Installing:
 gratia-apel      noarch  0.10-1              /gratia-apel-0.10-1.noarch   28 M
Installing for dependencies:
 apr              x86_64  1.2.7-11.el5_6.5    sl-base                     119 k
 apr-util         x86_64  1.2.7-11.el5_5.2    sl-base                      79 k
 fetch-crl3       noarch  3.0.7-1.el5         epel                         45 k
 httpd            x86_64  2.2.3-74.sl5        fermi-security              1.3 M
 mysql            x86_64  5.0.95-5.el5_9      fermi-security              4.9 M
 osg-ca-certs     noarch  1.33-1.osg.el5      osg                         290 k
 osg-version      noarch  3.1.15-1.osg.el5    osg                         3.8 k
 perl-DBI         x86_64  1.52-2.el5          sl-base                     605 k
 postgresql-libs  x86_64  8.1.23-6.el5_8      fermi-security              197 k
 python-daemon    noarch  1.5.2-3.el5         epel                         29 k
 python-ldap      x86_64  2.2.0-2.1           sl-base                     123 k
 python-lockfile  noarch  0.8-3.el5           epel                         18 k
 python-ssl       x86_64  1.15-3.el5          epel                         26 k
 stomppy          noarch  3.0.3-1.el5.1       epel                         38 k

Transaction Summary
================================================================================
Install      15 Package(s)
Upgrade       0 Package(s)

Total size: 35 M
Total download size: 7.7 M
Downloading Packages:
--------------------------------------------------------------------------------
Total                                           7.2 MB/s | 7.7 MB     00:01
Running rpm_check_debug
Running Transaction Test
Finished Transaction Test
Transaction Test Succeeded
Running Transaction
Installing     : apr                                                     1/15 
Installing     : python-ldap                                             2/15 
Installing     : python-ssl                                              3/15 
Installing     : postgresql-libs                                         4/15 
Installing     : apr-util                                                5/15 
Installing     : httpd                                                   6/15 
Installing     : perl-DBI                                                7/15 
Installing     : mysql                                                   8/15 
Installing     : stomppy                                                 9/15 
Installing     : python-lockfile                                        10/15 
Installing     : python-daemon                                          11/15 
Installing     : osg-ca-certs                                           12/15 
Installing     : fetch-crl3                                             13/15 
Installing     : osg-version                                            14/15... in pre
Installing     : gratia-apel                                            15/15 

Installed:
  gratia-apel.noarch 0:0.10-1                                                   

Dependency Installed:
  apr.x86_64 0:1.2.7-11.el5_6.5            apr-util.x86_64 0:1.2.7-11.el5_5.2
  fetch-crl3.noarch 0:3.0.7-1.el5          httpd.x86_64 0:2.2.3-74.sl5
  mysql.x86_64 0:5.0.95-5.el5_9            osg-ca-certs.noarch 0:1.33-1.osg.el5
  osg-version.noarch 0:3.1.15-1.osg.el5    perl-DBI.x86_64 0:1.52-2.el5
  postgresql-libs.x86_64 0:8.1.23-6.el5_8  python-daemon.noarch 0:1.5.2-3.el5
  python-ldap.x86_64 0:2.2.0-2.1           python-lockfile.noarch 0:0.8-3.el5
  python-ssl.x86_64 0:1.15-3.el5           stomppy.noarch 0:3.0.3-1.el5.1

Complete!
&lt;/pre&gt; %ENDTWISTY%

---+ Configure

---++ Configure SSM using test broker
When the SSM software is initially installed, the default configuration is set to talk to the SSM
test broker/services and SSM needs to be run once to create some directories.

You will need the service certificate you previously installed and will need to modify the SSM config files
for that service certificate:

__/etc/gratia-apel/ssm/ssm.cfg__
&lt;pre class=&quot;file&quot;&gt;
   :
################################################################################
# Required: Certificate configuration
[certificates]
#certificate: /etc/grid-security/hostcert-ssm.pem
#key: /etc/grid-security/hostkey-ssm.pem
certificate: %RED%your_service_cert_file%ENDCOLOR%
key: /etc/grid-security/%RED%your_service_cert_file%ENDCOLOR%
cadir: /etc/grid-security/certificates
check-crls: false
   :
&lt;/pre&gt;

SSM needs to be run once before attempting to send anything. 
This invocation will create the __/var/lib/gratia-apel/messages__ sub-directories for SSM.
It is basically just a &quot;ping&quot; to the broker to verify basic communication.  Nothing is sent.
&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% /usr/share/gratia-apel/ssm/ssm_master.py /etc/gratia-apel/ssm/ssm.cfg
&lt;/pre&gt;
__/var/log/gratia-apel/ssm.log__ output on success:%BR%
%TWISTY{%TWISTY_OPTS_DETAILED%}%   &lt;pre class=&quot;file&quot;&gt;
2013-04-09 10:15:34,696 - SSM - INFO - Starting the SSM...
2013-04-09 10:15:34,713 - SSM - INFO - Running the SSM once only.
2013-04-09 10:15:34,714 - SSM - INFO - BDII URL: ldap://lcg-bdii.cern.ch:2170
2013-04-09 10:15:34,714 - SSM - INFO - BDII broker network: TEST-NWOB
2013-04-09 10:15:35,960 - SSM - DEBUG - Found broker in BDII: test-msg02.afroditi.hellasgrid.gr:6163
2013-04-09 10:15:36,124 - stomp.py - INFO - Established connection to host test-msg02.afroditi.hellasgrid.gr, port 6163
2013-04-09 10:15:36,124 - SSM - INFO - Connecting: (&#39;test-msg02.afroditi.hellasgrid.gr&#39;, 6163)
2013-04-09 10:15:36,126 - SSM - INFO - The SSM will not run as a consumer.
2013-04-09 10:15:36,126 - SSM - INFO - The SSM will run as a producer.
2013-04-09 10:15:36,126 - SSM - DEBUG - I will be a producer, my ack queue is: /topic/global.accounting.cpu.client.fermicloud139.fnal.gov.2315
2013-04-09 10:15:36,296 - SSM - INFO - Connected
2013-04-09 10:15:36,325 - SSM - INFO - The SSM started successfully.
2013-04-09 10:15:36,326 - SSM - DEBUG - Pinging
2013-04-09 10:15:36,326 - SSM - DEBUG - Sending ping
2013-04-09 10:15:36,326 - SSM - INFO - All outgoing messages have been processed.
2013-04-09 10:15:36,326 - SSM - INFO - SSM connection ended.
2013-04-09 10:15:36,326 - SSM - INFO - The SSM has shut down.
&lt;/pre&gt; %ENDTWISTY%

The necessary SSM directories will have now been created in __/var/lib/gratia-apel/messages__:
&lt;pre class=&quot;rootscreen&quot;&gt;
drwxr-xr-x 2 root root 4096 Mar  6 10:35 accept
drwxr-xr-x 2 root root 4096 Mar  6 10:35 ack
drwxr-xr-x 2 root root 4096 Mar  6 10:35 incoming
%BLUE%drwxr-xr-x 2 root root 4096 Mar  6 10:35 outgoing%ENDCOLOR%
drwxr-xr-x 2 root root 4096 Mar  6 10:35 reject
&lt;/pre&gt;
The __./outgoing__ directory is the only one used by this interface.

---++ Configure httpd
The interface software creates a set of __.html__ and __.dat__ available via the __httpd__ service on your node.
This allow you to view the data collected and sent to APEL/EGI more easily.  
The %WLCG_REPORTING% view of the interfaced accounting data uses these __.dat__ files for it&#39;s display.
The default port for httpd is 80.  If this port is not accessible from outside your node, it will have to be changed.

__/etc/httpd/conf/httpd.conf__
&lt;pre class=&quot;file&quot;&gt;
Listen = %RED%80%ENDCOLOR%
&lt;/pre&gt;

During the RPM installation, the files used for the %WLCG_REPORTING% view were installed in __/var/lib/gratia-apel/webapps__.
This is basically the history of the data sent to APEL/EGI by this interface.  Each time the interface is run, it creates a file of the latest
updates in this directory.  There is a script that runs in the cron entry called __create_apel_index.sh__ that creates the __index.html__ file
for the most recent entries.  This must be run:
&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT%  /usr/share/gratia-apel/create_apel_index.sh
&lt;/pre&gt;

---++ Configure Gratia-APEL for Gratia access
The only configuration for the gratia-apel configuration is for read access to the OSG Gratia database.
This should be __read-only__ access.

__/etc/gratia-apel/lcg-db.conf__
&lt;pre class=&quot;file&quot;&gt;
GratiaUser     %RED%gratia_user_id%ENDCOLOR%
GratiaPswd    %RED%gratia_user_password%ENDCOLOR%
&lt;/pre&gt;
__Note:__  The Gratia database accessed is generally always production even when doing any testing.
The load is not that significant as is is read only and uses a very simple query on a small subset of the
data (the summary tables).  

---++ Test against the APEL-SSM test brokers
As mentioned earlier, the initial installation of the SSM interface defaults to a test
broker.  So, it is best to make an initial run against that environment.
Cut/paste the cron entry in __/etc/cron.d/gratia-apel-cron__ for the current month
to the command line and executed it:
&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT%  [ ! -f /var/lock/subsys/gratia-apel-cron ] || (cd /usr/share/gratia-apel ; \
                    ./lcg.sh --config=/etc/gratia-apel/lcg.conf --date=current --update \
                     &amp;&amp; ./create-apel-index.sh /etc/gratia-apel/lcg.conf) 
&lt;/pre&gt;

---+ Configuring for access to production APEL
When you are satisfied, with the installation in the test environment, you will need to modify the APEL SSM __ssm.cfg__
file to connect to the production APEL brokers.

__Test APEL__
&lt;pre class=&quot;rootscreen&quot;&gt;
[broker]
broker-network: TEST-NWOB
[producer]
consumer-dn: /C=UK/O=eScience/OU=CLRC/L=RAL/CN=raptest.esc.rl.ac.uk 
&lt;/pre&gt;
__Production APEL__
&lt;pre class=&quot;rootscreen&quot;&gt;
[broker]
broker-network: PROD
[producer]
consumer-dn: /C=UK/O=eScience/OU=CLRC/L=RAL/CN=rap.esc.rl.ac.uk
&lt;/pre&gt;

---+ Services
The following sections describe how to start/stop the required services and how to 
enable/disable them when your system is powered on.
---++ Starting and Enabling Services
%STARTSECTION{&quot;StartGratiaApelServices&quot;}%
To start/enable the Gratia-APEL interface:
   1. %INCLUDE{&quot;InstallCertAuth&quot; section=&quot;OSGBriefFetchCrlStart&quot;}%
   1. __httpd__  service:&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% /sbin/service httpd start
%UCL_PROMPT_ROOT% /sbin/chkconfig httpd on
&lt;/pre&gt;
   1. __gratia_apel_cron__ service&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% /sbin/service gratia-apel-cron start 
%UCL_PROMPT_ROOT% /sbin/chkconfig gratia-apel-cron on
&lt;/pre&gt;
%ENDSECTION{&quot;StartGratiaApelServices&quot;}%

---++ Stopping and Disabling Services
%STARTSECTION{&quot;StopGratiaApelServices&quot;}%
To stop/disable the Gratia-APEL interface:
   1. %INCLUDE{&quot;InstallCertAuth&quot; section=&quot;OSGBriefFetchCrlStop&quot;}%
   1. __httpd__  service:&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% /sbin/service httpd stop
%UCL_PROMPT_ROOT% /sbin/chkconfig httpd off
&lt;/pre&gt;
   1. __gratia_apel_cron__ service&lt;pre class=&quot;rootscreen&quot;&gt;
%UCL_PROMPT_ROOT% /sbin/service gratia-apel-cron stop
%UCL_PROMPT_ROOT% /sbin/chkconfig gratia-apel-cron off
&lt;/pre&gt;
%ENDSECTION{&quot;StopGratiaServices&quot;}%






---+ Troubleshooting
---++ Configuration Files

&lt;pre class=&quot;rootscreen&quot;&gt;
%BLUE%&lt;u&gt;&lt;b&gt;/etc/gratia-apel&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-rw-r-- 1 root root  588 Mar  6 10:35 lcg-db.conf
-rw-rw-r-- 1 root root 5205 Mar  6 10:27 lcg-reportableSites
drwxr-xr-x 2 root root 4096 Mar  6 10:35 lcg-reportableSites.history
-rw-rw-r-- 1 root root   30 Mar  6 10:27 lcg-reportableVOs
-rw-rw-r-- 1 root root 3033 Mar 19 08:43 lcg.conf
drwxr-xr-x 2 root root 4096 Apr  4 09:17 ssm
 
%BLUE%&lt;u&gt;&lt;b&gt;/etc/gratia-apel/lcg-reportableSites.history&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-rw-r-- 1 root root 12315 Mar  6 10:27 lcg-reportableSites.200901
     : (one for each month)
-rw-rw-r-- 1 root root  5205 Mar  6 10:27 lcg-reportableSites.201402
-rw-rw-r-- 1 root root  5205 Mar  6 10:27 lcg-reportableSites.201403

%BLUE%&lt;b&gt;&lt;u&gt;/etc/gratia-apel/ssm&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-r--r-- 1 root root 4211 Jun 28  2012 README
-rw-r--r-- 1 root root 3804 Mar 25 11:53 ssm.cfg
-rw-r--r-- 1 root root  648 Mar  6 10:27 ssm.log.cfg
-rw-r--r-- 1 root root  256 May  2  2012 ssm.logrotate
&lt;/pre&gt;

&lt;pre class=&quot;rootscreen&quot;&gt;
%BLUE%&lt;u&gt;&lt;b&gt;/etc/httpd/conf&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-r--r-- 1 root root 33740 Mar  6 10:35 httpd.conf
&lt;/pre&gt;

---++Log Files
&lt;pre class=&quot;rootscreen&quot;&gt;
%BLUE%&lt;u&gt;&lt;b&gt;/var/log/gratia-apel&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-rw-r-- 1 root root  58123 Feb 07 08:53 2013-01.log
  : (one per month)
-rw-rw-r-- 1 root root  58123 Mar 07 08:53 2014-02.log
-rw-rw-r-- 1 root root 170289 Mar 26 12:07 2014-03.log
-rw-r--r-- 1 root root  82936 Mar 26 12:01 ssm.log
&lt;/pre&gt;

The httpd logs are useful if the %WLCG_REPORTING% system has access issues.
&lt;pre class=&quot;rootscreen&quot;&gt;
%BLUE%&lt;u&gt;&lt;b&gt;/var/log/httpd&lt;/u&gt;&lt;/b&gt;%ENDCOLOR%
-rw-r--r-- 1 root root    0 Mar 30 04:02 access_log
-rw-r--r-- 1 root root  250 Mar 30 04:02 error_log
&lt;/pre&gt;


---+ How to get Help?
To get assistance, please use [[HelpProcedure][Help Procedure]].

---+ References
Gratia Documents
   * [[Accounting/WebHome][Accounting Web/The Gratia project]]
   * [[Accounting/GratiaInterfacesApelLcg][Gratia Interfaces- APEL/WLCG]]
   * [[Accounting/ApelWlcgDevelopersCorner][APEL/WLCG Developers Corner twiki]].

APEL Documents
   * [[https://wiki.egi.eu/wiki/APEL/SSM][APEL SSM]]
   * [[https://wiki.egi.eu/wiki/APEL/Server][APEL/Servier]]


---+ Comments
%COMMENT{type=&quot;tableappend&quot;}%


%STOPINCLUDE%

&lt;!-- MAJOR UPDATES
For significant updates to the topic, consider adding your &#39;signature&#39; (beneath this editing box) !--&gt;
---++!! Major updates
&lt;!--Future editors should add their signatures beneath yours!--&gt;
-- Main.JohnWeigand - 08 Apr 2013

