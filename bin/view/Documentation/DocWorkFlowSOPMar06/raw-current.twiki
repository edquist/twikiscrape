%TOC%

---+ Documentation Workflow (WIP 28Mar06)

OED  _documentation_: %GREEN% 3b. The accumulation, classification, and dissemination of information; the material so collected. %ENDCOLOR%

Perhaps &quot;Documentation Workflow&quot; is redundant.

---++ Categories of Documentation
They don&#39;t all have the same process so let&#39;s categorize the documentation.
I think these are the categories we have today, and we may want to refine
the categories in the future.
   * _Published_ - The material we think is complete, final and accurate, and usually has access control on it. Usually about describing the state of the Consortium or the state of a software release. E.g. web pages under www.opensciencegrid.org, some documents declared published in the !DocDB. Decision to publish made by management or at the osg-docs meetings.
   * _ITB_ - software, service and instructional material under active development. Generally loose access control. A major product of the Trash/Trash/Integration activity.
   * _Release Prep_ - also called provisioining, material being prepared to be published for a particular OSG software &amp; service release. Controlled access by the Provisioning leads.
   * _Draft_ - other material being prepared but not yet published. Usually controlled by author.
   * _Working_ - material usually for the &quot;internal&quot; business of some group, like the current page you are reading. Usually loose access control. Typically pages on the OSG TWiki, and email messages.
   

---++ Categories of Readers
They don&#39;t all have the same audience so let&#39;s  categorize the types of readers.

   * _Public_ - the general public
   * _Users_ - members of VOs using OSG
   * _VOs_ - VO managers or administrators who deal with the interaction of the VO with OSG
   * _Administrators_ - also called site admins, people who manage or administer a resource or service connected to OSG
   * _Participants_ - someone actively involved with the functioning of OSG, includes OSG Facility, support center people, many of the VO members, and resource/service providers, and some middleware developers.

---++ Use Cases

   1. _Draft_ material developed on osg.grid.iu.edu/dev and _published_ on www.opensciencegrid.org
   2. Material developed for a software release, goes from _ITB_ to _Release Prep_ to _Published_
      * (a) single document
      * (b) provisioning - aggregation of inter-dependant documents, as done for 0.4.0
      * (c) provisioning - aggregation of inter-dependant documents, as planned for 0.4.1
   3. Meeting agenda &amp; minutes are posted as _Working_ material.

---++Procedures

Note that the draft procedures described below do not yet have the various timescales included that may apply.

---+++ Case 1: New document: draft and publish

%ATTACHURL%/docs-mar06-uc1.gif

   1. Decide to create and publish new document
      * Who decides?
      * Description is sent to osg-docs mail list.
   2. Purpose and planning
      * The purpose of document is discussed at osg-docs meeting
      * A location for publication is chosen, i.e., where under www.opensciencegrid.org
      * A primary author is chosen/appointed/volunteered,...
      * A deadline/schedule is defined
   3. Create Template
      * If it is a new page on the www.opensciencegrid.org mambo site then then administrator creates a new template page on the development site (osg.grid.iu.edu/dev) and notifies the primary author.
   4. Write/edit document
      * the primary author writes the first version of the document, or revises an existing version, on the development site
      * author sends mail to osg-docs when it is ready for review
   5. Review document
      * review of documetn handled by email on osg-docs list or at osg-docs meeting
   6. Decide if ready for publication
      * A decision is made at an osg-docs meeting, or on the osg-docs email list
      * if ready then it will be published
      * if not ready then go back to step 4 and continue to edit
   7. Publish
      * mambo web pages are published from the dev site to the main site at the next db sync
      * the publish flag for mambo pages is not set until teh decision to publish happens so a draft page is not visible on the production web even if it exists in the production db

---+++ Case 2a: Prepare single release document

%ATTACHURL%/docs-mar06-uc2a.gif

   1. Decide a document is needed
      * usually in the ITB context
   2. Write Readiness Plan
      * If document is stimulated by new service then new readiness plan is needed
      * Document might not be service specific, such as Client Install Guide, in which case this step is only an abstract of the needed document for an Trash/Trash/Integration meeting.
   3. Decide if Ready for OTB
      * Decision at ITB meeting or on osg-int mail list that document is needed
      * Identify primary author
      * Define deadline/schedule
      * Decide location of document on Trash/Trash/Integration TWiki
   4. Write/edit document
      * the primary author writes or edits the document
   5. Review document
      * Depending on length &amp; complexity of the document it may be reviewed at an Trash/Trash/Integration meeting, or there may be people who volunteer/get assigned to review document and report at meeting or on email list
   6. Decide if Ready for Provisioning
      * Decide at an Trash/Trash/Integration meeting if document is ready as a description for a specific software release
      * If ready, the ITB document is frozen pending receipt by Provisioning
      * If not ready, the authors update the document, at step 4 and process continues.
   7. Ready for Provisioning
      * A notice that this specific document is ready is sent to Provisioning

---+++ Case 2b: Provisioning documents (as of 0.4.0)

%ATTACHURL%/docs-mar06-uc2b.gif

   1. Receive notice from Trash/Trash/Integration that documents are ready
      * establishing the provisioning workforce/workplan for a release happens before this
   2. Copy from ITB to Provisioning location
      * Most (all?) documents are copied from the Trash/Trash/Integration TWiki to the Provisioning TWiki
      * Notice is sent to Trash/Trash/Integration when documents have been copied
   3. Edit
      * documents are modified to fix links to other release documents that may have been confused by the copy processes
      * style and/or formatting changes to fit publication standards (do we have publication standards?)
      * done by provisioning workforce
      * iterations of edits must be fed back to ITB documents
   4. Verify links &amp; consistency
      * after all documents have been editted, perform a check that all links are correct and internally consistent
      * done by provisioning workforce
   5. Review documents
      * a quick review to verify the link consistency and assure that edits have not adversely affected content of documents
      * performed by people outside the provisioning workforce
      * for 0.4.0 this happened only by few people incl. provisioning folks
      * because of copy from ITB, changes now must get fed back to ITB
   6. Decide if documents are ready for publication
      * (who does this?  Integration?)
      * for 0.4.0 this was an implicit step by provisioning people
   7. Prepare publication point
      * Decide where documents get published and what modifications are necessary to existing published documentation
      * Must include release identification
      * osg-docs prepares mambo pages, links
      * provisioning people handled interface to KB
   8. Copy to publication point
      * copy the documents from the Provisioning TWiki to the publication point
      * done by the provisioning workforce
   9. Publish
      * documents are effectivley published at this point
      * feedback on corrections are handled as ongoing fixes to living documents
   10. Feedback from users
      * comments &amp; corrections to documents are sent back to operations
   11. Fix
      * fix any mistakes
      * propogate changes back to ITB


---+++ Case 2c: Provisioning documents (as of 0.4.1)

%ATTACHURL%/docs-mar06-uc2c.gif

   1. Get notice from ITB that documents are ready for provisioning
   2. Verify links &amp; consistency
      * provisioning people check links, verify internal consistency of document set
      * any necessary formatting changes to prepare for copying from TWiki to publication point
   3. Review documents
      * people are identified to review the documents
      * and they do the review
   4. Ready for publication?
      * who decides when ready for publication? provisioning?, ITB?, Deployment?
   5. Edits
      * any necessary changes to documents are applied in place on the ITB web site, avoiding a copy step from previous provisioning exercizes.
   6. Prepare publication point
      * decision about what location to publish into
      * prepare index pages that guide reader to new release version documents
   7. Copy to publication point
      * documents are copied from ITB TWiki to publication point, which is a TWiki web with URL TBD for 0.4.1
      * copy may include edits to fix links if not taken care of in step 2.
   8. Published
      * documents are now published, on a TWiki web
      * announcement of release publications goes somewhere
   9. Feedback from users
      * comments and corrections from users given to operations
   10. Fix
      * someone? applies fixes to documents in place
      * and sends notice of changes back to ITB

---+++ Case 3: Meetinga agenda &amp; minutes

%ATTACHURL%/docs-mar06-uc3.gif

   1. Decide to hold meeting
      * may be ad-hoc, may be regular schedule
   2. Write &amp; post agenda
      * the convener writes a draft agenda and posts it on web (usually in place on TWiki)
   3. Send meeting announcement
      * convener sends meeting announcement to appropriate mail lists
      * how far in advance?
   4. Participants post material on agenda
      * meeting participants post relevent material or links to material on agenda page
      * this can include updates to agenda topics
      * participants represented by &quot;Mail list&quot; on diagram
   5. Hold meeting, edit minutes
      * hold the meeting
      * convener or other minute taker records minutes, often by editing the TWiki agenda in place
      * should we have &quot;standards&quot; for minutes, i.e., attendees, logistics, ...
   6. Minutes are published
      * a NOP on the TWiki
   7. Send notice of minutes
      * send notice minutes are ready to appropriate mail lists
   8. Corrections
      * participants can apply corrections to the minutes


-- Main.DougOlson - 13 Mar 2006

 

