---+!! Glossary C
%DOC_STATUS_TABLE%

This topic holds the terms beginning with &quot;C&quot; and is included in the GlossaryOfTerms topic.

%STARTINCLUDE%
%INCLUDE{ &quot;GlossaryJumpIndex&quot; }%

%EDITTHIS%

   $ CA: _See_ [[GlossaryOfTerms#DefsCA][Certificate Authority]].

#DefsCampusGrid
   $ Campus Grid: A [[GlossaryOfTerms#DefsGrid][Grid]] operated within the context of a single [[GlossaryOfTerms#DefsFacility][Facility]] (such as a university of a national lab).

   $ CE: _See_ [[GlossaryOfTerms#DefsComputeElement][Compute Element]].

#DefsCEMon
   $ CEMon:  The CEMon service provides a common interface for publishing information about a Compute Element in your network.  The framework can be configured with multiple sensors for collecting different kinds of data, such as the [[GlossaryOfTerms#DefsGenericInformationProvider][Generic Information Provider]] (GIP). The information can be published in multiple formats, such as the LDAP Data Interchange Format [[GlossaryOfTerms#DefsLDIF][LDIF]] and Condor !ClassAds.  In OSG it is an important part if the Information Service (IS): the CEMons running on the resources collect information from the GIP and push it to the Resource Selection Service (!ReSS) and to the CEMon Consumer at the Grid Operations Center [[GlossaryOfTerms#DefsGridOperationsCenter][GOC]] that in turn publishes the information to the both the OSG BDII and the WLCG Interoperability BDII.  _See also_ [[http://grid.pd.infn.it/cemon/field.php?n=Main.AboutCEMon][About CEMon]].

   $ CE-SE binding:  Job scheduling often requires both a compute element (CE) to run the job and a Storage Element (SE) to provide for an input or output storage extent. Currently , there are static relationships between individual CEs and SEs set by Site Admins. The CE-SE bind schema (part of GLUE schema) aims at providing the means for publishing such a relationship with eventual per-pair data. At the moment, the published information is limited to the local mount point on the CE pointing to the SE&#39;s storage space.

#DefsCeStorage
   $ CE Storage:  Disk spaces of [[GlossaryOfTerms#DefsStorageElement][Storage Elements]] accessible from within a [[GlossaryOfTerms#DefsComputeElement][Compute Element]].

#DefsConsumer
   $ Consumer: A [[GlossaryOfTerms#DefsUser][User]] or [[GlossaryOfTerms#DefsAgent][Agent]] who makes use of an available [[GlossaryOfTerms#DefsResource][Resource]] or Agent or Service.

#DefsCPUHours
   $ CPU Hour:  Used to measure processing delivered by [[GlossaryOfTerms#DefsComputeElement][Compute Elements]].  A Computer Processing Unit (CPU) hour is one CPU executing a job for one hour of wall clock time.  To get a comparative measure, the hours must be normalized by the relative processing speeds of the CPUs.  

#DefsCertificate
   $ Certificate:  A public-key certificate is a digitally signed statement from one entity (e.g., a certificate authority), saying that the public key (and some other information) of another entity (e.g., the grid user) has some specific value.  The X.509 standard defines what information can go into a certificate, and describes how to write it down (the data format). Read more at Documentation.CertificateWhatIs.

#DefsCRL
   $ Certificate Revocation List (CRL):  A &lt;b&gt;C&lt;/b&gt;ertificate &lt;b&gt;R&lt;/b&gt;evocation &lt;b&gt;L&lt;/b&gt;ist is a list of [[GlossaryOfTerms#DefsCertificate][Certificates]] that have been revoked and should not be relied upon. The list enumerates revoked certificates along with the reason(s) for revocation. The issuer and the issue date are also included. In addition, each list contains a proposed date for its next release. When a potential user attempts to access a server, the server allows or denies access based on the CRL entry for that particular user.  For more information consult [[http://en.wikipedia.org/wiki/Revocation_list][Wikipedia]].

#DefsCA
   $ Certificate Authority:  An entity that issues certificates for use by other parties. The OSG recognizes certificates issued by a number of certificate authorities.  _See_ Documentation.CertificateWhatIs.   For more background, consult [[http://en.wikipedia.org/wiki/Certificate_authority][Wikipedia]].

   $ Cloud: A set of [[GlossaryOfTerms#DefsService][Services]], Providers, [[GlossaryOfTerms#DefsResource][Resources]] and [[GlossaryOfTerms#DefsPolicy][Policies]] providing a single point of access for all the computing needs of [[GlossaryOfTerms#DefsConsumer][Consumers]]. The resources are not necessarily owned by the consumer, but may be leased or otherwise accessed.

   $ Cluster: A networked group of worker nodes (plus head node, if applicable) at a site.  In the GLUE schema, a cluster is a container that groups together subclusters, or computer nodes. A cluster may be referenced by more then one computing element (CE).

   $ Community (Cyber-)Infrastructure: A set of services and software that has been established by a community to meet the needs of its members. The management of the distributed infrastructure is the responsibility of the community; and the resources are all, or nearly all, owned by the [[GlossaryOfTerms#DefsVo][Virtual Organization]] and its members.

&lt;!--   $ CMS: Compact Muon Solenoid experiment at the LHC at CERN (http://cmsinfo.cern.ch/Welcome.html/).
--&gt;
#DefsComputeElement
   $ Compute Element (CE): Compute element  is a term used in Grids to denote any kind of computing interface, e.g., a job entry or batch system.  A compute element consists of one or more similar machines, managed by a single scheduler/job queue, which is set up to accept and run grid jobs.  The machines do not need to be identical, but must have the same OS and the same processor architecture.  In OSG, the CE runs the bulk of the OSG software stack.  _See_ [[Documentation.Release3.SitePlanning][Site Planning]].

   $ Compute Hours: _See_ [[GlossaryOfTerms#DefsCPUHours][CPU Hour]]

   $ CRL: _See_ [[GlossaryOfTerms#DefsCRL][Certificate Revocation List]].

   $ CVMFS: CernVM File System (CVMFS) is a network file system developed by CERN, based on HTTP and optimized to deliver experiment software in a fast, scalable, and reliable way. 

&lt;!-- from forrest, enstore
---
   $ cern wrapper&lt;a name=&quot;DefsCernWrapper&quot;&gt;&lt;/a&gt;: A [[GlossaryOfTerms#DefsFileFamilyWrapper][file family wrapper]] that accommodates data files up to (10&lt;sup&gt;21&lt;/sup&gt; &amp;#8211; 1) bytes. It matches an extension to the ANSI standard, as proposed by CERN, and allows data files written at Fermilab to be readable by CERN, and vice-versa. _See_ file family wrapper. 
   $ collective layer&lt;a name=&quot;DefsCollectiveLayer&quot;&gt;&lt;/a&gt;: fourth of five layers to support grid applications. Includes [[GlossaryOfTerms#DefsReplicaCatalog][Replica Catalog]], [[GlossaryOfTerms#DefsReplicaSelection][Replica Selection]], [[GlossaryOfTerms#DefsRequestPlanning][Request Planning]], [[GlossaryOfTerms#DefsRequestExecution][Request Execution]].
   $ command pipelining&lt;a name=&quot;DefsCommandPipelining&quot;&gt;&lt;/a&gt;: a process in which commands are broken into several smaller steps, that may be executed in sequence using different components of the CPU, meanwhile allowing others components of the CPU to start executing the next command in parallel. 
   $ Compute Element&lt;a name=&quot;DefsComputeElement&quot;&gt;&lt;/a&gt;: An element capable of running a user job.
   $ condor&lt;a name=&quot;DefsCondor&quot;&gt;&lt;/a&gt;: a project at the University of Wisconsin-Madison. &lt;sup&gt;2&lt;/sup&gt;a specialized workload management system for compute-intensive jobs that extends batch features to allow use of idle CPUs or clusters of CPUs. _See also_ [[http://www.cs.wisc.edu/condor/description.html][Condor website]].
   $ configuration server (CS)&lt;a name=&quot;DefsConfigurationServer&quot;&gt;&lt;/a&gt;: Maintains and distributes the information about Enstore system configuration, such as the location and parameters of each Enstore component and/or server. 
   $ connectivity layer&lt;a name=&quot;DefsConnectivity&quot;&gt;&lt;/a&gt;: second of five layers to support grid applications. Includes communication, authorization, delegation, etc.
   $ control channel (in GridFTP)&lt;a name=&quot;DefsControlChannel&quot;&gt;&lt;/a&gt;: a low bandwidth, encrypted and integrity-protected TCP link over which [[GlossaryOfTerms#DefsGridFtp][GridFTP]] commands and responses flow.
   $ cpio_odc wrapper&lt;a name=&quot;DefsCpio_odcWrapper&quot;&gt;&lt;/a&gt;: A [[GlossaryOfTerms#DefsFileFamilyWrapper][file family wrapper]] which allows the file to be dumpable via cpio. This wrapper has a file length limit of (8G &amp;#8211; 1) bytes. _See also:_ file family wrapper. 
   $ crc (Cyclic Redundancy Check)&lt;a name=&quot;DefsCrc&quot;&gt;&lt;/a&gt;: Used to verify that data has been stored properly. It is used like a checksum, but is less prone to multiple-bit errors. During a transfer, both sides calculate the crc and compare the values, unless the (two dashes)no-crc option is specified. Enstore uses a zero seed Adler-32 crc. 
   $ cwd&lt;a name=&quot;DefsCwd&quot;&gt;&lt;/a&gt;: current working directory 
   $ cycle stealing&lt;a name=&quot;DefsCycleStealing&quot;&gt;&lt;/a&gt;: harnessing the unused cycles of desktop workstations [[http://www.cs.wisc.edu/condor/myths.html][REF]]
--&gt;
%COMMENT{type=&quot;tableappend&quot;}%
%STOPINCLUDE%

&lt;!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesWeichel

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = General

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = Student

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = IgorSfiligoi
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
--&gt;

Main.JamesWeichel - 11 Feb 2011
